<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leon's Blogging]]></title>
  <link href="https://mgleon08.github.io/atom.xml" rel="self"/>
  <link href="https://mgleon08.github.io/"/>
  <updated>2019-06-04T19:08:23+08:00</updated>
  <id>https://mgleon08.github.io/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Postgres]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/04/postgres/"/>
    <updated>2019-06-04T18:56:17+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/04/postgres</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>install</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">postgresql</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Initdb</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">initdb</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="k">local</span><span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">postgres</span> <span class="o">-</span><span class="n">E</span> <span class="n">utf8</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Connect postgresql</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create DB</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">createdb</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">-- into postgres</span>
</span><span class='line'><span class="n">psql</span>
</span><span class='line'><span class="c1">-- show all database</span>
</span><span class='line'><span class="o">/</span><span class="n">l</span>
</span><span class='line'><span class="c1">-- create database</span>
</span><span class='line'><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">dbname</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Connect to database</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span>
</span><span class='line'><span class="err">\</span><span class="n">l</span>
</span><span class='line'><span class="err">\</span><span class="k">c</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dump db</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">pg_dump</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span> <span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">filename</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Import db</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span> <span class="o">&lt;</span><span class="n">filename</span><span class="o">&gt;</span> <span class="o">&lt;</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Connect to a remote database</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span> <span class="o">-</span><span class="n">h</span> <span class="o">&lt;</span><span class="k">host</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">p</span> <span class="o">&lt;</span><span class="n">port</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">U</span> <span class="o">&lt;</span><span class="n">username</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create User</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">createuser</span> <span class="n">testuser</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- or</span>
</span><span class='line'>
</span><span class='line'><span class="c1">--show users</span>
</span><span class='line'><span class="o">/</span><span class="n">du</span><span class="o">+</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">USER</span> <span class="o">&lt;</span><span class="n">username</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'><span class="k">GRANT</span> <span class="k">ALL</span> <span class="k">PRIVILEGES</span> <span class="k">ON</span> <span class="k">DATABASE</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span> <span class="k">TO</span> <span class="o">&lt;</span><span class="n">username</span><span class="o">&gt;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show Table</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="err">\</span><span class="n">dt</span><span class="o">+</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- or</span>
</span><span class='line'>
</span><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">pg_catalog</span><span class="p">.</span><span class="n">pg_tables</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show column</h2>

<pre><code class="sql">\d+ &lt;tablename&gt;

-- or

SELECT
 COLUMN_NAME
FROM
 information_schema.COLUMNS
WHERE
 TABLE_NAME = '&lt;tablename&gt;';
</code></pre>

<h2>other</h2>

<p> <a href="https://stackoverflow.com/questions/15537709/what-does-do-in-postgresql">syntax - What does :: do in PostgreSQL? - Stack Overflow</a></p>

<h2>Tool</h2>

<ul>
<li><a href="https://www.pgcli.com/">pgcli</a> - Pgcli is a command line interface for Postgres with auto-completion and syntax highlighting.</li>
<li><a href="https://eggerapps.at/postico/">Postico</a> - GUI client on mac</li>
<li><a href="https://github.com/pressly/goose">goose</a> - Goose database migration tool</li>
<li><a href="https://gist.github.com/Kartones/dd3ff5ec5ea238d4c546">postgres-cheatsheet</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Mock]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/04/golang-mock/"/>
    <updated>2019-06-04T18:53:23+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/04/golang-mock</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Simple code use to test</h3>

<p><code>string.go</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Stringer</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span><span class="p">(</span><span class="nx">hi</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">human</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">h</span> <span class="o">*</span><span class="nx">human</span><span class="p">)</span> <span class="nx">Name</span><span class="p">(</span><span class="nx">hi</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">say</span> <span class="o">:=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%v %v&quot;</span><span class="p">,</span> <span class="nx">hi</span><span class="p">,</span> <span class="nx">h</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">say</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">h</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">human</span><span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Leon&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">SayName</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">SayName</span><span class="p">(</span><span class="nx">people</span> <span class="nx">Stringer</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">people</span><span class="p">.</span><span class="nx">Name</span><span class="p">(</span><span class="s">&quot;hi&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>create mock data</h3>

<p>default is <code>.</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">mockery</span> <span class="o">-</span><span class="nx">name</span><span class="p">=</span><span class="nx">Stringer</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// Code generated by mockery v1.0.0. DO NOT EDIT.</span>
</span><span class='line'>
</span><span class='line'><span class="kn">package</span> <span class="nx">mocks</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nx">mock</span> <span class="s">&quot;github.com/stretchr/testify/mock&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Stringer is an autogenerated mock type for the Stringer type</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">Stringer</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">mock</span><span class="p">.</span><span class="nx">Mock</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Name provides a mock function with given fields: hi</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">_m</span> <span class="o">*</span><span class="nx">Stringer</span><span class="p">)</span> <span class="nx">Name</span><span class="p">(</span><span class="nx">hi</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ret</span> <span class="o">:=</span> <span class="nx">_m</span><span class="p">.</span><span class="nx">Called</span><span class="p">(</span><span class="nx">hi</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">r0</span> <span class="kt">string</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">rf</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">Get</span><span class="p">(</span><span class="mi">0</span><span class="p">).(</span><span class="kd">func</span><span class="p">(</span><span class="kt">string</span><span class="p">)</span> <span class="kt">string</span><span class="p">);</span> <span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">r0</span> <span class="p">=</span> <span class="nx">rf</span><span class="p">(</span><span class="nx">hi</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">r0</span> <span class="p">=</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">Get</span><span class="p">(</span><span class="mi">0</span><span class="p">).(</span><span class="kt">string</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">r0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Write test with mock data</h3>

<p><code>string_test.go</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;testing&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/mgleon08/mock/mocks&quot;</span>
</span><span class='line'>  <span class="s">&quot;github.com/stretchr/testify/assert&quot;</span>
</span><span class='line'>  <span class="s">&quot;github.com/stretchr/testify/mock&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Test_SayName</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// mock interface</span>
</span><span class='line'>  <span class="nx">mockStringer</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">mocks</span><span class="p">.</span><span class="nx">Stringer</span><span class="p">{}</span>
</span><span class='line'>  <span class="c1">// mock function and expected return you want data</span>
</span><span class='line'>  <span class="nx">mockStringer</span><span class="p">.</span><span class="nx">On</span><span class="p">(</span><span class="s">&quot;Name&quot;</span><span class="p">,</span> <span class="nx">mock</span><span class="p">.</span><span class="nx">Anything</span><span class="p">).</span><span class="nx">Return</span><span class="p">(</span><span class="s">&quot;hi, test&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">t</span><span class="p">.</span><span class="nx">Run</span><span class="p">(</span><span class="s">&quot;test&quot;</span><span class="p">,</span> <span class="kd">func</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">assert</span><span class="p">.</span><span class="nx">Equal</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="s">&quot;hi, test&quot;</span><span class="p">,</span> <span class="nx">SayName</span><span class="p">(</span><span class="nx">mockStringer</span><span class="p">))</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<ul>
<li><a href="https://github.com/vektra/mockery">mockery</a></li>
<li><a href="https://github.com/stretchr/testify#mock-package">testify</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - GraphQL With Gqlgen]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/04/golang-graphql-with-gqlgen/"/>
    <updated>2019-06-04T18:50:50+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/04/golang-graphql-with-gqlgen</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Setup Project</h2>

<p>使用 Go Module  記得先執行 <code>export GO111MODULE=on</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">mkdir</span> <span class="nx">gqlgen</span><span class="o">-</span><span class="nx">todos</span>
</span><span class='line'><span class="nx">cd</span> <span class="nx">gqlgen</span><span class="o">-</span><span class="nx">todos</span>
</span><span class='line'><span class="k">go</span> <span class="nx">mod</span> <span class="nx">init</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="p">[</span><span class="nx">username</span><span class="p">]</span><span class="o">/</span><span class="nx">gqlgen</span><span class="o">-</span><span class="nx">todos</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Define the schema</h2>

<p>新增 <code>schema.graphql</code> 定義 <a href="https://graphql.org/learn/queries/">graphql 結構</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">Todo</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span><span class="p">:</span> <span class="nx">ID</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">text</span><span class="p">:</span> <span class="nx">String</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">done</span><span class="p">:</span> <span class="nx">Boolean</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">user</span><span class="p">:</span> <span class="nx">User</span><span class="p">!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">User</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span><span class="p">:</span> <span class="nx">ID</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">name</span><span class="p">:</span> <span class="nx">String</span><span class="p">!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Query</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">todos</span><span class="p">:</span> <span class="p">[</span><span class="nx">Todo</span><span class="p">!]!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">input</span> <span class="nx">NewTodo</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">text</span><span class="p">:</span> <span class="nx">String</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">userId</span><span class="p">:</span> <span class="nx">String</span><span class="p">!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Mutation</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">createTodo</span><span class="p">(</span><span class="nx">input</span><span class="p">:</span> <span class="nx">NewTodo</span><span class="p">!):</span> <span class="nx">Todo</span><span class="p">!</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create the project skeleton</h2>

<p>透過 <code>gglgen</code> 建立 graphql 的專案初始化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="mi">99</span><span class="nx">designs</span><span class="o">/</span><span class="nx">gqlgen</span> <span class="nx">init</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>gqlgen.yml</code> — The gqlgen config file, knobs for controlling the generated code.</li>
<li><code>generated.go</code> — The GraphQL execution runtime, the bulk of the generated code.</li>
<li><code>models_gen.go</code> — Generated models required to build the graph. Often you will override these with your own models. Still very useful for input types.</li>
<li><code>resolver.go</code> — This is where your application code lives. generated.go will call into this to get the data the user has requested.</li>
<li><code>server/server.go</code> — This is a minimal entry point that sets up an http.Handler to the generated GraphQL server.</li>
</ul>


<h2>Create the database models</h2>

<p>自動生成的 Todo model 不是正確的，因為 Todo 裡面還嵌入了 User，我們希望是在使用者要求時才給予，因此要另外建立 <code>todo.go</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// todo.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">gqlgen_todos</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Todo</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ID</span>     <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Text</span>   <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Done</span>   <span class="kt">bool</span>
</span><span class='line'>  <span class="nx">UserID</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>將新的 struct 路徑加到 <code>gqlgen.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// Todo 對應到 todo.go 裡的 struct name</span>
</span><span class='line'><span class="nx">models</span><span class="p">:</span>
</span><span class='line'>  <span class="nx">Todo</span><span class="p">:</span>
</span><span class='line'>    <span class="nx">model</span><span class="p">:</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="p">[</span><span class="nx">username</span><span class="p">]</span><span class="o">/</span><span class="nx">gqlgen</span><span class="o">-</span><span class="nx">todos</span><span class="p">.</span><span class="nx">Todo</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>重新生成檔案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="mi">99</span><span class="nx">designs</span><span class="o">/</span><span class="nx">gqlgen</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Implement the resolvers</h2>

<p>在 <code>generated.go</code> 產生了很多個 resolvers interface，接著就要實作這些，但 <code>resolver.go</code> 這個檔案，再新增新的 method 時，要重新再產生一份</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">rm</span> <span class="nx">resolver</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="mi">99</span><span class="nx">designs</span><span class="o">/</span><span class="nx">gqlgen</span>
</span></code></pre></td></tr></table></div></figure>


<p>實作 <code>resolver.go</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">gqlgen_todos</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">context</span> <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;math/rand&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Resolver</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">todos</span> <span class="p">[]</span><span class="nx">Todo</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">Resolver</span><span class="p">)</span> <span class="nx">Mutation</span><span class="p">()</span> <span class="nx">MutationResolver</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">mutationResolver</span><span class="p">{</span><span class="nx">r</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">Resolver</span><span class="p">)</span> <span class="nx">Query</span><span class="p">()</span> <span class="nx">QueryResolver</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">queryResolver</span><span class="p">{</span><span class="nx">r</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">Resolver</span><span class="p">)</span> <span class="nx">Todo</span><span class="p">()</span> <span class="nx">TodoResolver</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">todoResolver</span><span class="p">{</span><span class="nx">r</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">mutationResolver</span> <span class="kd">struct</span><span class="p">{</span> <span class="o">*</span><span class="nx">Resolver</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">mutationResolver</span><span class="p">)</span> <span class="nx">CreateTodo</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">,</span> <span class="nx">input</span> <span class="nx">NewTodo</span><span class="p">)</span> <span class="p">(</span><span class="o">*</span><span class="nx">Todo</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">todo</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">Todo</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">Text</span><span class="p">:</span>   <span class="nx">input</span><span class="p">.</span><span class="nx">Text</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ID</span><span class="p">:</span>     <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;T%d&quot;</span><span class="p">,</span> <span class="nx">rand</span><span class="p">.</span><span class="nx">Int</span><span class="p">()),</span>
</span><span class='line'>      <span class="nx">UserID</span><span class="p">:</span> <span class="nx">input</span><span class="p">.</span><span class="nx">UserID</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">r</span><span class="p">.</span><span class="nx">todos</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">todos</span><span class="p">,</span> <span class="o">*</span><span class="nx">todo</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">todo</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">queryResolver</span> <span class="kd">struct</span><span class="p">{</span> <span class="o">*</span><span class="nx">Resolver</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">queryResolver</span><span class="p">)</span> <span class="nx">Todos</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">)</span> <span class="p">([]</span><span class="nx">Todo</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">todos</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">todoResolver</span> <span class="kd">struct</span><span class="p">{</span> <span class="o">*</span><span class="nx">Resolver</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">todoResolver</span><span class="p">)</span> <span class="nx">User</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">,</span> <span class="nx">obj</span> <span class="o">*</span><span class="nx">Todo</span><span class="p">)</span> <span class="p">(</span><span class="o">*</span><span class="nx">User</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">User</span><span class="p">{</span><span class="nx">ID</span><span class="p">:</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">UserID</span><span class="p">,</span> <span class="nx">Name</span><span class="p">:</span> <span class="s">&quot;user &quot;</span> <span class="o">+</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">UserID</span><span class="p">},</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Query</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// open http://localhost:8080</span>
</span><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">server</span><span class="o">/</span><span class="nx">server</span><span class="p">.</span><span class="k">go</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// create</span>
</span><span class='line'><span class="nx">mutation</span> <span class="nx">createTodo</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">createTodo</span><span class="p">(</span><span class="nx">input</span><span class="p">:{</span><span class="nx">text</span><span class="p">:</span><span class="s">&quot;todo&quot;</span><span class="p">,</span> <span class="nx">userId</span><span class="p">:</span><span class="s">&quot;1&quot;</span><span class="p">})</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">user</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">id</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">text</span>
</span><span class='line'>    <span class="nx">done</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// show</span>
</span><span class='line'><span class="nx">query</span> <span class="nx">findTodos</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">todos</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">text</span>
</span><span class='line'>      <span class="nx">done</span>
</span><span class='line'>      <span class="nx">user</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">name</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Finishing touches</h2>

<p>At the top of our resolver.go add the following line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">//go:generate go run github.com/99designs/gqlgen</span>
</span></code></pre></td></tr></table></div></figure>


<p>This magic comment tells go generate what command to run when we want to regenerate our code</p>

<h2>Example</h2>

<ul>
<li><a href="https://github.com/mgleon08/go-packages/tree/master/020.gqlgen-todos">gqlgen-todos</a></li>
</ul>


<h1>Reference</h1>

<ul>
<li><a href="https://gqlgen.com/getting-started/">gqlgen getting-started</a></li>
<li><a href="https://graphql.org/">Graphql</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Advance ElasticSearch]]></title>
    <link href="https://mgleon08.github.io/blog/2019/05/18/advanced-elasticsearch/"/>
    <updated>2019-05-18T08:55:02+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/05/18/advanced-elasticsearch</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>Bool Query</h1>

<ul>
<li><code>must</code> - 查詢必須匹配的字，並計算 <code>_score</code> (與 AND 等價)</li>
<li><code>filter</code> - 查詢必須匹配的字，不計算 <code>_score</code> (代表對評分沒有任何貢獻，只是用來過濾)</li>
<li><code>should</code> - 滿足任一匹配的字，將增加 <code>_score</code> ，否則，無任何影響，如果一個 query 中沒有 <code>must</code> 和 <code>filter</code> 則必須匹配一個或以上的 <code>should</code> (與 OR 等價)</li>
<li><code>must_not</code> - 查詢排除的字 (與 NOT 等價)</li>
<li><code>boost</code> - 權重</li>
<li><code>minimum_should_match</code> - 設定 <code>should</code> 至少要匹配幾個句子</li>
</ul>


<h2>Example 1:</h2>

<p>user 必須是 kimchy，並且過濾出 tag 是 &ldquo;tech&rdquo; (匹配多寡並不影響 <em>score)，age 範圍排除 10 ~ 20，如果 tag 有 <code>wow</code> 或是 <code>elasticsearch</code> 則 </em>score 比較高，兩個都有則更高</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;must&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;kimchy&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span> <span class="p">:</span> <span class="s">&quot;tech&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;must_not&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;range&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;age&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;from&quot;</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s">&quot;to&quot;</span> <span class="p">:</span> <span class="mi">20</span> <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;should&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span> <span class="p">:</span> <span class="s">&quot;wow&quot;</span> <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span> <span class="p">:</span> <span class="s">&quot;elasticsearch&quot;</span> <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="s">&quot;minimum_should_match&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;boost&quot;</span> <span class="p">:</span> <span class="mf">1.0</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example 2:</h2>

<blockquote><p>將 bool 帶入 filter 一樣可以不計算分數</p></blockquote>

<p>查找 <code>title</code> 字段匹配 <code>how to make millions</code> 並且不被 <code>tag</code> 為 <code>spam</code> 的文件。那些被 <code>tag</code> 為 <code>starred</code> 或在2014之後的文件，將比另外那些文件擁有更高的排名。如果 <em>兩者</em> 都滿足，那麼它排名將更高，並過濾出 <code>price</code> 必須小於等於 29.99，且 <code>category</code> 不能是 <code>ebooks</code> 這兩個條件則不影響排名</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;must&quot;</span><span class="p">:</span>     <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;how to make millions&quot;</span> <span class="p">}},</span>
</span><span class='line'>        <span class="s">&quot;must_not&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span><span class="p">:</span>   <span class="s">&quot;spam&quot;</span> <span class="p">}},</span>
</span><span class='line'>        <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span><span class="p">:</span> <span class="s">&quot;starred&quot;</span> <span class="p">}},</span>
</span><span class='line'>            <span class="p">{</span> <span class="s">&quot;range&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;date&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;gte&quot;</span><span class="p">:</span> <span class="s">&quot;2014-01-01&quot;</span> <span class="p">}}}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="s">&quot;filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                  <span class="p">{</span> <span class="s">&quot;range&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;price&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;lte&quot;</span><span class="p">:</span> <span class="mf">29.99</span> <span class="p">}}}</span>
</span><span class='line'>              <span class="p">],</span>
</span><span class='line'>              <span class="s">&quot;must_not&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                  <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;category&quot;</span><span class="p">:</span> <span class="s">&quot;ebooks&quot;</span> <span class="p">}}</span>
</span><span class='line'>              <span class="p">]</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example3: constant_score</h2>

<p>它將一個不變的常量評分應用於所有匹配的文件，比較簡潔用來取代只有一個 filter 的 bool</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;constant_score&quot;</span><span class="p">:</span>   <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;category&quot;</span><span class="p">:</span> <span class="s">&quot;ebooks&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example4: boost 權重</h2>

<p>預設為 1</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;content&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="s">&quot;query&quot;</span><span class="p">:</span>    <span class="s">&quot;full text search&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="s">&quot;operator&quot;</span><span class="p">:</span> <span class="s">&quot;and&quot;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;content&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="s">&quot;Elasticsearch&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="s">&quot;boost&quot;</span><span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;content&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="s">&quot;Lucene&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="s">&quot;boost&quot;</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}}</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example5: equle to match</h2>

<h3>OR</h3>

<p>下面兩個相等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;brown fox&quot;</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;brown&quot;</span> <span class="p">}},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;fox&quot;</span>   <span class="p">}}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>AND</h3>

<p>下面兩個相等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;query&quot;</span><span class="p">:</span>    <span class="s">&quot;brown fox&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;operator&quot;</span><span class="p">:</span> <span class="s">&quot;and&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;brown&quot;</span> <span class="p">}},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;fox&quot;</span>   <span class="p">}}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>minimum_should_match</h3>

<p>下面兩個相等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;query&quot;</span><span class="p">:</span>                <span class="s">&quot;quick brown fox&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;minimum_should_match&quot;</span><span class="p">:</span> <span class="s">&quot;75%&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;brown&quot;</span> <span class="p">}},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;fox&quot;</span>   <span class="p">}},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;quick&quot;</span> <span class="p">}}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="s">&quot;minimum_should_match&quot;</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Exact Values Search</h1>

<h3>數字查詢</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">document</span>
</span><span class='line'><span class="k">FROM</span>   <span class="n">products</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="n">price</span> <span class="o">=</span> <span class="mi">20</span>
</span></code></pre></td></tr></table></div></figure>


<p>通常精準的字查詢，就不需要計算分數，因此加上 <code>constant_score</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;constant_score&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;price&quot;</span> <span class="p">:</span> <span class="mi">20</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>text 查詢</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">product</span>
</span><span class='line'><span class="k">FROM</span>   <span class="n">products</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="n">productID</span> <span class="o">=</span> <span class="ss">&quot;XHDK-A-1293-#fJ3&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>這裡會有個問題，分析器會解析 <code>XHDK-A-1293-#fJ3</code> -> <code>XHDK</code> <code>A</code> <code>1293</code> <code>#fJ3</code>，因此查詢時會有問題</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">GET</span> <span class="o">/</span><span class="nx">my_store</span><span class="o">/</span><span class="nx">products</span><span class="o">/</span><span class="nx">_search</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;constant_score&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="s">&quot;XHDK-A-1293-#fJ3&quot;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>必須重新針對 productID 設定不要分析，重新設定前記得先刪除原本的 index</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;mappings&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;products&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;properties&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;type&quot;</span> <span class="p">:</span> <span class="s">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;index&quot;</span> <span class="p">:</span> <span class="s">&quot;not_analyzed&quot;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Combining Filters</h1>

<p>Example1</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">product</span>
</span><span class='line'><span class="k">FROM</span>   <span class="n">products</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="p">(</span><span class="n">price</span> <span class="o">=</span> <span class="mi">20</span> <span class="k">OR</span> <span class="n">productID</span> <span class="o">=</span> <span class="ss">&quot;XHDK-A-1293-#fJ3&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">AND</span>  <span class="p">(</span><span class="n">price</span> <span class="o">!=</span> <span class="mi">30</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;should&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                 <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;price&quot;</span> <span class="p">:</span> <span class="mi">20</span><span class="p">}},</span>
</span><span class='line'>                 <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="s">&quot;XHDK-A-1293-#fJ3&quot;</span><span class="p">}}</span>
</span><span class='line'>              <span class="p">],</span>
</span><span class='line'>              <span class="s">&quot;must_not&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                 <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;price&quot;</span> <span class="p">:</span> <span class="mi">30</span><span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Example2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">document</span>
</span><span class='line'><span class="k">FROM</span>   <span class="n">products</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="n">productID</span>      <span class="o">=</span> <span class="ss">&quot;KDKE-B-9947-#kL5&quot;</span>
</span><span class='line'>  <span class="k">OR</span> <span class="p">(</span>     <span class="n">productID</span> <span class="o">=</span> <span class="ss">&quot;JODL-X-1937-#pV7&quot;</span>
</span><span class='line'>       <span class="k">AND</span> <span class="n">price</span>     <span class="o">=</span> <span class="mi">30</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;should&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="s">&quot;KDKE-B-9947-#kL5&quot;</span><span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s">&quot;must&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                    <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="s">&quot;JODL-X-1937-#pV7&quot;</span><span class="p">}},</span>
</span><span class='line'>                    <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;price&quot;</span> <span class="p">:</span> <span class="mi">30</span><span class="p">}}</span>
</span><span class='line'>                  <span class="p">]</span>
</span><span class='line'>                <span class="p">}}</span>
</span><span class='line'>              <span class="p">]</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Example3</p>

<ul>
<li>在收件箱中，且沒有被讀過的</li>
<li>不在 收件箱中，但被標註重要的</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;constant_score&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                 <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                    <span class="p">{</span> <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                          <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                             <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;folder&quot;</span><span class="p">:</span> <span class="s">&quot;inbox&quot;</span> <span class="p">}},</span>
</span><span class='line'>                             <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;read&quot;</span><span class="p">:</span> <span class="kc">false</span> <span class="p">}}</span>
</span><span class='line'>                          <span class="p">]</span>
</span><span class='line'>                    <span class="p">}},</span>
</span><span class='line'>                    <span class="p">{</span> <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                          <span class="s">&quot;must_not&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                             <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;folder&quot;</span><span class="p">:</span> <span class="s">&quot;inbox&quot;</span> <span class="p">}</span>
</span><span class='line'>                          <span class="p">},</span>
</span><span class='line'>                          <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                             <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;important&quot;</span><span class="p">:</span> <span class="kc">true</span> <span class="p">}</span>
</span><span class='line'>                          <span class="p">}</span>
</span><span class='line'>                    <span class="p">}}</span>
</span><span class='line'>                 <span class="p">]</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Disjunction Max Query 最佳字段</h1>

<p>給予兩個字段</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">PUT</span> <span class="o">/</span><span class="nx">my_index</span><span class="o">/</span><span class="nx">my_type</span><span class="o">/</span><span class="mi">1</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Quick brown rabbits&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;Brown rabbits are commonly seen.&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">PUT</span> <span class="o">/</span><span class="nx">my_index</span><span class="o">/</span><span class="nx">my_type</span><span class="o">/</span><span class="mi">2</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Keeping pets healthy&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;My quick brown fox eats rabbits on a regular basis.&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>bool</h3>

<p>使用一般的 bool，會發現 1 的分數會比較高，主要在於 1 的兩個句字都有包含到 <code>Brown</code>，但我們希望的是比較準確的 2，因為 body 就包含了 <code>Brown fox</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Brown fox&quot;</span> <span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;Brown fox&quot;</span> <span class="p">}}</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>dis_max</h3>

<p>將任何與任一查詢匹配的文件作為結果返回，但只將最佳匹配的評分作為查詢的評分結果返回</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;dis_max&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;queries&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Brown fox&quot;</span> <span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;Brown fox&quot;</span> <span class="p">}}</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果用 dis_max 查出的兩個最佳匹配分數一樣，可以加上 tie_breaker 調優，將其他匹配的語句一起做計算並乘個比例，範圍在 0~1</p>

<blockquote><p>tie_breaker 可以是 0 到 1 之間的浮點數，其中 0 代表使用 dis_max 最佳匹配語句的普通邏輯， 1 表示所有匹配語句同等重要。最佳的精確值需要根據數據與查詢調試得出，但是合理值應該與零接近（處於 0.1 - 0.4 之間），這樣就不會顛覆 dis_max 最佳匹配性質的根本。</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;dis_max&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;queries&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Quick pets&quot;</span> <span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;Quick pets&quot;</span> <span class="p">}}</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="s">&quot;tie_breaker&quot;</span><span class="p">:</span> <span class="mf">0.3</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Function Score Query</h1>

<ul>
<li><a href="https://www.scienjus.com/elasticsearch-function-score-query/">透過Function Score Query優化Elasticsearch搜索結果</a></li>
<li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/boosting-by-popularity.html">按受歡迎度提升權重</a></li>
<li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/function-score-filters.html">過濾集提升權重</a></li>
</ul>


<h1>Reference</h1>

<ul>
<li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html">Elasticsearch: 權威指南 | Elastic</a></li>
<li><a href="https://blog.csdn.net/dm_vincent/article/details/41743955">[Elasticsearch] 全文搜索 (三) - match查询和bool查询的关系，提升查询子句 - dm_vincent的专栏 - CSDN博客</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1113818">Elasticsearch DSL 常用語法介紹</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With the ElasticSearch]]></title>
    <link href="https://mgleon08.github.io/blog/2019/04/26/elasticsearch/"/>
    <updated>2019-04-26T23:36:58+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/04/26/elasticsearch</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases. As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected.</p>

<h2>Elasticsearch vs RDBMS</h2>

<ul>
<li>Node - Server</li>
<li>Indices - Databases</li>
<li>Types - Tables</li>
<li>Documents - Rows</li>
<li>Fields - Columns</li>
</ul>


<blockquote><p>After 6.0 version need add <code>-H 'Content-Type:application/json'</code></p></blockquote>

<h2>Install</h2>

<p>java</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">brew</span> <span class="nx">cask</span> <span class="nx">install</span> <span class="nx">java</span>
</span><span class='line'><span class="nx">brew</span> <span class="nx">cask</span> <span class="nx">install</span> <span class="nx">homebrew</span><span class="o">/</span><span class="nx">cask</span><span class="o">-</span><span class="nx">versions</span><span class="o">/</span><span class="nx">java8</span>
</span></code></pre></td></tr></table></div></figure>


<p>elasticsearch</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">brew</span> <span class="nx">install</span> <span class="nx">elasticsearch24</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Check</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;name&quot;</span> <span class="p">:</span> <span class="s">&quot;Crimson Daffodil&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;cluster_name&quot;</span> <span class="p">:</span> <span class="s">&quot;elasticsearch&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;cluster_uuid&quot;</span> <span class="p">:</span> <span class="s">&quot;_1W7Qb8WSByw_AoBtx3V9g&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;version&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;number&quot;</span> <span class="p">:</span> <span class="s">&quot;2.4.6&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;build_hash&quot;</span> <span class="p">:</span> <span class="s">&quot;5376dca9f70f3abef96a77f4bb22720ace8240fd&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;build_timestamp&quot;</span> <span class="p">:</span> <span class="s">&quot;2017-07-18T12:17:44Z&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;build_snapshot&quot;</span> <span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;lucene_version&quot;</span> <span class="p">:</span> <span class="s">&quot;5.5.4&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s">&quot;tagline&quot;</span> <span class="p">:</span> <span class="s">&quot;You Know, for Search&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>health</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">_cluster</span><span class="o">/</span><span class="nx">health</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;cluster_name&quot;</span> <span class="p">:</span> <span class="s">&quot;elasticsearch_leon&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;status&quot;</span> <span class="p">:</span> <span class="s">&quot;yellow&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;timed_out&quot;</span> <span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;number_of_nodes&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;number_of_data_nodes&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;active_primary_shards&quot;</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;active_shards&quot;</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;relocating_shards&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;initializing_shards&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;unassigned_shards&quot;</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;delayed_unassigned_shards&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;number_of_pending_tasks&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;number_of_in_flight_fetch&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;task_max_waiting_in_queue_millis&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;active_shards_percent_as_number&quot;</span> <span class="p">:</span> <span class="mf">50.0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>explain</h3>

<p>know how to get this result</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">explain</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Count</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">GET</span> <span class="err">&#39;</span><span class="nx">http</span><span class="p">:</span><span class="c1">//localhost:9200/_count?pretty&#39; -d &#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match_all&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;count&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_shards&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;total&quot;</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;successful&quot;</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;failed&quot;</span> <span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show all Index</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">GET</span> <span class="err">&#39;</span><span class="nx">http</span><span class="p">:</span><span class="c1">//localhost:9200/_cat/indices?v&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">health</span> <span class="nx">status</span> <span class="nx">index</span>    <span class="nx">pri</span> <span class="nx">rep</span> <span class="nx">docs</span><span class="p">.</span><span class="nx">count</span> <span class="nx">docs</span><span class="p">.</span><span class="nx">deleted</span> <span class="nx">store</span><span class="p">.</span><span class="nx">size</span> <span class="nx">pri</span><span class="p">.</span><span class="nx">store</span><span class="p">.</span><span class="nx">size</span>
</span><span class='line'><span class="nx">yellow</span> <span class="nx">open</span>   <span class="nx">accounts</span>   <span class="mi">5</span>   <span class="mi">1</span>          <span class="mi">1</span>            <span class="mi">0</span>      <span class="mf">4.1</span><span class="nx">kb</span>          <span class="mf">4.1</span><span class="nx">kb</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show all Index mapping type</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">_mapping</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;accounts&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;mappings&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;person&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;properties&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;type&quot;</span> <span class="p">:</span> <span class="s">&quot;string&quot;</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s">&quot;title&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;type&quot;</span> <span class="p">:</span> <span class="s">&quot;string&quot;</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;type&quot;</span> <span class="p">:</span> <span class="s">&quot;string&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create Index</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">weather</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;acknowledged&quot;</span><span class="p">:</span><span class="kc">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Delete Index</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">weather</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">_all</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/*</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">index_</span><span class="o">*</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;acknowledged&quot;</span><span class="p">:</span><span class="kc">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Setting Analyzer</h2>

<p><a href="https://github.com/medcl/elasticsearch-analysis-ik/">elasticsearch-analysis-ik</a></p>

<h3>index type</h3>

<ul>
<li><code>analyzed</code> - analyzed string and index it</li>
<li><code>not_analyzed</code> - index it but not not analyzed</li>
<li><code>no</code> - not index and analyzed</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="err">$</span> <span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;mappings&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;person&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;text&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;search_analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;text&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;search_analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;text&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;search_analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;categories&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>           <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;nested&quot;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;string&quot;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>update analyzer</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="err">$</span> <span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">_mapping</span><span class="o">/</span><span class="nx">person</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;properties&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;tag&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;type&quot;</span> <span class="p">:</span>    <span class="s">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;index&quot;</span><span class="p">:</span>    <span class="s">&quot;not_analyzed&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>show mapping</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="err">$</span> <span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">_mapping</span><span class="o">/</span><span class="nx">person</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>understand elastic how to analyze text</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">/</span><span class="nx">_analyze</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;standard&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;text&quot;</span><span class="p">:</span> <span class="s">&quot;Text to analyze&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create Document</h2>

<p>with id, also can string</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// can replace 1 to first</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_version&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>without id will auto create random uuid</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">POST</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;mark&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;系統管理&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">28</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// _source without other data</span>
</span><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="o">/</span><span class="nx">_source</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;AWpP4wxUKXQ2yoYJjuiA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_version&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;found&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">20</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>not found</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">weather</span><span class="o">/</span><span class="nx">beijing</span><span class="o">/</span><span class="nx">abc</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;_index&quot;</span> <span class="p">:</span> <span class="s">&quot;weather&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_type&quot;</span> <span class="p">:</span> <span class="s">&quot;beijing&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_id&quot;</span> <span class="p">:</span> <span class="s">&quot;abc&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;found&quot;</span> <span class="p">:</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Delete</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reindex (not Update)</h2>

<p>elastic can&rsquo;t update, only create new, and increase the version number</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;title&quot;</span> <span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">20</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>version was change to 2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_version&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_shards&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;total&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;successful&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;failed&quot;</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s">&quot;created&quot;</span><span class="p">:</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Search keyword</h2>

<h3>Search all documents (empty search)</h3>

<ul>
<li><code>/_search</code> - all index, all type</li>
<li><code>/gb/_search</code> - gb index, all type</li>
<li><code>/gb,us/_search</code> - gb and us index, all type</li>
<li><code>/g*,u*/_search</code> - g<em> and u</em> start index, all type</li>
<li><code>/gb/user/_search</code> - gb index, user type</li>
<li><code>/gb,us/user,tweet/_search</code> - gb or us index, user and tweet type</li>
<li><code>/_all/user,tweet/_search</code> - all index, user and tweet type</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// empty body like use</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match_all&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>took - search time</li>
<li>hits - hit how many record</li>
<li>_score - match score</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;took&quot;</span> <span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;timed_out&quot;</span> <span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_shards&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;total&quot;</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;successful&quot;</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;failed&quot;</span> <span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s">&quot;hits&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;total&quot;</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;max_score&quot;</span> <span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;hits&quot;</span> <span class="p">:</span> <span class="p">[</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;_index&quot;</span> <span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_type&quot;</span> <span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_id&quot;</span> <span class="p">:</span> <span class="s">&quot;2&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_score&quot;</span> <span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_source&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span> <span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">20</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;_index&quot;</span> <span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_type&quot;</span> <span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_id&quot;</span> <span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_score&quot;</span> <span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_source&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;mark&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span> <span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">28</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>match</code> &amp; <code>multi_match</code> Search</h3>

<p>analyzer text and search each keyword</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;multi_match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>           <span class="s">&quot;query&quot;</span><span class="p">:</span>    <span class="s">&quot;數據庫&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;fields&quot;</span><span class="p">:</span>   <span class="p">[</span> <span class="s">&quot;title&quot;</span><span class="p">,</span> <span class="s">&quot;desc&quot;</span> <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>filtered</code> &amp; <code>range</code> Search</h3>

<blockquote><p>filtered replaced by the bool</p></blockquote>

<ul>
<li><code>gt</code> - <code>&gt;</code></li>
<li><code>gte</code> - <code>&gt;=</code></li>
<li><code>lt</code> - <code>&lt;</code></li>
<li><code>lte</code> -<code>&lt;=</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;filtered&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;range&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;age&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;gt&quot;</span> <span class="p">:</span> <span class="mi">25</span> <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>term</code> &amp; <code>terms</code> Search</h3>

<p>Exact match not to analyzer</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;terms&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s">&quot;leon&quot;</span><span class="p">,</span> <span class="s">&quot;mark&quot;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>exists</code> &amp; <code>missing</code> Search</h3>

<p>Search field <code>IS NUll</code> or <code>IS NOT NULL</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;exists&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;field&quot;</span><span class="p">:</span> <span class="s">&quot;title&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Global search</h2>

<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.0/query-dsl-match-query.html">Match Query</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;軟件&quot;</span> <span class="p">}}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="o">&amp;</span><span class="nx">q</span><span class="p">=</span><span class="nx">user</span><span class="p">:</span><span class="nx">leon</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>size</code> to limit response record</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;管理&quot;</span> <span class="p">}},</span>
</span><span class='line'>  <span class="s">&quot;size&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>from</code> to shift start index</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;管理&quot;</span> <span class="p">}},</span>
</span><span class='line'>  <span class="s">&quot;from&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;size&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>or</code> Search</h3>

<p>&ldquo;軟件 系統&rdquo; -> &ldquo;軟件&rdquo; or &ldquo;系統&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;軟件 系統&quot;</span> <span class="p">}}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>Bool</code> Search (<code>and</code>)</h3>

<p>should use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.0/query-dsl-bool-query.html">Bool Query</a></p>

<p>must have"軟件" AND &ldquo;系統&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;軟件&quot;</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;系統&quot;</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>match_phrase</code> Search</h3>

<p>must be &ldquo;軟件 系統&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match_phrase&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;軟件 系統&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>highlight</code> Search</h3>

<p>returm search result include highlight <code>&lt;em&gt;&lt;/em&gt;</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span><span class="p">:</span>  <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match_phrase&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;highlight&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;fields&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="mf">0.30685282</span><span class="p">,</span>
</span><span class='line'> <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>   <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'> <span class="p">},</span>
</span><span class='line'> <span class="s">&quot;highlight&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="s">&quot;&lt;em&gt;leon&lt;/em&gt;&quot;</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>aggregations</code> Search like SQL <code>GROUP BY</code></h3>

<p>count each user</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;aggs&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;all_user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;terms&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span><span class="p">:</span> <span class="s">&quot;user&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">//...</span>
</span><span class='line'><span class="s">&quot;aggregations&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;all_user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;doc_count_error_upper_bound&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;sum_other_doc_count&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;buckets&quot;</span> <span class="p">:</span> <span class="p">[</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>      <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;mark&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>      <span class="p">}</span> <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="c1">//...</span>
</span></code></pre></td></tr></table></div></figure>


<p>count each user + avg age</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;all_user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;terms&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;user&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;avg&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;age&quot;</span> <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// ...</span>
</span><span class='line'>  <span class="s">&quot;aggregations&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;all_user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;doc_count_error_upper_bound&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;sum_other_doc_count&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;buckets&quot;</span> <span class="p">:</span> <span class="p">[</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;value&quot;</span> <span class="p">:</span> <span class="mf">28.0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;leo2222n&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;value&quot;</span> <span class="p">:</span> <span class="mf">38.0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;mark&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;value&quot;</span> <span class="p">:</span> <span class="mf">28.0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span> <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="c1">// ...</span>
</span></code></pre></td></tr></table></div></figure>


<p>mix query</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;all_user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;terms&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;user&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;avg&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;age&quot;</span> <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;took&quot;</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;timed_out&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;_shards&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;total&quot;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;successful&quot;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;failed&quot;</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;hits&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;total&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;max_score&quot;</span><span class="p">:</span> <span class="mf">1.4054651</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;hits&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;8&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="mf">1.4054651</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">38</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="mf">0.30685282</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;aggregations&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;all_user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;doc_count_error_upper_bound&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;sum_other_doc_count&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;buckets&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;key&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;doc_count&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;avg_age&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="s">&quot;value&quot;</span><span class="p">:</span> <span class="mi">28</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Sort</h2>

<ul>
<li>ASC</li>
<li>DESC</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;sort&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;order&quot;</span><span class="p">:</span> <span class="s">&quot;asc&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>max_score</code> &amp; <code>_score</code> is null, because not use to sort</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// ...</span>
</span><span class='line'><span class="s">&quot;hits&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;total&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;max_score&quot;</span><span class="p">:</span> <span class="nx">null</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;hits&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="nx">null</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s">&quot;sort&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>              <span class="mi">18</span>
</span><span class='line'>          <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="c1">// ...</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// ...</span>
</span></code></pre></td></tr></table></div></figure>


<h3>mutiple sort</h3>

<p>Use level 2 sort if level 1 sort result have same age</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;sort&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span> <span class="s">&quot;age&quot;</span><span class="p">:</span>   <span class="p">{</span> <span class="s">&quot;order&quot;</span><span class="p">:</span> <span class="s">&quot;asc&quot;</span> <span class="p">}},</span>
</span><span class='line'>        <span class="p">{</span> <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;order&quot;</span><span class="p">:</span> <span class="s">&quot;desc&quot;</span> <span class="p">}}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Reference</h1>

<ul>
<li><a href="https://github.com/elastic/elasticsearch">elasticsearch</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2017/08/elasticsearch.html">全文搜索引擎 Elasticsearch 入門課程</a></li>
<li><a href="https://es.xiaoleilu.com/010_Intro/00_README.html">Elasticsearch 權威指南</a></li>
<li><a href="https://www.cnblogs.com/yjf512/p/4897294.html">elasticsearch 查詢（match和term）</a></li>
<li><a href="https://www.youtube.com/watch?v=oPObRc8tHgQ">ElasticSearch in action - Thijs Feryn(video)</a></li>
<li><a href="https://my.oschina.net/weiweiblog/blog/1574020">ElasticSearch各種查詢關鍵字的區別（重要）</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Simple RESTful]]></title>
    <link href="https://mgleon08.github.io/blog/2019/04/11/golang-simple-restful/"/>
    <updated>2019-04-11T16:27:10+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/04/11/golang-simple-restful</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Practice RESTful with golang</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">GetUsers</span>     <span class="nx">GET</span>     <span class="o">/</span><span class="nx">users</span>
</span><span class='line'><span class="nx">GetUser</span>      <span class="nx">GET</span>     <span class="o">/</span><span class="nx">users</span><span class="o">/</span><span class="p">{</span><span class="nx">id</span><span class="p">}</span>
</span><span class='line'><span class="nx">CreateUser</span>   <span class="nx">POST</span>    <span class="o">/</span><span class="nx">users</span>
</span><span class='line'><span class="nx">UpdateUser</span>   <span class="nx">UPDATE</span>  <span class="o">/</span><span class="nx">users</span><span class="o">/</span><span class="p">{</span><span class="nx">id</span><span class="p">}</span>
</span><span class='line'><span class="nx">DeleteUser</span>   <span class="nx">DELETE</span>  <span class="o">/</span><span class="nx">users</span><span class="o">/</span><span class="p">{</span><span class="nx">id</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Use <a href="https://github.com/gorilla/mux">gorilla/mux</a> package</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;net/http&quot;</span>
</span><span class='line'>  <span class="s">&quot;strconv&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/gorilla/mux&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">User</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ID</span>        <span class="kt">int</span>    <span class="s">`json:&quot;id,omitempty&quot;`</span>
</span><span class='line'>  <span class="nx">Firstname</span> <span class="kt">string</span> <span class="s">`json:&quot;firstname,omitempty&quot;`</span>
</span><span class='line'>  <span class="nx">Lastname</span>  <span class="kt">string</span> <span class="s">`json:&quot;lastname,omitempty&quot;`</span>
</span><span class='line'>  <span class="nx">Info</span>      <span class="s">`json:&quot;info,omitempty&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">Info</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">City</span>  <span class="kt">string</span> <span class="s">`json:&quot;city,omitempty&quot;`</span>
</span><span class='line'>  <span class="nx">Phone</span> <span class="kt">int</span>    <span class="s">`json:&quot;phone,omitempty&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">users</span> <span class="p">[]</span><span class="nx">User</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">GetUsers</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">users</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">GetUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span> <span class="o">:=</span> <span class="nx">convertParams</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">u</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">users</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">u</span><span class="p">.</span><span class="nx">ID</span> <span class="o">==</span> <span class="nx">id</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="s">&quot;User not found&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">CreateUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">user</span> <span class="nx">User</span>
</span><span class='line'>  <span class="nx">_</span> <span class="p">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">NewDecoder</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">Body</span><span class="p">).</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">users</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="nx">user</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">UpdateUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">user</span> <span class="nx">User</span>
</span><span class='line'>  <span class="nx">id</span> <span class="o">:=</span> <span class="nx">convertParams</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">_</span> <span class="p">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">NewDecoder</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">Body</span><span class="p">).</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">u</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">users</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">u</span><span class="p">.</span><span class="nx">ID</span> <span class="o">==</span> <span class="nx">id</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">users</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nx">user</span>
</span><span class='line'>          <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">DeleteUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span> <span class="o">:=</span> <span class="nx">convertParams</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">u</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">users</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">u</span><span class="p">.</span><span class="nx">ID</span> <span class="o">==</span> <span class="nx">id</span> <span class="p">{</span>
</span><span class='line'>          <span class="nb">copy</span><span class="p">(</span><span class="nx">users</span><span class="p">[</span><span class="nx">i</span><span class="p">:],</span> <span class="nx">users</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">:])</span>
</span><span class='line'>          <span class="nx">users</span> <span class="p">=</span> <span class="nx">users</span><span class="p">[:</span><span class="nb">len</span><span class="p">(</span><span class="nx">users</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">users</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">convertParams</span><span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">params</span> <span class="o">:=</span> <span class="nx">mux</span><span class="p">.</span><span class="nx">Vars</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">id</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">strconv</span><span class="p">.</span><span class="nx">Atoi</span><span class="p">(</span><span class="nx">params</span><span class="p">[</span><span class="s">&quot;id&quot;</span><span class="p">])</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatalf</span><span class="p">(</span><span class="s">&quot;err: %v&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">id</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">router</span> <span class="o">:=</span> <span class="nx">mux</span><span class="p">.</span><span class="nx">NewRouter</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">user1</span> <span class="o">:=</span> <span class="nx">User</span><span class="p">{</span><span class="nx">ID</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">Firstname</span><span class="p">:</span> <span class="s">&quot;hello&quot;</span><span class="p">,</span> <span class="nx">Lastname</span><span class="p">:</span> <span class="s">&quot;World&quot;</span><span class="p">,</span> <span class="nx">Info</span><span class="p">:</span> <span class="nx">Info</span><span class="p">{</span><span class="nx">City</span><span class="p">:</span> <span class="s">&quot;Taipei&quot;</span><span class="p">,</span> <span class="nx">Phone</span><span class="p">:</span> <span class="mi">123</span><span class="p">}}</span>
</span><span class='line'>  <span class="nx">user2</span> <span class="o">:=</span> <span class="nx">User</span><span class="p">{</span><span class="nx">ID</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">Firstname</span><span class="p">:</span> <span class="s">&quot;hello&quot;</span><span class="p">,</span> <span class="nx">Lastname</span><span class="p">:</span> <span class="s">&quot;World&quot;</span><span class="p">,</span> <span class="nx">Info</span><span class="p">:</span> <span class="nx">Info</span><span class="p">{</span><span class="nx">City</span><span class="p">:</span> <span class="s">&quot;Taipei&quot;</span><span class="p">,</span> <span class="nx">Phone</span><span class="p">:</span> <span class="mi">456</span><span class="p">}}</span>
</span><span class='line'>  <span class="nx">users</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="nx">user1</span><span class="p">,</span> <span class="nx">user2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users&quot;</span><span class="p">,</span> <span class="nx">GetUsers</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;GET&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users/{id}&quot;</span><span class="p">,</span> <span class="nx">GetUser</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;GET&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users&quot;</span><span class="p">,</span> <span class="nx">CreateUser</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;POST&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users/{id}&quot;</span><span class="p">,</span> <span class="nx">UpdateUser</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;PUT&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users/{id}&quot;</span><span class="p">,</span> <span class="nx">DeleteUser</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;DELETE&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Starting server on port 3000...&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">http</span><span class="p">.</span><span class="nx">ListenAndServe</span><span class="p">(</span><span class="s">&quot;:3000&quot;</span><span class="p">,</span> <span class="nx">router</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>params</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;id&quot;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;firstname&quot;</span><span class="p">:</span> <span class="s">&quot;hello&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;lastname&quot;</span><span class="p">:</span> <span class="s">&quot;World&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;info&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;city&quot;</span><span class="p">:</span> <span class="s">&quot;Taipei&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;phone&quot;</span><span class="p">:</span> <span class="mi">123</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>run</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'><span class="c1">// http://localhost:3000/users</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Code</h1>

<ul>
<li><a href="https://github.com/mgleon08/go-packages/blob/master/018.simple_restful/main.go">simple_restful</a></li>
</ul>


<h1>With mongodb</h1>

<ul>
<li><a href="https://github.com/mgleon08/go-packages/tree/master/019.restful_mongodb">restful_mongodb</a></li>
</ul>


<p>Reference</p>

<ul>
<li><a href="https://medium.com/@petrousov/how-to-build-a-restful-api-in-go-for-phonebook-app-d55f7234a10">How to build a RESTful API in Go for phonebook app</a></li>
<li><a href="https://medium.com/@petrousov/implementing-crud-operations-with-go-and-mongodb-cf622f2379c4">Implementing CRUD operations with Go and MongoDB</a></li>
<li><a href="https://github.com/gorilla/mux">gorilla/mux</a></li>
<li><a href="https://yourbasic.org/golang/delete-element-slice/">2 ways to delete an element from a slice</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - MongoDB]]></title>
    <link href="https://mgleon08.github.io/blog/2019/04/10/golang-mongodb/"/>
    <updated>2019-04-10T21:30:30+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/04/10/golang-mongodb</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>Install the MongoDB Go Driver</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="k">go</span> <span class="nx">get</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">mongodb</span><span class="o">/</span><span class="nx">mongo</span><span class="o">-</span><span class="k">go</span><span class="o">-</span><span class="nx">driver</span>
</span></code></pre></td></tr></table></div></figure>


<p>或使用 go module</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">mode</span> <span class="nx">init</span> <span class="p">&lt;</span><span class="nx">current</span> <span class="kn">package</span> <span class="nx">name</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Connect to MongoDB using the Go Driver</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/mongodb/mongo-go-driver/mongo&quot;</span>
</span><span class='line'>  <span class="s">&quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">client</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">mongo</span><span class="p">.</span><span class="nx">Connect</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">(),</span> <span class="nx">options</span><span class="p">.</span><span class="nx">Client</span><span class="p">().</span><span class="nx">ApplyURI</span><span class="p">(</span><span class="s">&quot;mongodb://localhost:27017&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Check the connection</span>
</span><span class='line'>  <span class="nx">err</span> <span class="p">=</span> <span class="nx">client</span><span class="p">.</span><span class="nx">Ping</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">(),</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Connected to MongoDB!&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// handle for the trainers collection in the test database</span>
</span><span class='line'>  <span class="c1">// collection := client.Database(&quot;test&quot;).Collection(&quot;trainers&quot;)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Close the connection</span>
</span><span class='line'>  <span class="nx">err</span> <span class="p">=</span> <span class="nx">client</span><span class="p">.</span><span class="nx">Disconnect</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Connection to MongoDB closed.&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>mongo.Connect</code> Connect</li>
<li><code>client.Ping</code> Check the connection</li>
<li><code>client.Disconnect</code> Close the connection</li>
</ul>


<h1>BSON (Binary Serialized Document Format, Binary-encoded JSON)</h1>

<ul>
<li>一種二進制形式的存儲格式，採用了類似於 C 語言結構體的名稱</li>
<li>對表示方法支援內嵌的文件物件和陣列物件</li>
<li>具有輕量性、可遍歷性、高效性的特點，可以有效描述非結構化數據和結構化數據</li>
<li>schema-less的存儲形式</li>
<li>優點是靈活性高，但它的缺點是空間利用率不是很理想</li>
<li>不像一般 json 用簡單的 string 和 number，而是可以給予 type (int, long, date, floating point, and decimal128)，可以更方便的去做比較排許等等的</li>
</ul>


<h3>在 Go 中提供了兩種 BSON 的資料格式 <code>D types</code> the <code>Raw types</code></h3>

<p><code>D type</code></p>

<blockquote><p>The D family of types is used to concisely build BSON objects using native Go types. This can be particularly useful for constructing commands passed to MongoDB. The D family consists of four types:</p></blockquote>

<ul>
<li><code>D</code>: A BSON document. This type should be used in situations where order matters, such as MongoDB commands.</li>
<li><code>M</code>: An unordered map. It is the same as D, except it does not preserve order.</li>
<li><code>A</code>: A BSON array.</li>
<li><code>E</code>: A single element inside a D.</li>
</ul>


<p>Example</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// D type filter to find where the name field matches either Alice or Bob </span>
</span><span class='line'><span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="err">\</span><span class="p">{</span><span class="err">\</span><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="err">\</span><span class="p">{</span><span class="err">\</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;$in&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">bson</span><span class="p">.</span><span class="nx">A</span><span class="p">{</span><span class="s">&quot;Alice&quot;</span><span class="p">,</span> <span class="s">&quot;Bob&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="p">}}</span>
</span><span class='line'><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Raw</code></p>

<blockquote><p>The Raw family of types is used for validating a slice of bytes. You can also retrieve single elements from Raw types using a <a href="https://godoc.org/go.mongodb.org/mongo-driver/bson#Raw.Lookup">Lookup</a>. This is useful if you don&rsquo;t want the overhead of having to unmarshall the BSON into another type. This tutorial will just use the D family of types.</p></blockquote>

<h1>CRUD Operations</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">Trainer</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Age</span>  <span class="kt">int</span>
</span><span class='line'>  <span class="nx">City</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>C - Insert documents</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">ash</span> <span class="o">:=</span> <span class="nx">Trainer</span><span class="p">{</span><span class="s">&quot;Ash&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="s">&quot;Pallet Town&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nx">misty</span> <span class="o">:=</span> <span class="nx">Trainer</span><span class="p">{</span><span class="s">&quot;Misty&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="s">&quot;Cerulean City&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nx">brock</span> <span class="o">:=</span> <span class="nx">Trainer</span><span class="p">{</span><span class="s">&quot;Brock&quot;</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="s">&quot;Pewter City&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// insert one</span>
</span><span class='line'><span class="nx">insertResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">InsertOne</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">ash</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Inserted a single document: &quot;</span><span class="p">,</span> <span class="nx">insertResult</span><span class="p">.</span><span class="nx">InsertedID</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// insert many</span>
</span><span class='line'><span class="nx">trainers</span> <span class="o">:=</span> <span class="p">[]</span><span class="kd">interface</span><span class="p">{}{</span><span class="nx">misty</span><span class="p">,</span> <span class="nx">brock</span><span class="p">}</span>
</span><span class='line'><span class="nx">insertManyResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">InsertMany</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">trainers</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Inserted multiple documents: &quot;</span><span class="p">,</span> <span class="nx">insertManyResult</span><span class="p">.</span><span class="nx">InsertedIDs</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>U - Update documents</h3>

<p>需要透過 <code>bson.D</code> types 去找到 match 的 data 再做更新</p>

<ul>
<li><a href="https://docs.mongodb.com/manual/reference/operator/update-field/">Field Update Operators</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 找出 name ＝ &quot;Ash&quot;</span>
</span><span class='line'><span class="nx">filter</span> <span class="o">:=</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="p"></span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 將 age - 1</span>
</span><span class='line'><span class="nx">update</span> <span class="o">:=</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="p">{</span>
</span><span class='line'>    <span class="p">{</span><span class="s">&quot;$inc&quot;</span><span class="p">,</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="p">{</span>
</span><span class='line'>        <span class="p">{</span><span class="s">&quot;age&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
</span><span class='line'>    <span class="p">}},</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">updateResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">UpdateOne</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">filter</span><span class="p">,</span> <span class="nx">update</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Matched %v documents and updated %v documents.\n&quot;</span><span class="p">,</span> <span class="nx">updateResult</span><span class="p">.</span><span class="nx">MatchedCount</span><span class="p">,</span> <span class="nx">updateResult</span><span class="p">.</span><span class="nx">ModifiedCount</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>$inc</code> - Increments the value of the field by the specified amount.</li>
<li><code>updateResult.MatchedCount</code> - The number of documents that matched the filter.</li>
<li><code>updateResult.ModifiedCount</code> - The number of documents that were modified.</li>
</ul>


<h3>R - Find documents</h3>

<p><code>Find a document</code> use <code>collection.FindOne()</code></p>

<blockquote><p>To find a document, you will need a filter document as well as a pointer to a value into which the result can be decoded</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// create a value into which the result can be decoded</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">result</span> <span class="nx">Trainer</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 取出的值必須要 Decode</span>
</span><span class='line'><span class="nx">err</span> <span class="p">=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">FindOne</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">filter</span><span class="p">).</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">result</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Found a single document: %+v\n&quot;</span><span class="p">,</span> <span class="nx">result</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Find multiple documents</code> use <code>collection.Find()</code></p>

<blockquote><p>This method returns a Cursor. A Cursor provides a stream of documents through which you can iterate and decode one at a time. Once a Cursor has been exhausted, you should close the Cursor.</p>

<p>Here you&rsquo;ll also set some options on the operation using the options package. Specifically, you&rsquo;ll set a limit so only 2 documents are returned.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// Pass these options to the Find method</span>
</span><span class='line'><span class="nx">findOptions</span> <span class="o">:=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">Find</span><span class="p">()</span>
</span><span class='line'><span class="nx">findOptions</span><span class="p">.</span><span class="nx">SetLimit</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Here&#39;s an array in which you can store the decoded documents</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">results</span> <span class="p">[]</span><span class="o">*</span><span class="nx">Trainer</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Passing nil as the filter matches all documents in the collection</span>
</span><span class='line'><span class="c1">// 範例原本寫 nil 但是有問題所以改成 bson.D{}</span>
</span><span class='line'><span class="nx">cur</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">Find</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="p">{},</span> <span class="nx">findOptions</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Finding multiple documents returns a cursor</span>
</span><span class='line'><span class="c1">// Iterating through the cursor allows us to decode documents one at a time</span>
</span><span class='line'><span class="k">for</span> <span class="nx">cur</span><span class="p">.</span><span class="nx">Next</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// create a value into which the single document can be decoded</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">elem</span> <span class="nx">Trainer</span>
</span><span class='line'>    <span class="nx">err</span> <span class="o">:=</span> <span class="nx">cur</span><span class="p">.</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">elem</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">results</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">results</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">elem</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">cur</span><span class="p">.</span><span class="nx">Err</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Close the cursor once finished</span>
</span><span class='line'><span class="nx">cur</span><span class="p">.</span><span class="nx">Close</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Found multiple documents (array of pointers): %+v\n&quot;</span><span class="p">,</span> <span class="nx">results</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">result</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">results</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%d: %+v \n&quot;</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">result</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>D - Delete Documents</h3>

<blockquote><p>delete documents using <code>collection.DeleteOne()</code> or <code>collection.DeleteMany()</code>.</p>

<p>Here you pass nil as the filter argument, which will match all documents in the collection. You could also use <a href="https://godoc.org/github.com/mongodb/mongo-go-driver/mongo#Collection.Drop">collection.Drop()</a> to delete an entire collection.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// DeleteOne</span>
</span><span class='line'><span class="nx">deleteOneResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">DeleteOne</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">M</span><span class="p">{})</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Deleted %v documents in the trainers collection\n&quot;</span><span class="p">,</span> <span class="nx">deleteOneResult</span><span class="p">.</span><span class="nx">DeletedCount</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// DeleteMany</span>
</span><span class='line'><span class="nx">deleteResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">DeleteMany</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">M</span><span class="p">{})</span>
</span><span class='line'><span class="c1">// DELETA name = Misty &amp;&amp; age &gt; 10</span>
</span><span class='line'><span class="c1">// deleteResult, err := collection.DeleteMany(context.TODO(), bson.M{&quot;name&quot;: &quot;Misty&quot;, &quot;age&quot;: bson.M{&quot;$gte&quot;: 10}})</span>
</span><span class='line'><span class="c1">// deleteResult, err := collection.DeleteMany(context.TODO(), bson.D\{\{&quot;name&quot;, &quot;Misty&quot;}, {&quot;age&quot;, bson.M{&quot;$gte&quot;: 10}}})</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Deleted %v documents in the trainers collection\n&quot;</span><span class="p">,</span> <span class="nx">deleteResult</span><span class="p">.</span><span class="nx">DeletedCount</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Example</h1>

<ul>
<li><a href="https://github.com/mgleon08/go-packages/tree/master/017.mongodb">016.mongodb</a></li>
</ul>


<p>Reference</p>

<ul>
<li><a href="https://github.com/mongodb/mongo-go-driver/tree/master/examples/documentation_examples">documentation_examples</a></li>
<li><a href="https://godoc.org/go.mongodb.org/mongo-driver">godoc mongo-driver</a></li>
<li><a href="https://docs.mongodb.com/manual/reference/operator/">BSON Operators</a></li>
<li><a href="http://bsonspec.org/">BSON</a></li>
<li><a href="https://blog.csdn.net/m0_38110132/article/details/77716792">BSON的介紹及BSON與JSON的區別</a></li>
<li><a href="https://www.mongodb.com/blog/post/mongodb-go-driver-tutorial">MongoDB Go Driver Tutorial</a></li>
<li><a href="https://www.jianshu.com/p/0344a21e8040?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">mongodb官方的golang驅動基礎使用課程分享</a></li>
<li><a href="https://zh.shellman.me/articles/mongo-go-driver-demo/">MongoDB官方推出的Go驅動庫“mongo-go-driver”快速課程</a></li>
<li><a href="https://blog.gtwang.org/programming/getting-started-with-mongodb-shell-1/">MongoDB 基礎入門教學：MongoDB Shell 篇</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Context]]></title>
    <link href="https://mgleon08.github.io/blog/2019/04/10/golang-context/"/>
    <updated>2019-04-10T21:30:20+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/04/10/golang-context</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>context</code> 是控制並發的一個 package，之前在 <a href="https://mgleon08.github.io/blog/2018/05/17/golang-goroutine-channel-worker-pool-select-mutex/#worker_pool">Worker Pool</a> 也有提到過另一個 <code>WaitGroup</code>，那為什麼需要兩種，來了解一下</p>

<h1>WaitGroup</h1>

<p>當所有的 <code>goroutine</code> 都完成後，才算完成</p>

<h3>實際場景</h3>

<p>有個監控程式跑很多 <code>gorountine</code>，當要停止時，就必須通知每個 <code>gorountine</code> 並等待所有都完成，才算完成，否則會造成記憶體洩漏</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">i</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">wg</span> <span class="o">*</span><span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;監控開始 &quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;監控 %d 結束\n&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">wg</span><span class="p">.</span><span class="nx">Done</span><span class="p">()</span> <span class="c1">// 執行完一次就 -1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">no</span> <span class="o">:=</span> <span class="mi">2</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">wg</span> <span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">no</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">wg</span><span class="p">.</span><span class="nx">Add</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>          <span class="c1">// 每次執行都 + 1</span>
</span><span class='line'>      <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">wg</span><span class="p">)</span> <span class="c1">// wg 一定要用 pointer，否則每個 goroutine 都會有各自的 WaitGroup</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">wg</span><span class="p">.</span><span class="nx">Wait</span><span class="p">()</span> <span class="c1">// 會 wait 到 0 才會繼續下一步</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;所有監控完成&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>大部分的 <code>gorountine</code> 啟動後，就會一直跑，大部分情況是等待它自己結束，如果是不會結束的 <code>gorountine</code>，就會一直跑下去，比較笨的方式就是，用一個變數去判斷是否要結束，但這樣就必須一直去檢查這個變數</p>

<p>因此可以改用 <code>chan + select</code> 來通知</p>

<h1>chan + select</h1>

<p>這方式很好的解決上述的問題，並且可以透過給予 <code>chan</code> 值來決定是否要停止，但還是有其他問題</p>

<ul>
<li>如果有很多 <code>goroutine</code> 都需要控制結束怎麼辦?</li>
<li><code>goroutine</code> 又衍生了其它更多的goroutine怎麼?</li>
</ul>


<p>即使定義很多 <code>chan</code> 也很難解決這個問題，因為 <code>goroutine</code> 的關係鏈就導致了這種場景非常複雜，因此就有另一個方式 <code>context</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">stop</span> <span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">stop</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;監控退出，停止了...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;goroutine 監控中...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">stop</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">stop</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">stop</span> <span class="o">&lt;-</span> <span class="kc">true</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;所有監控完成&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>context</h1>

<ul>
<li><a href="https://golang.org/pkg/context/">context</a></li>
</ul>


<p>上面提到的情境是多層級的 <code>goroutine</code>，因此要控制就必須跟蹤 <code>groutine</code></p>

<p>因此 golang 提供了 <code>context</code> 來控制，也就是 <code>groutine</code> 的上下文</p>

<h3>Context 使用原則</h3>

<ul>
<li>不要把 Context 放在結構體中，要以參數的方式傳遞</li>
<li>以 Context 作為參數的函式方法，應該把 Context 作為第一個參數，放在第一位。</li>
<li>給一個函式方法傳遞 Context 的時候，不要傳遞 nil，如果不知道傳遞什麼，就使用 <code>context.TODO</code></li>
<li>Context 的 Value 相關方法應該傳遞必須的數據，不要什麼數據都使用這個傳遞</li>
<li>Context 是執行緒安全的，可以放心的在多個 goroutine 中傳遞</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">Done</span><span class="p">():</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;監控退出，停止了...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;goroutine監控中...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ctx</span><span class="p">,</span> <span class="nx">cancel</span> <span class="o">:=</span> <span class="nx">context</span><span class="p">.</span><span class="nx">WithCancel</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">())</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ctx</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;通知監控停止&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">cancel</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;所有監控完成&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>context.Background()</code> 回傳一個非 nil 的空 context，不會被取消也沒有值或時間，就是 context 的根節點</li>
<li><code>context.WithCancel(parent)</code> 建立一個可取消的 <code>子 context</code> 當作參數來追蹤 <code>goroutine</code>，另外一個是 <code>cancle</code> 用於取消這個 <code>子 context</code></li>
<li><code>ctx.Done</code> 判斷是否要結束，透過 <code>cancel()</code> 來取消</li>
</ul>


<p>目前為止似乎跟 <code>chan</code> 沒什麼兩樣?接著試著控制多個 goroutine</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">,</span> <span class="nx">n</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">Done</span><span class="p">():</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="s">&quot;監控退出，停止了...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;goroutine %v 監控中...\n&quot;</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ctx</span><span class="p">,</span> <span class="nx">cancel</span> <span class="o">:=</span> <span class="nx">context</span><span class="p">.</span><span class="nx">WithCancel</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">())</span>
</span><span class='line'>  <span class="nx">n</span> <span class="o">:=</span> <span class="mi">3</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ctx</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;通知監控停止&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">cancel</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;所有監控完成&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到，上面即使有多個 <code>goroutine</code> 依樣只要一個 <code>cancel()</code> 就全部都取消了</p>

<p>如果是用之前 <code>chan</code>，變成只有一個 <code>true</code> 只能夠取消一個，就結束了，導致剩下的 memory 沒辦法釋放，或是一次放三個 <code>true</code> 去控制，但是當一多起來，就會變得很複雜</p>

<h1>Context interface</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">Context</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Deadline</span><span class="p">()</span> <span class="p">(</span><span class="nx">deadline</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Time</span><span class="p">,</span> <span class="nx">ok</span> <span class="kt">bool</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Done</span><span class="p">()</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="kd">struct</span><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Err</span><span class="p">()</span> <span class="kt">error</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Value</span><span class="p">(</span><span class="nx">key</span> <span class="kd">interface</span><span class="p">{})</span> <span class="kd">interface</span><span class="p">{}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>Deadline()</code> 是獲取設定的截止時間的意思

<ul>
<li><code>deadline</code> 截止時間，到了這個時間點，Context 會自動發起取消請求</li>
<li><code>ok</code> 如果是 false，表示沒有設定截止時間，如果需要取消的話，需要呼叫取消函式進行取消</li>
</ul>
</li>
<li><code>Done</code> 返回一個 <code>只讀的 chan</code>，類型為 struct{}

<ul>
<li>如果可讀取，表示 <code>parent context</code> 已發起取消的請求(<code>cancel</code>)，收到信號時就會開始清理操作，然後退出 goroutine，釋放資源</li>
</ul>
</li>
<li><code>Err</code> 返回取消的錯誤原因，因為什麼 Context 被取消</li>
<li><code>Value</code> 獲取該 Context 上繫結的值，是一個鍵值對，所以要透過一個 Key 才可以獲取對應的值，這個值一般是執行緒安全的</li>
</ul>


<h1>Other</h1>

<ul>
<li><a href="https://golang.org/pkg/context/#example_WithCancel">WithCancel</a> 主動取消</li>
<li><a href="https://golang.org/pkg/context/#example_WithDeadline">WithDeadline</a> 截止時間取消</li>
<li><a href="https://golang.org/pkg/context/#example_WithTimeout">WithTimeout</a> 超時取消</li>
<li><a href="https://golang.org/pkg/context/#example_WithValue">WithValue</a> 傳值</li>
<li>也可以不包上面的 With，直接使用 <code>context.Background()</code>，可以看到上面的 With 最後回傳的也是 <code>context Context</code></li>
</ul>


<p>Reference</p>

<ul>
<li><a href="https://golang.org/pkg/context/">context</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/58967892">Go Context</a></li>
<li><a href="https://deepzz.com/post/golang-context-package-notes.html">快速掌握 Golang context 包，簡單示例</a></li>
<li><a href="https://segmentfault.com/a/1190000017394302">Golang Context 是好的設計嗎？</a></li>
<li><a href="https://juejin.im/post/5a6873fef265da3e317e55b6">Golang Context深入理解</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Testing]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/28/golang-testing/"/>
    <updated>2019-03-28T18:24:12+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/28/golang-testing</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>Testing</h1>

<ul>
<li>檔案的結尾必須是，<code>測試檔案名稱</code> + <code>_test</code></li>
<li>測試函式必須是 <code>Test</code> 開頭，且必須第一個字母大寫(public)</li>
<li>測試函式 <code>TestXxx()</code> 的參數是 <code>testing.T</code>，我們可以使用該型別來記錄錯誤或者是測試狀態</li>
<li>要使用 <code>testing</code> package</li>
<li>測試案例會按照原始碼中寫的順序依次執行</li>
<li>函式中透過呼叫 <code>testing.T</code> 的 <code>Error</code>, <code>Errorf</code>, <code>FailNow</code>, <code>Fatal</code>, <code>FatalIf</code> 方法，說明測試不透過，呼叫 <code>Log</code> 方法用來記錄測試的資訊。</li>
</ul>


<h3>main.go</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// main.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;errors&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Division</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span> <span class="kt">float64</span><span class="p">)</span> <span class="p">(</span><span class="kt">float64</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">b</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">errors</span><span class="p">.</span><span class="nx">New</span><span class="p">(</span><span class="s">&quot;b can not be 0&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">a</span> <span class="o">/</span> <span class="nx">b</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">Division</span><span class="p">(</span><span class="mi">60</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>main_test.go</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// main_test.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;testing&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Test_division_1</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">e</span> <span class="o">:=</span> <span class="nx">Division</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span> <span class="nx">i</span> <span class="o">!=</span> <span class="mi">3</span> <span class="o">||</span> <span class="nx">e</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">t</span><span class="p">.</span><span class="nx">Error</span><span class="p">(</span><span class="s">&quot;失敗&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">t</span><span class="p">.</span><span class="nx">Log</span><span class="p">(</span><span class="s">&quot;成功&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Test_division_2</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">t</span><span class="p">.</span><span class="nx">Error</span><span class="p">(</span><span class="s">&quot;失敗&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Test_division_table</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">tables</span> <span class="o">:=</span> <span class="p">[]</span><span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">x</span> <span class="kt">float64</span>
</span><span class='line'>      <span class="nx">y</span> <span class="kt">float64</span>
</span><span class='line'>  <span class="p">}{</span>
</span><span class='line'>      <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
</span><span class='line'>      <span class="p">{</span><span class="mi">6</span><span class="p">,</span> <span class="mi">2</span><span class="p">},</span>
</span><span class='line'>      <span class="p">{</span><span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span>
</span><span class='line'>      <span class="p">{</span><span class="mi">8</span><span class="p">,</span> <span class="mi">2</span><span class="p">},</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">table</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">tables</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">e</span> <span class="o">:=</span> <span class="nx">Division</span><span class="p">(</span><span class="nx">table</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">table</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span> <span class="nx">i</span> <span class="o">!=</span> <span class="mi">3</span> <span class="o">||</span> <span class="nx">e</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">t</span><span class="p">.</span><span class="nx">Error</span><span class="p">(</span><span class="s">&quot;失敗&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">t</span><span class="p">.</span><span class="nx">Log</span><span class="p">(</span><span class="s">&quot;成功&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Run test</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// go test -v -cover</span>
</span><span class='line'>
</span><span class='line'><span class="o">==</span><span class="p">=</span> <span class="nx">RUN</span>   <span class="nx">Test_Division_1</span>
</span><span class='line'><span class="o">---</span> <span class="nx">PASS</span><span class="p">:</span> <span class="nx">Test_Division_1</span> <span class="p">(</span><span class="mf">0.00</span><span class="nx">s</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">main_test</span><span class="p">.</span><span class="k">go</span><span class="p">:</span><span class="mi">11</span><span class="p">:</span> <span class="nx">成功</span>
</span><span class='line'><span class="o">==</span><span class="p">=</span> <span class="nx">RUN</span>   <span class="nx">Test_Division_2</span>
</span><span class='line'><span class="o">---</span> <span class="nx">FAIL</span><span class="p">:</span> <span class="nx">Test_Division_2</span> <span class="p">(</span><span class="mf">0.00</span><span class="nx">s</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">main_test</span><span class="p">.</span><span class="k">go</span><span class="p">:</span><span class="mi">16</span><span class="p">:</span> <span class="nx">失敗</span>
</span><span class='line'><span class="o">==</span><span class="p">=</span> <span class="nx">RUN</span>   <span class="nx">Test_Division_table</span>
</span><span class='line'><span class="o">---</span> <span class="nx">FAIL</span><span class="p">:</span> <span class="nx">Test_Division_table</span> <span class="p">(</span><span class="mf">0.00</span><span class="nx">s</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">main_test</span><span class="p">.</span><span class="k">go</span><span class="p">:</span><span class="mi">34</span><span class="p">:</span> <span class="nx">成功</span>
</span><span class='line'>    <span class="nx">main_test</span><span class="p">.</span><span class="k">go</span><span class="p">:</span><span class="mi">34</span><span class="p">:</span> <span class="nx">成功</span>
</span><span class='line'>    <span class="nx">main_test</span><span class="p">.</span><span class="k">go</span><span class="p">:</span><span class="mi">34</span><span class="p">:</span> <span class="nx">成功</span>
</span><span class='line'>    <span class="nx">main_test</span><span class="p">.</span><span class="k">go</span><span class="p">:</span><span class="mi">32</span><span class="p">:</span> <span class="nx">失敗</span>
</span><span class='line'><span class="nx">FAIL</span>
</span><span class='line'><span class="nx">coverage</span><span class="p">:</span> <span class="mf">50.0</span><span class="o">%</span> <span class="nx">of</span> <span class="nx">statements</span>
</span><span class='line'><span class="nx">exit</span> <span class="nx">status</span> <span class="mi">1</span>
</span><span class='line'><span class="nx">FAIL</span>    <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">mgleon08</span><span class="o">/</span><span class="nx">packages</span><span class="o">/</span><span class="mf">015.</span><span class="nx">test</span>   <span class="mf">0.007</span><span class="nx">s</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Benchmark testing</h1>

<ul>
<li>檔案的結尾必須是，<code>測試檔案名稱</code> + <code>_test</code></li>
<li>測試函式必須是 <code>Benchmark</code> 開頭，且必須第一個字母大寫(public)</li>
<li><code>for</code> 循環內要放置要測試的程式碼</li>
<li><code>b.N</code> 是 go 語言內建提供的循環，根據一秒鐘的時間計算</li>
<li>測試函式 <code>Benchmark_xxx()</code> 的參數是 <code>b *testing.B</code></li>
</ul>


<h3>webbench_test.go</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// webbench_test.go</span>
</span><span class='line'>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;testing&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Benchmark_Division</span><span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">B</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">N</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span> <span class="c1">//use b.N for looping</span>
</span><span class='line'>      <span class="nx">Division</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Benchmark_TimeConsumingFunction</span><span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">B</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">b</span><span class="p">.</span><span class="nx">StopTimer</span><span class="p">()</span> <span class="c1">//呼叫該函式停止壓力測試的時間計數</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//做一些初始化的工作，例如讀取檔案資料，資料庫連線之類別的,</span>
</span><span class='line'>  <span class="c1">//這樣這些時間不影響我們測試函式本身的效能</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">b</span><span class="p">.</span><span class="nx">StartTimer</span><span class="p">()</span> <span class="c1">//重新開始時間</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">N</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">Division</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Run benchmark test</h3>

<p>跑測試 <code>go test -v -bench=. -run=none</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// go test -v -bench=. -run=none . -cover </span>
</span><span class='line'>
</span><span class='line'><span class="nx">goos</span><span class="p">:</span> <span class="nx">darwin</span>
</span><span class='line'><span class="nx">goarch</span><span class="p">:</span> <span class="nx">amd64</span>
</span><span class='line'><span class="nx">pkg</span><span class="p">:</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">mgleon08</span><span class="o">/</span><span class="nx">packages</span><span class="o">/</span><span class="mf">015.</span><span class="nx">test</span>
</span><span class='line'><span class="nx">Benchmark_Division</span><span class="o">-</span><span class="mi">4</span>                    <span class="mi">2000000000</span>               <span class="mf">0.43</span> <span class="nx">ns</span><span class="o">/</span><span class="nx">op</span>
</span><span class='line'><span class="nx">Benchmark_TimeConsumingFunction</span><span class="o">-</span><span class="mi">4</span>       <span class="mi">2000000000</span>               <span class="mf">0.42</span> <span class="nx">ns</span><span class="o">/</span><span class="nx">op</span>
</span><span class='line'><span class="nx">PASS</span>
</span><span class='line'><span class="nx">coverage</span><span class="p">:</span> <span class="mf">50.0</span><span class="o">%</span> <span class="nx">of</span> <span class="nx">statements</span>
</span><span class='line'><span class="nx">ok</span>      <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">mgleon08</span><span class="o">/</span><span class="nx">packages</span><span class="o">/</span><span class="mf">015.</span><span class="nx">test</span>   <span class="mf">1.802</span><span class="nx">s</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>-bench</code> - 要跑 Benchmark</li>
<li><code>-run=none</code> - 不要跑一般的測試</li>
<li><code>-4</code> - 目前的 CPU 核心數，也就是 GOMAXPROCS 的值</li>
<li><code>-benchtime=2s</code> - 加上這個代表跑 2 秒</li>
</ul>


<h1>Example testing</h1>

<ul>
<li>檔案的結尾必須是，<code>測試檔案名稱</code> + <code>_test</code></li>
<li>測試函式必須是 <code>Example</code> 開頭，且必須第一個字母大寫(public)</li>
<li><code>Output:</code> 是固定格式</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">ExampleDivision</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">i</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">Division</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// Output: 6</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">ExampleDivision2</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">i</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">Division</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">x</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">Division</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// Output:</span>
</span><span class='line'>  <span class="c1">// 3</span>
</span><span class='line'>  <span class="c1">// 4</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Use assert package</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// main.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;errors&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">numbers</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">A</span> <span class="kt">float64</span>
</span><span class='line'>  <span class="nx">B</span> <span class="kt">float64</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Division</span><span class="p">(</span><span class="nx">number</span> <span class="nx">numbers</span><span class="p">)</span> <span class="p">(</span><span class="kt">float64</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">number</span><span class="p">.</span><span class="nx">B</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">errors</span><span class="p">.</span><span class="nx">New</span><span class="p">(</span><span class="s">&quot;b can not be 0&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">number</span><span class="p">.</span><span class="nx">A</span> <span class="o">/</span> <span class="nx">number</span><span class="p">.</span><span class="nx">B</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">number</span> <span class="o">:=</span> <span class="nx">numbers</span><span class="p">{</span> <span class="mi">60</span><span class="p">,</span> <span class="mi">2</span> <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">Division</span><span class="p">(</span><span class="nx">number</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// main_test.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;testing&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/stretchr/testify/assert&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Test_Division</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Arrange</span>
</span><span class='line'>  <span class="nx">testCases</span> <span class="o">:=</span> <span class="p">[]</span><span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">name</span>     <span class="kt">string</span>
</span><span class='line'>      <span class="nx">p</span>        <span class="nx">numbers</span>
</span><span class='line'>      <span class="nx">expected</span> <span class="kt">float64</span>
</span><span class='line'>  <span class="p">}{</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="nx">name</span><span class="p">:</span> <span class="s">&quot;9/3 = 3&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">p</span><span class="p">:</span> <span class="nx">numbers</span><span class="p">{</span>
</span><span class='line'>              <span class="nx">A</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">B</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">expected</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="nx">name</span><span class="p">:</span> <span class="s">&quot;6/3 = 2&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">p</span><span class="p">:</span> <span class="nx">numbers</span><span class="p">{</span>
</span><span class='line'>              <span class="nx">A</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">B</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">expected</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="nx">name</span><span class="p">:</span> <span class="s">&quot;3/3 = 1&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">p</span><span class="p">:</span> <span class="nx">numbers</span><span class="p">{</span>
</span><span class='line'>              <span class="nx">A</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">B</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">expected</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">c</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">testCases</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">t</span><span class="p">.</span><span class="nx">Run</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span> <span class="kd">func</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// Act</span>
</span><span class='line'>          <span class="nx">r</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">Division</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">p</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// Assert</span>
</span><span class='line'>          <span class="nx">assert</span><span class="p">.</span><span class="nx">Equal</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="nx">r</span><span class="p">,</span> <span class="nx">c</span><span class="p">.</span><span class="nx">expected</span><span class="p">)</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference</p>

<ul>
<li><a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/zh-tw/11.3.md">11.3 Go 怎麼寫測試案例</a></li>
<li><a href="https://blog.wu-boy.com/2018/05/how-to-write-testing-in-golang/">如何在 Go 專案內寫測試</a></li>
<li><a href="https://blog.wu-boy.com/2018/06/how-to-write-benchmark-in-go/">如何在 Go 語言內寫效能測試</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10206088">Example 示例函式</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails With Active Storage]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/27/rails-active-storage/"/>
    <updated>2019-03-27T09:33:19+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/27/rails-active-storage</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>Active Storage</code> 是 rails 後來出的新功能，可以簡單的做到上傳檔案，雲端整合(<a href="https://aws.amazon.com/tw/s3/">Amazon S3</a>, <a href="https://cloud.google.com/storage/docs/">Google Cloud Storage</a>)，<code>MiniMagick</code> 影像操作等等，就像是 <a href="https://github.com/carrierwaveuploader/carrierwave">carrierwave</a>, <a href="https://github.com/thoughtbot/paperclip">paperclip</a> 等比較常用到的套件</p>

<p>跟以往用 carrierwave 或是 paperclip 不太一樣，不需要在現有的 model 新增欄位，而是透過 <code>polymorphic</code> 的方式，將檔案存在兩張獨立的 table， <code>active_storage_blobs</code>, <code>active_storage_attachments</code></p>

<h1>Init Project</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">active_storage_demo</span> <span class="o">--</span><span class="n">webpack</span><span class="o">=</span><span class="n">stimulus</span> <span class="o">--</span><span class="n">skip</span><span class="o">-</span><span class="n">coffee</span> <span class="o">--</span><span class="n">skip</span><span class="o">-</span><span class="nb">test</span> <span class="o">-</span><span class="n">d</span><span class="o">=</span><span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Install active_storage</h1>

<p>透過 <code>rails active_storage:install</code> 建立 active_storage 所需要的兩張 table，包括 <code>active_storage_blobs</code>, <code>active_storage_attachments</code></p>

<ul>
<li><code>active_storage_attachments</code>: 用來存跟 model 相關的資訊</li>
<li><code>active_storage_blobs</code>: 用來存詳細檔案的資訊(裡面包含了 <code>checksum</code> 將檔案做 hash 可以知道是否為同一個檔案)</li>
</ul>


<p>接著跑 <code>rake db:create db:migrate</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># This migration comes from active_storage (originally 20170806125915)</span>
</span><span class='line'><span class="k">class</span> <span class="nc">CreateActiveStorageTables</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="o">[</span><span class="mi">5</span><span class="o">.</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:active_storage_blobs</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>   <span class="ss">:key</span><span class="p">,</span>        <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>   <span class="ss">:filename</span><span class="p">,</span>   <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>   <span class="ss">:content_type</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">text</span>     <span class="ss">:metadata</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">bigint</span>   <span class="ss">:byte_size</span><span class="p">,</span>  <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>   <span class="ss">:checksum</span><span class="p">,</span>   <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">datetime</span> <span class="ss">:created_at</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">index</span> <span class="o">[</span> <span class="ss">:key</span> <span class="o">]</span><span class="p">,</span> <span class="ss">unique</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:active_storage_attachments</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>     <span class="ss">:name</span><span class="p">,</span>     <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">references</span> <span class="ss">:record</span><span class="p">,</span>   <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span> <span class="ss">polymorphic</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">index</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">references</span> <span class="ss">:blob</span><span class="p">,</span>     <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">datetime</span> <span class="ss">:created_at</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">index</span> <span class="o">[</span> <span class="ss">:record_type</span><span class="p">,</span> <span class="ss">:record_id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:blob_id</span> <span class="o">]</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;index_active_storage_attachments_uniqueness&quot;</span><span class="p">,</span> <span class="ss">unique</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">foreign_key</span> <span class="ss">:active_storage_blobs</span><span class="p">,</span> <span class="ss">column</span><span class="p">:</span> <span class="ss">:blob_id</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>預設檔案存在 local(也可以改成 s3 或 GCS)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/environments/development.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_storage</span><span class="o">.</span><span class="n">service</span> <span class="o">=</span> <span class="ss">:local</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># config/storage.yml</span>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">service</span><span class="p">:</span> <span class="no">Disk</span>
</span><span class='line'>  <span class="ss">root</span><span class="p">:</span> <span class="o">&lt;</span><span class="sx">%= Rails.root.join(&quot;tmp/storage&quot;) %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">local:</span>
</span><span class='line'><span class="sx">  service: Disk</span>
</span><span class='line'><span class="sx">  root: &lt;%=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;storage&quot;</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>建立 user moblie</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">scaffold</span> <span class="no">User</span> <span class="nb">name</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 user model 設定可以上傳的檔案有哪些</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># models/user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="n">has_one_attached</span> <span class="ss">:avatar</span>
</span><span class='line'>  <span class="n">has_many_attached</span> <span class="ss">:documents</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 view 上面新增畫面，如果是要多個檔案，要加上 <code>multiple: true</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># views/users/_form.html.erb</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= form.label :avatar %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">form</span><span class="o">.</span><span class="n">file_field</span> <span class="ss">:avatar</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= form.label :documents %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">form</span><span class="o">.</span><span class="n">file_field</span> <span class="ss">:documents</span><span class="p">,</span> <span class="ss">multiple</span><span class="p">:</span> <span class="kp">true</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>image_tag(@user.avatar)</code> 顯示圖片</li>
<li><code>rails_blob_path(doc, disposition: "attachment"))</code> 附件</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># views/users/show.html.erb</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;</span><span class="n">avatar</span><span class="o">&lt;</span><span class="sr">/h2&gt;</span>
</span><span class='line'><span class="sr">&lt;% if @user.avatar.attached? %&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= image_tag(@user.avatar) %&gt;</span>
</span><span class='line'><span class="sr">&lt;% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="vi">@user</span><span class="o">.</span><span class="n">documents</span><span class="o">.</span><span class="n">attached?</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;p&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;</span><span class="no">Download</span> <span class="no">Documents</span><span class="o">&lt;</span><span class="sr">/h2&gt;</span>
</span><span class='line'><span class="sr">  &lt;% @user.documents.each_with_index do |doc, i| %&gt;</span>
</span><span class='line'><span class="sr">    &lt;p&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= link_to(&quot;Document </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="sr">&quot;, rails_blob_path(doc, disposition: &quot;attachment&quot;)) %&gt;</span>
</span><span class='line'><span class="sr">    &lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>並在 controller 新增 permit，因為 documents 是多個檔案，所以給 Array</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># controllers/users_controller.rb</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_params</span>
</span><span class='line'>  <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="ss">:avatar</span><span class="p">,</span> <span class="ss">documents</span><span class="p">:</span> <span class="o">[]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著就可以 <code>rails s</code> 來新增 user 測試看看了</p>

<h1>刪除檔案</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 同步刪除頭像和實際資源檔案。</span>
</span><span class='line'><span class="vi">@user</span><span class="o">.</span><span class="n">avatar</span><span class="o">.</span><span class="n">purge</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 透過 Active Job 非同步刪除相關模型和實際資源檔案。</span>
</span><span class='line'><span class="vi">@user</span><span class="o">.</span><span class="n">avatar</span><span class="o">.</span><span class="n">purge_later</span>
</span></code></pre></td></tr></table></div></figure>


<h1>調整圖片尺寸</h1>

<p>不同尺寸可以透過 <a href="https://github.com/minimagick/minimagick">minimagick</a> 做轉換</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;mini_magick&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># views/users/show.html.erb</span>
</span><span class='line'><span class="o">&lt;%=</span> <span class="n">image_tag</span> <span class="vi">@user</span><span class="o">.</span><span class="n">avatar</span><span class="o">.</span><span class="n">variant</span><span class="p">(</span><span class="ss">resize</span><span class="p">:</span> <span class="s2">&quot;100x100&quot;</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Direct Upload</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">yarn</span> <span class="n">add</span> <span class="n">activestorage</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># javascript/packs/direct_upload.js</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="o">*</span> <span class="n">as</span> <span class="no">ActiveStorage</span> <span class="n">from</span> <span class="s1">&#39;activestorage&#39;</span><span class="p">;</span>
</span><span class='line'><span class="no">ActiveStorage</span><span class="o">.</span><span class="n">start</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<h1>other</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># url</span>
</span><span class='line'><span class="n">url_for</span><span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">avatar</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># download link</span>
</span><span class='line'><span class="n">rails_blob_path</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">avatar</span><span class="p">,</span> <span class="ss">disposition</span><span class="p">:</span> <span class="s2">&quot;attachment&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">url_helpers</span><span class="o">.</span><span class="n">rails_blob_url</span><span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">avatar</span><span class="p">,</span> <span class="ss">only_path</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>後續</h1>

<p>接著看一下 source code，可以發現到 blob 可以有多個 attachments。</p>

<p>代表 blob 是可以重複利用，但是必須在 <code>has_one/many_attached</code> 後面加上 <code>dependent: false</code> 才不會刪除了一個 attachment 就將 blob 刪除，導致其他 attachment 關聯不到</p>

<p>另外 <a href="https://www.rubydoc.info/github/rails/rails/Module:delegate_missing_to">delegate_missing_to</a> 則是類似 delegate 的加強版，讓 user 可以直接 call <code>user.filename</code></p>

<blockquote><p><a href="https://ruby-china.org/topics/33119">Rails 5.1 add delegate_missing_to</a></p></blockquote>

<p><code>belongs_to :record</code> 則是透過 <code>polymorphic</code> 的方式來存取是由哪個 model 的資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails/activestorage/app/models/active_storage/blob.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ActiveStorage</span><span class="o">::</span><span class="no">Blob</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">table_name</span> <span class="o">=</span> <span class="s2">&quot;active_storage_blobs&quot;</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:attachments</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails/activestorage/app/models/active_storage/attachment.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ActiveStorage</span><span class="o">::</span><span class="no">Attachment</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">table_name</span> <span class="o">=</span> <span class="s2">&quot;active_storage_attachments&quot;</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:record</span><span class="p">,</span> <span class="ss">polymorphic</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">touch</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:blob</span><span class="p">,</span> <span class="ss">class_name</span><span class="p">:</span> <span class="s2">&quot;ActiveStorage::Blob&quot;</span>
</span><span class='line'>  <span class="n">delegate_missing_to</span> <span class="ss">:blob</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>缺點</h1>

<ul>
<li>有人提到 Active Storage 目前不適合用在 production <a href="https://ruby-china.org/topics/37717">Active Storage 的正確使用姿勢</a></li>
<li>也有人提到，容易造成 N+1，永久網址難以 cache，redirect 效能問題，routing 衝突等等 <a href="https://5xruby.tw/posts/active-storage-review/">Active Storage 開箱文</a></li>
</ul>


<h1>demo</h1>

<p><a href="https://github.com/mgleon08/active_storage_demo">active_storage_demo</a></p>

<p>Reference:</p>

<ul>
<li><a href="https://guides.rubyonrails.org/active_storage_overview.html">Active Storage Overview</a></li>
<li><a href="https://github.com/rails/rails/tree/master/activestorage">activestorage</a></li>
<li><a href="https://medium.com/@ebifurai_tsn/active-storage-after-rails-5-2-26ad89c93b57">Active Storage after Rails 5.2</a></li>
<li><a href="https://andyyou.github.io/2018/06/26/using-active-storage/">手把手學習使用 Rails 5.2 ActiveStorage (DirectUpload + ProgressBar)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - Unary Operator]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/15/ruby-unary-operator/"/>
    <updated>2019-03-15T23:11:38+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/15/ruby-unary-operator</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>In Ruby, a unary operator is an operator which only takes a single &lsquo;argument&rsquo; in the form of a receiver.</p></blockquote>

<p><code>unary operator</code> likes <code>+</code> <code>-</code> <code>!</code> <code>~</code> <code>&amp;</code> <code>*</code>..</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span><span class="mi">8</span>
</span><span class='line'><span class="c1"># =&gt; -8</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 2.2.3 Ruby</span>
</span><span class='line'><span class="o">-</span><span class="s1">&#39;test&#39;</span>
</span><span class='line'><span class="c1"># NoMethodError: private method `-@&#39; called for &quot;test&quot;:String</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 2.4.1 之後似乎就不會有 error</span>
</span><span class='line'><span class="o">-</span><span class="s1">&#39;test&#39;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;test&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add <code>-@</code> method to String class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">String</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">-@</span>
</span><span class='line'>     <span class="nb">self</span> <span class="o">+</span> <span class="s2">&quot; hello&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># =&gt; :-@</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="s1">&#39;test&#39;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;test hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Full Example</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">MagicString</span> <span class="o">&lt;</span> <span class="nb">String</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">+@</span>
</span><span class='line'>    <span class="n">upcase</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">-@</span>
</span><span class='line'>    <span class="n">downcase</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">~</span>
</span><span class='line'>    <span class="c1"># Do a ROT13 transformation - http://en.wikipedia.org/wiki/ROT13</span>
</span><span class='line'>    <span class="n">tr</span> <span class="s1">&#39;A-Za-z&#39;</span><span class="p">,</span> <span class="s1">&#39;N-ZA-Mn-za-m&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_proc</span>
</span><span class='line'>    <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">self</span> <span class="o">+</span> <span class="s2">&quot; hello&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_a</span>
</span><span class='line'>    <span class="o">[</span><span class="nb">self</span><span class="o">.</span><span class="n">reverse</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="o">!</span>
</span><span class='line'>   <span class="n">swapcase</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">str</span> <span class="o">=</span> <span class="no">MagicString</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;This is my string!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="o">+</span><span class="n">str</span>                   <span class="c1"># =&gt; &quot;THIS IS MY STRING!&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="o">~</span><span class="n">str</span>                   <span class="c1"># =&gt; &quot;Guvf vf zl fgevat!&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="o">+~</span><span class="n">str</span>                  <span class="c1"># =&gt; &quot;GUVF VF ZL FGEVAT!&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="sx">%w(a b)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="n">str</span><span class="p">)</span>      <span class="c1"># =&gt; [&quot;This is my string! hello&quot;, &quot;This is my string! hello&quot;]</span>
</span><span class='line'><span class="nb">p</span> <span class="o">*</span><span class="n">str</span>                   <span class="c1"># =&gt; &quot;!gnirts ym si sihT&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="o">!</span><span class="n">str</span>                   <span class="c1"># =&gt; &quot;tHIS IS MY STRING!&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="p">(</span><span class="ow">not</span> <span class="n">str</span><span class="p">)</span>              <span class="c1"># =&gt; &quot;tHIS IS MY STRING!&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="o">!</span><span class="p">(</span><span class="o">~</span><span class="n">str</span><span class="p">)</span>                <span class="c1"># =&gt; &quot;gUVF VF ZL FGEVAT!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference</p>

<ul>
<li><a href="http://www.rubyinside.com/rubys-unary-operators-and-how-to-redefine-their-functionality-5610.html">Ruby’s Unary Operators and How to Redefine Their Functionality</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails With Grape]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/15/rails-with-grape/"/>
    <updated>2019-03-15T23:04:35+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/15/rails-with-grape</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Grape 是一個用來建立 API 的 framework，不過在 rails5 之後就有支援 <code>API mode</code>，不過還是來了解一下，實際上來用應該還是用 rails 內建的 <code>API mode</code></p>

<blockquote><p>An opinionated framework for creating REST-like APIs in Ruby.</p></blockquote>

<p>好處</p>

<ul>
<li>採用獨特的 DSL 來簡化建立API的流程</li>
<li>支援 swagger 文件自動生成</li>
</ul>


<h1>Create Project</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">demo_rails_grape</span> <span class="o">-</span><span class="n">T</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">User</span> <span class="nb">name</span><span class="ss">:string</span> <span class="ss">email</span><span class="p">:</span><span class="n">string</span> <span class="ss">tel</span><span class="p">:</span><span class="n">string</span>
</span></code></pre></td></tr></table></div></figure>


<h3>rails c</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;user1&quot;</span><span class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">&quot;text1@gmail.com&quot;</span><span class="p">,</span> <span class="ss">tel</span><span class="p">:</span> <span class="mi">111</span><span class="p">)</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;user2&quot;</span><span class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">&quot;text2@gmail.com&quot;</span><span class="p">,</span> <span class="ss">tel</span><span class="p">:</span> <span class="mi">222</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<h3>seed</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">seed</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Grape</h1>

<p>grape 設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;grape&quot;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 1.1.0&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># routes</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">mount</span> <span class="no">APIBase</span> <span class="o">=&gt;</span> <span class="s2">&quot;/api&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /api/api_base.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">APIBase</span> <span class="o">&lt;</span> <span class="no">Grape</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>  <span class="c1"># general settings</span>
</span><span class='line'>  <span class="nb">format</span> <span class="ss">:json</span>
</span><span class='line'>  <span class="n">content_type</span> <span class="ss">:json</span><span class="p">,</span> <span class="s2">&quot;application/json&quot;</span>
</span><span class='line'>  <span class="n">default_error_status</span> <span class="mi">400</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">mount</span> <span class="no">V1</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /api/v1/base.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Base</span> <span class="o">&lt;</span> <span class="no">APIBase</span>
</span><span class='line'>    <span class="n">version</span> <span class="s2">&quot;v1&quot;</span><span class="p">,</span> <span class="ss">using</span><span class="p">:</span> <span class="ss">:path</span>
</span><span class='line'>    <span class="n">mount</span> <span class="no">User</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /api/v1/base/user</span>
</span><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">Base</span>
</span><span class='line'>    <span class="n">get</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">present</span> <span class="ss">:users</span><span class="p">,</span> <span class="s2">&quot;leon&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rs -p 4321</span>
</span><span class='line'><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">4321</span><span class="o">/</span><span class="n">api</span><span class="o">/</span><span class="n">v1</span><span class="o">/</span><span class="n">user</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Grape Swagger</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;grape-swagger&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;grape-swagger-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># routes</span>
</span><span class='line'><span class="k">if</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">development?</span>
</span><span class='line'>  <span class="n">mount</span> <span class="no">GrapeSwaggerRails</span><span class="o">::</span><span class="no">Engine</span> <span class="o">=&gt;</span> <span class="s1">&#39;/apidoc&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/grape_swagger.rb</span>
</span><span class='line'><span class="k">if</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">development?</span>
</span><span class='line'>  <span class="no">GrapeSwaggerRails</span><span class="o">.</span><span class="n">options</span><span class="o">.</span><span class="n">app_url</span> <span class="o">=</span> <span class="s1">&#39;/api/v1/&#39;</span>
</span><span class='line'>  <span class="no">GrapeSwaggerRails</span><span class="o">.</span><span class="n">options</span><span class="o">.</span><span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;swagger_doc.json&#39;</span>
</span><span class='line'>  <span class="no">GrapeSwaggerRails</span><span class="o">.</span><span class="n">options</span><span class="o">.</span><span class="n">app_name</span> <span class="o">=</span> <span class="s1">&#39;RailsGrape Swagger&#39;</span>
</span><span class='line'>  <span class="c1"># Set docExpansion with &quot;none&quot; or &quot;list&quot; or &quot;full&quot;, default is &quot;none&quot;.</span>
</span><span class='line'>  <span class="no">GrapeSwaggerRails</span><span class="o">.</span><span class="n">options</span><span class="o">.</span><span class="n">doc_expansion</span> <span class="o">=</span> <span class="s2">&quot;list&quot;</span>
</span><span class='line'>  <span class="no">GrapeSwaggerRails</span><span class="o">.</span><span class="n">options</span><span class="o">.</span><span class="n">supported_submit_methods</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;get&#39;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># api/v1/base/user</span>
</span><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">Base</span>
</span><span class='line'>    <span class="n">get</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">users</span> <span class="o">=</span> <span class="o">::</span><span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>      <span class="n">present</span> <span class="ss">:users</span><span class="p">,</span> <span class="n">users</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /api/v1/base.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Base</span> <span class="o">&lt;</span> <span class="no">APIBase</span>
</span><span class='line'>    <span class="n">version</span> <span class="s1">&#39;v1&#39;</span><span class="p">,</span> <span class="ss">using</span><span class="p">:</span> <span class="ss">:path</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mount</span> <span class="no">User</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">development?</span>
</span><span class='line'>      <span class="n">add_swagger_documentation</span><span class="p">(</span>
</span><span class='line'>        <span class="ss">api_version</span><span class="p">:</span> <span class="s1">&#39;v1&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">mount_path</span><span class="p">:</span> <span class="s1">&#39;swagger_doc&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">hide_format</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">hide_documentation_path</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">info</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">title</span><span class="p">:</span> <span class="s1">&#39;API Doc&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">description</span><span class="p">:</span> <span class="s1">&#39;基本使用規則&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails s -p 4321</span>
</span><span class='line'><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">4321</span><span class="o">/</span><span class="n">apidoc</span>
</span><span class='line'><span class="c1"># json</span>
</span><span class='line'><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">4321</span><span class="o">/</span><span class="n">api</span><span class="o">/</span><span class="n">v1</span><span class="o">/</span><span class="n">swagger_doc</span><span class="o">.</span><span class="n">json</span>
</span></code></pre></td></tr></table></div></figure>


<h1>grape-entity</h1>

<p>JSON 的 field 內容就會是對應 entity 中配置的欄位，能方便的配置需要返回什麼欄位</p>

<blockquote><p>An API focused facade that sits on top of an object model.</p></blockquote>

<p>新增 Gem</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;grape-entity&quot;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.7.1&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;grape-swagger-entity&quot;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 0.3.0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>新增 entities</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /api/v1/entities/user_result.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">V1::Entities</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">UserResult</span> <span class="o">&lt;</span> <span class="no">Grape</span><span class="o">::</span><span class="no">Entity</span>
</span><span class='line'>    <span class="n">expose</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">documentation</span><span class="p">:</span> <span class="p">{</span> <span class="ss">required</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="s1">&#39;String&#39;</span><span class="p">,</span> <span class="ss">desc</span><span class="p">:</span> <span class="s1">&#39;錯誤訊息&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 swagger 新增資訊，加上 entity</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /api/v1/user.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">Base</span>
</span><span class='line'>    <span class="c1"># users</span>
</span><span class='line'>    <span class="n">desc</span> <span class="s2">&quot;`回傳所有 User 資訊`&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">failure</span> <span class="o">[</span>
</span><span class='line'>        <span class="o">[</span><span class="mi">400</span><span class="p">,</span> <span class="s2">&quot;`找不到任何 user`&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="o">[</span><span class="mi">500</span><span class="p">,</span> <span class="s2">&quot;`unknown`&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">get</span> <span class="ss">:users</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">users</span> <span class="o">=</span> <span class="o">::</span><span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>      <span class="n">present</span> <span class="ss">:users</span><span class="p">,</span> <span class="n">users</span><span class="p">,</span> <span class="ss">with</span><span class="p">:</span> <span class="no">V1</span><span class="o">::</span><span class="no">Entities</span><span class="o">::</span><span class="no">UserResult</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># user</span>
</span><span class='line'>    <span class="n">desc</span> <span class="s2">&quot;`帶 name 回傳該 User 資訊`&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">success</span> <span class="ss">model</span><span class="p">:</span> <span class="no">V1</span><span class="o">::</span><span class="no">Entities</span><span class="o">::</span><span class="no">UserResult</span><span class="p">,</span> <span class="ss">examples</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;application/json&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;user1&#39;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">failure</span> <span class="o">[</span>
</span><span class='line'>        <span class="o">[</span><span class="mi">400</span><span class="p">,</span> <span class="s2">&quot;`找不到任何 user`&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="o">[</span><span class="mi">500</span><span class="p">,</span> <span class="s2">&quot;`unknown`&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">params</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">optional</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="ss">allow_blank</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span> <span class="ss">documentation</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="ss">description</span><span class="p">:</span> <span class="s2">&quot;name&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">example</span><span class="p">:</span> <span class="s2">&quot;user1&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">at_least_one_of</span> <span class="ss">:name</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">get</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">user</span> <span class="o">=</span> <span class="o">::</span><span class="no">User</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="s2">&quot;name&quot;</span><span class="o">]</span><span class="p">)</span> <span class="o">||</span> <span class="s2">&quot;Can&#39;t find </span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="s2">&quot;name&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">present</span> <span class="ss">:user</span><span class="p">,</span> <span class="n">user</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Demo</h1>

<ul>
<li><a href="https://github.com/mgleon08/demo_rails_grape">demo_rails_grape</a></li>
</ul>


<p>Reference</p>

<ul>
<li><a href="https://github.com/ruby-grape/grape">grape</a></li>
<li><a href="https://github.com/ruby-grape/grape-swagger">grape-swagger</a></li>
<li><a href="https://github.com/ruby-grape/grape-swagger-rails">grape-swagger-rails</a></li>
<li><a href="https://pathbox.github.io/2016/05/28/rails-grape-api/">rails + grape 快速API簡單搭建</a></li>
<li><a href="https://sibevin.github.io/posts/2015-10-01-165320-create-api-with-grape-in-rails">在rails中使用grape來建立API</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails With mongoDB]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/15/rails-with-mongodb/"/>
    <updated>2019-03-15T23:01:55+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/15/rails-with-mongodb</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Version: Ruby 2.5.3, Rails 5.2.2</p></blockquote>

<h1>Generate new project</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">demo_rails_mongodb</span> <span class="o">--</span><span class="n">skip</span><span class="o">-</span><span class="n">active</span><span class="o">-</span><span class="n">record</span> <span class="o">--</span><span class="n">api</span> <span class="o">-</span><span class="n">C</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Add mongoid gem</h1>

<ul>
<li><a href="https://github.com/mongodb/mongoid">mongoid</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;mongoid&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 7.0.2&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>create <code>config/mongoid.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="ss">mongoid</span><span class="p">:</span><span class="n">config</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Add docker-compose</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker-compose.yml</span>
</span><span class='line'><span class="ss">version</span><span class="p">:</span> <span class="s1">&#39;3&#39;</span>
</span><span class='line'><span class="ss">services</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">mongo</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">image</span><span class="p">:</span> <span class="ss">mongo</span><span class="p">:</span><span class="mi">4</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'>    <span class="ss">container_name</span><span class="p">:</span> <span class="n">mongo4</span>
</span><span class='line'>    <span class="ss">restart</span><span class="p">:</span> <span class="n">always</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="s1">&#39;27017:27017&#39;</span>
</span><span class='line'>    <span class="ss">volumes</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="o">.</span><span class="n">/tmp</span><span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">mongo</span><span class="o">/</span><span class="ss">data</span><span class="p">:</span><span class="sr">/data/</span><span class="n">db</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Create model &amp; data</h1>

<h3>Scaffold</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">scaffold</span> <span class="n">book</span> <span class="ss">title</span><span class="p">:</span><span class="n">string</span> <span class="ss">author</span><span class="p">:</span><span class="n">string</span> <span class="ss">pages</span><span class="p">:</span><span class="n">integer</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/book.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Book</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Mongoid</span><span class="o">::</span><span class="no">Document</span>
</span><span class='line'>  <span class="n">field</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="nb">String</span>
</span><span class='line'>  <span class="n">field</span> <span class="ss">:pages</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="nb">Integer</span>
</span><span class='line'>  <span class="n">field</span> <span class="ss">:author</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="nb">String</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:author</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails c</span>
</span><span class='line'><span class="no">Book</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;First&quot;</span><span class="p">,</span> <span class="ss">pages</span><span class="p">:</span><span class="mi">20</span><span class="p">,</span> <span class="ss">author</span><span class="p">:</span><span class="s2">&quot;leon&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>View</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails s -p 4321</span>
</span><span class='line'><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">4321</span><span class="o">/</span><span class="n">books</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Demo</h1>

<ul>
<li><a href="https://github.com/mgleon08/demo_rails_mongodb">demo_rails_mongodb</a></li>
</ul>


<p>Reference</p>

<ul>
<li><a href="https://docs.mongodb.com/mongoid/current/">Mongoid</a></li>
<li><a href="https://mongoid.github.io/old/en/mongoid/index.html">old mongoid doc</a></li>
<li><a href="https://blog.gtwang.org/programming/getting-started-with-mongodb-shell-1/">MongoDB 基礎入門教學：MongoDB Shell 篇</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - MySQL]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/11/golang-mysql/"/>
    <updated>2019-03-11T23:13:41+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/11/golang-mysql</id>
    <content type="html"><![CDATA[<!-- more -->


<p>golang 在 database 上的存取，建立了一個 sql 抽象介面 <a href="https://golang.org/pkg/database/sql/">database/sql</a>，接著大家就可以透過這個 interface 去實作裡面相對應的 driver</p>

<p>目前看到比較多人使用的是 <a href="https://github.com/go-sql-driver/mysql">go-sql-driver/mysql</a></p>

<h1>install</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">get</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="k">go</span><span class="o">-</span><span class="nx">sql</span><span class="o">-</span><span class="nx">driver</span><span class="o">/</span><span class="nx">mysql</span>
</span></code></pre></td></tr></table></div></figure>


<h1>connect to database</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;database/sql&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;strings&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">_</span> <span class="s">&quot;github.com/go-sql-driver/mysql&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// db 設定</span>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">userName</span> <span class="p">=</span> <span class="s">&quot;root&quot;</span>
</span><span class='line'>  <span class="nx">password</span> <span class="p">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>  <span class="nx">host</span>     <span class="p">=</span> <span class="s">&quot;127.0.0.1&quot;</span>
</span><span class='line'>  <span class="nx">port</span>     <span class="p">=</span> <span class="s">&quot;3306&quot;</span>
</span><span class='line'>  <span class="nx">dbName</span>   <span class="p">=</span> <span class="s">&quot;dbName&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">initDB</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// [username[:password]@][protocol[(address)]]/dbname[?param1=value1&amp;...&amp;paramN=valueN]</span>
</span><span class='line'>  <span class="c1">// &quot;username:password@tcp(host:port)/數據庫?charset=utf8&quot;</span>
</span><span class='line'>  <span class="nx">path</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nx">Join</span><span class="p">([]</span><span class="kt">string</span><span class="p">{</span><span class="nx">userName</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="nx">password</span><span class="p">,</span> <span class="s">&quot;@tcp(&quot;</span><span class="p">,</span> <span class="nx">host</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="nx">port</span><span class="p">,</span> <span class="s">&quot;)/&quot;</span><span class="p">,</span> <span class="nx">dbName</span><span class="p">,</span> <span class="s">&quot;?charset=utf8&quot;</span><span class="p">},</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 第一個是 driverName 第二個則是 database 的設定 path</span>
</span><span class='line'>  <span class="c1">// 也可以用 var DB *sql.DB</span>
</span><span class='line'>  <span class="nx">DB</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">sql</span><span class="p">.</span><span class="nx">Open</span><span class="p">(</span><span class="s">&quot;mysql&quot;</span><span class="p">,</span> <span class="nx">path</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 設定 database 最大連接數</span>
</span><span class='line'>  <span class="nx">DB</span><span class="p">.</span><span class="nx">SetConnMaxLifetime</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定上 database 最大閒置連接數</span>
</span><span class='line'>  <span class="nx">DB</span><span class="p">.</span><span class="nx">SetMaxIdleConns</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 驗證是否連上 db</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">DB</span><span class="p">.</span><span class="nx">Ping</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;opon database fail:&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;connnect success&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">initDB</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>query</h1>

<h3>Exec</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">result</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">db</span><span class="p">.</span><span class="nx">Exec</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;INSERT INTO users (name) VALUES (?)&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>QueryRow</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">var</span> <span class="nx">id</span> <span class="kt">int64</span>
</span><span class='line'><span class="nx">row</span> <span class="o">:=</span> <span class="nx">DB</span><span class="p">.</span><span class="nx">QueryRow</span><span class="p">(</span><span class="s">&quot;SELECT id FROM users WHERE name = ?&quot;</span><span class="p">,</span> <span class="s">&quot;leon&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">err</span> <span class="o">:=</span> <span class="nx">row</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">id</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Query</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">rows</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">DB</span><span class="p">.</span><span class="nx">Query</span><span class="p">(</span><span class="s">&quot;SELECT * FROM banner&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 記得要 close</span>
</span><span class='line'><span class="k">defer</span> <span class="nx">rows</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'><span class="k">for</span> <span class="nx">rows</span><span class="p">.</span><span class="nx">Next</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">id</span><span class="p">,</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">height</span> <span class="kt">int64</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">rows</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">id</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">width</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">height</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;id: %v, width: %v, height: %v\n&quot;</span><span class="p">,</span> <span class="nx">id</span><span class="p">,</span> <span class="nx">width</span><span class="p">,</span> <span class="nx">height</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">rows</span><span class="p">.</span><span class="nx">Err</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Prepare</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">width</span> <span class="o">:=</span> <span class="mi">640</span>
</span><span class='line'><span class="nx">stmt</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">DB</span><span class="p">.</span><span class="nx">Prepare</span><span class="p">(</span><span class="s">&quot;SELECT id FROM banner WHERE width = ?&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">rows</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">stmt</span><span class="p">.</span><span class="nx">Query</span><span class="p">(</span><span class="nx">width</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 記得要 close</span>
</span><span class='line'><span class="k">defer</span> <span class="nx">rows</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'><span class="k">for</span> <span class="nx">rows</span><span class="p">.</span><span class="nx">Next</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">id</span> <span class="kt">int64</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">rows</span><span class="p">.</span><span class="nx">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">id</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;id: %v\n&quot;</span><span class="p">,</span> <span class="nx">id</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Begin (transcation)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 開啟 transaction</span>
</span><span class='line'><span class="nx">tx</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">DB</span><span class="p">.</span><span class="nx">Begin</span><span class="p">()</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;tx fail&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 準備 sql 語句</span>
</span><span class='line'><span class="nx">stmt</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">tx</span><span class="p">.</span><span class="nx">Prepare</span><span class="p">(</span><span class="s">&quot;INSERT INTO banner (`id`, `width`, `height`) VALUES (?, ?, ?)&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Prepare fail&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 設定參數以及執行 sql 語句</span>
</span><span class='line'><span class="nx">res</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">stmt</span><span class="p">.</span><span class="nx">Exec</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Exec fail&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 提交 transaction</span>
</span><span class='line'><span class="nx">tx</span><span class="p">.</span><span class="nx">Commit</span><span class="p">()</span>
</span><span class='line'><span class="c1">// 取得最後一個 insert 的 id</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">LastInsertId</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<h1>各種方式效率分析</h1>

<p>先參照 <a href="https://studygolang.com/articles/3022">golang學習之旅：使用go語言操作mysql數據庫</a> 之後有用到再來研究</p>

<p>Reference:</p>

<ul>
<li><a href="https://golang.org/pkg/database/sql/">database/sql</a></li>
<li><a href="https://github.com/go-sql-driver/mysql">go-sql-driver/mysql</a></li>
<li><a href="https://www.jianshu.com/p/ee87e989f149">Golang連接mysql數據庫</a></li>
<li><a href="https://studygolang.com/articles/3022">golang學習之旅：使用go語言操作mysql數據庫</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang Implementation of gRPC]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/07/golang-grpc/"/>
    <updated>2019-03-07T21:57:06+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/07/golang-grpc</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近剛好看到 gRPC 蠻好奇是什麼的，就來了解一下，並試著用 golang 去實現</p>

<h1>What are protocol buffers?</h1>

<blockquote><p>Protocol buffers are Google&rsquo;s language-neutral, platform-neutral, extensible mechanism for serializing structured data</p></blockquote>

<ul>
<li>簡單的來說，就是類似像 <code>JSON</code>，<code>XML</code> 的序列化結構資料格式，但是更小、更快，而且更簡潔</li>
<li>目前支援多種語言 <code>Java</code>, <code>Python</code>, <code>Objective-C</code>, <code>C++</code>, <code>Go</code>, <code>Ruby</code>, and <code>C#</code></li>
<li>只需要定義一次資料結構，就能自動生成符合你程式語言的檔案，讓你能夠直接在你的程式上使用。</li>
<li>結構就是文件，不需額外撰寫 API 文件，<code>.proto</code> 檔本身就是一種「文件」。</li>
</ul>


<h1>What are gRPC?</h1>

<ul>
<li>Simple service definition - 透過 <code>Protocol Buffers</code> 定義 service，就是可以在 <code>.proto</code> 檔案就可以定義好 service 內容</li>
<li>Works across languages and platforms - 自動生成支援客戶端的語言，由下圖解說就是，Server跟 Client 端都透過 <code>protocol buffers</code> 來做傳遞，但三個分別是 <code>ruby</code>, <code>java</code>, <code>c++</code></li>
</ul>


<p><img src="https://grpc.io/img/landing-2.svg" alt="" /></p>

<ul>
<li>Start quickly and scale</li>
<li>Bi-directional streaming and integrated authBi-directional</li>
</ul>


<h1>Quick Start</h1>

<ul>
<li>各種語言都能夠設定，這裡主要先用 Golang <a href="https://grpc.io/docs/quickstart/go.html">quickstart</a></li>
</ul>


<blockquote><p>基本的開發步驟是定義 proto 文件， 定義請求 Request 和 響應 Response 的格式，然後定義一個服務 Service， Service可以包含多個方法。</p></blockquote>

<h3>gRPC requires Go <code>1.6</code> or <code>higher</code>.</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">version</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Install gRPC</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">get</span> <span class="o">-</span><span class="nx">u</span> <span class="nx">google</span><span class="p">.</span><span class="nx">golang</span><span class="p">.</span><span class="nx">org</span><span class="o">/</span><span class="nx">grpc</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Install Protocol Buffers v3</h3>

<p><a href="https://github.com/protocolbuffers/protobuf/releases">https://github.com/protocolbuffers/protobuf/releases</a></p>

<ul>
<li>根據自己用的 platform，下載編譯好的檔案，並解壓縮</li>
<li>將 <code>bin/protoc</code> binary file 放置在 PATH 底下( ex. <code>$GOPATH/bin</code>)</li>
</ul>


<h3>install the protoc plugin for Go</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">get</span> <span class="o">-</span><span class="nx">u</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">golang</span><span class="o">/</span><span class="nx">protobuf</span><span class="o">/</span><span class="nx">protoc</span><span class="o">-</span><span class="nx">gen</span><span class="o">-</span><span class="k">go</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Try it!</h1>

<blockquote><p>gRPC services are defined in a <code>.proto</code> file, which is used to generate a corresponding <code>.pb.g</code> file.</p>

<p>The <code>.pb.go</code> file is generated by compiling the <code>.proto</code> file using the protocol compiler: protoc.</p></blockquote>

<p>下載 <code>grpc</code> 時會有一個範例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">cd</span> <span class="err">$</span><span class="nx">GOPATH</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span><span class="nx">google</span><span class="p">.</span><span class="nx">golang</span><span class="p">.</span><span class="nx">org</span><span class="o">/</span><span class="nx">grpc</span><span class="o">/</span><span class="nx">examples</span><span class="o">/</span><span class="nx">helloworld</span>
</span></code></pre></td></tr></table></div></figure>


<p>體驗一下，先啟動 sever</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">greeter_server</span><span class="o">/</span><span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span></code></pre></td></tr></table></div></figure>


<p>再跑 client 會發現 response 回來的資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">greeter_client</span><span class="o">/</span><span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Greeting: Hello world</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Example</h1>

<p>建立資料夾</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">.</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">client</span>   <span class="c1">// gRPC 客戶端</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">pb</span>       <span class="c1">// 擺放 Protobuf 文件</span>
</span><span class='line'><span class="err">└──</span> <span class="nx">server</span>   <span class="c1">// gRPC 伺服器</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>client</code>：gRPC client，用來和伺服器溝通的程式</li>
<li><code>pb</code>: 定義的 Protobuf 文件，也會放置轉化後的 Protobuf 程式</li>
<li><code>server</code>: gRPC server</li>
</ul>


<h3>proto</h3>

<p>定義資料格式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 撰寫格式是 Proto v3。</span>
</span><span class='line'><span class="nx">syntax</span> <span class="p">=</span> <span class="s">&quot;proto3&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 生成的程式在 Golang 中將會屬於 `pb` 套件。</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">pb</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Calculator 定義了一個計算用的服務。</span>
</span><span class='line'><span class="nx">service</span> <span class="nx">Calculator</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Plus 會接收 CalcRequest 資料作加總，最終會回傳 CalcReply。</span>
</span><span class='line'>    <span class="nx">rpc</span> <span class="nx">Plus</span> <span class="p">(</span><span class="nx">CalcRequest</span><span class="p">)</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">CalcReply</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// CalcRequest 包含了兩個數字，將會傳送至計算服務並對兩個數字進行計算。</span>
</span><span class='line'><span class="nx">message</span> <span class="nx">CalcRequest</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// 後面的數字是 Protocol Buffers 編碼與解碼所會用到的編號，能夠移除其中一個欄位而不打亂整個資料結構的編碼與解碼(除非更改了數字編號)</span>
</span><span class='line'>    <span class="kt">int32</span> <span class="nx">number_a</span> <span class="p">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int32</span> <span class="nx">number_b</span> <span class="p">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// CalcReply 是計算結果，將會回傳給客戶端。</span>
</span><span class='line'><span class="nx">message</span> <span class="nx">CalcReply</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int32</span> <span class="nx">result</span> <span class="p">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>透過 <code>protoc</code> 產生 <code>.pb.g</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">protoc</span> <span class="o">--</span><span class="nx">go_out</span><span class="p">=</span><span class="nx">plugins</span><span class="p">=</span><span class="nx">grpc</span><span class="p">:.</span> <span class="o">*</span><span class="p">.</span><span class="nx">proto</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Generated client and server code.</li>
<li>Code for populating, serializing, and retrieving our <code>HelloRequest</code> and <code>HelloReply</code> message types.</li>
</ul>


<p>目前資料夾</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">.</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">client</span>
</span><span class='line'><span class="err">│</span>   <span class="err">└──</span> <span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">pb</span>
</span><span class='line'><span class="err">│</span>   <span class="err">├──</span> <span class="nx">calc</span><span class="p">.</span><span class="nx">pb</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'><span class="err">│</span>   <span class="err">└──</span> <span class="nx">calc</span><span class="p">.</span><span class="nx">proto</span>
</span><span class='line'><span class="err">└──</span> <span class="nx">server</span>
</span><span class='line'>    <span class="err">└──</span> <span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span></code></pre></td></tr></table></div></figure>


<h3>server</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// server/main.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;net&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;google.golang.org/grpc&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/mgleon08/demo_proto/pb&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">port</span> <span class="p">=</span> <span class="s">&quot;:50051&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// server 建構體會實作 Calculator 的 gRPC 伺服器。</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">server</span> <span class="kd">struct</span><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Plus 會將傳入的數字加總。</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">s</span> <span class="o">*</span><span class="nx">server</span><span class="p">)</span> <span class="nx">Plus</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">,</span> <span class="nx">in</span> <span class="o">*</span><span class="nx">pb</span><span class="p">.</span><span class="nx">CalcRequest</span><span class="p">)</span> <span class="p">(</span><span class="o">*</span><span class="nx">pb</span><span class="p">.</span><span class="nx">CalcReply</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 計算傳入的數字。</span>
</span><span class='line'>  <span class="nx">result</span> <span class="o">:=</span> <span class="nx">in</span><span class="p">.</span><span class="nx">NumberA</span> <span class="o">+</span> <span class="nx">in</span><span class="p">.</span><span class="nx">NumberB</span>
</span><span class='line'>  <span class="c1">// 包裝成 Protobuf 建構體並回傳。</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">pb</span><span class="p">.</span><span class="nx">CalcReply</span><span class="p">{</span><span class="nx">Result</span><span class="p">:</span> <span class="nx">result</span><span class="p">},</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 監聽指定埠口，這樣服務才能在該埠口執行。</span>
</span><span class='line'>  <span class="nx">lis</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">net</span><span class="p">.</span><span class="nx">Listen</span><span class="p">(</span><span class="s">&quot;tcp&quot;</span><span class="p">,</span> <span class="nx">port</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatalf</span><span class="p">(</span><span class="s">&quot;無法監聽該 port: %v&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 建立新 gRPC 伺服器並註冊 Calculator 服務。</span>
</span><span class='line'>  <span class="nx">s</span> <span class="o">:=</span> <span class="nx">grpc</span><span class="p">.</span><span class="nx">NewServer</span><span class="p">()</span>
</span><span class='line'>  <span class="c1">// RegisterCalculatorServer 是透過 .proto 定義轉換而成</span>
</span><span class='line'>  <span class="nx">pb</span><span class="p">.</span><span class="nx">RegisterCalculatorServer</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">server</span><span class="p">{})</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 開始在指定埠口中服務。</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">s</span><span class="p">.</span><span class="nx">Serve</span><span class="p">(</span><span class="nx">lis</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatalf</span><span class="p">(</span><span class="s">&quot;無法提供服務: %v&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>client</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// client/main.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;google.golang.org/grpc&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/mgleon08/demo_proto/pb&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">address</span> <span class="p">=</span> <span class="s">&quot;localhost:50051&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 建立連線到遠端 gRPC 伺服器。</span>
</span><span class='line'>  <span class="nx">conn</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">grpc</span><span class="p">.</span><span class="nx">Dial</span><span class="p">(</span><span class="nx">address</span><span class="p">,</span> <span class="nx">grpc</span><span class="p">.</span><span class="nx">WithInsecure</span><span class="p">())</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatalf</span><span class="p">(</span><span class="s">&quot;無法連線: %v&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// 結束後要關閉</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">conn</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 建立新的 Calculator 客戶端，所以等一下就能夠使用 Calculator 的所有方法。</span>
</span><span class='line'>  <span class="nx">c</span> <span class="o">:=</span> <span class="nx">pb</span><span class="p">.</span><span class="nx">NewCalculatorClient</span><span class="p">(</span><span class="nx">conn</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 傳送新請求到遠端 gRPC 伺服器 Calculator 中，並呼叫 Plus 函式，讓兩個數字相加。</span>
</span><span class='line'>  <span class="nx">r</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">c</span><span class="p">.</span><span class="nx">Plus</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">(),</span> <span class="o">&amp;</span><span class="nx">pb</span><span class="p">.</span><span class="nx">CalcRequest</span><span class="p">{</span><span class="nx">NumberA</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span> <span class="nx">NumberB</span><span class="p">:</span> <span class="mi">32</span><span class="p">})</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatalf</span><span class="p">(</span><span class="s">&quot;無法執行 plus: %v&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;回傳結果: %d&quot;</span><span class="p">,</span> <span class="nx">r</span><span class="p">.</span><span class="nx">Result</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>啟動</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 先啟動 server</span>
</span><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="p">.</span><span class="o">/</span><span class="nx">server</span><span class="o">/</span><span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 再啟動 client，就會有 response</span>
</span><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="p">.</span><span class="o">/</span><span class="nx">client</span><span class="o">/</span><span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span></code></pre></td></tr></table></div></figure>


<h3>demo</h3>

<p><a href="https://github.com/mgleon08/go-grpc-demo">go-grpc-demo</a></p>

<p>Reference:</p>

<ul>
<li><a href="https://grpc.io/">gprc</a></li>
<li><a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a></li>
<li><a href="https://codinganimal.info/grpc-tutorial-for-python-2fa0fe2ff853">gRPC Tutorial for Python</a></li>
<li><a href="https://yami.io/grpc/">API 文件就是你的伺服器，REST 的另一個選擇：gRPC</a></li>
<li><a href="https://yami.io/protobuf/">比起 JSON 更方便、更快速、更簡短的 Protobuf 格式</a></li>
<li><a href="https://www.youtube.com/watch?v=NoDRq6Twkts">Getting Started with Protocol Buffers in Go - Tutorial</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scrum 簡單介紹]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/07/scrum/"/>
    <updated>2019-03-07T21:51:10+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/07/scrum</id>
    <content type="html"><![CDATA[<p>最近想在團隊中試著導入 scrum，因此先來瞭解一下 scrum 的概念</p>

<!-- more -->


<h1>Waterfall vs Agile</h1>

<p><img src="https://projectresources.cdt.ca.gov/wp-content/uploads/sites/50/2017/08/traditional-waterfall-versus-agile.png" alt="" /></p>

<h1>Iron Triangle</h1>

<p><img src="https://wac-cdn.atlassian.com/dam/jcr:6bd4fa76-577f-40c4-a12d-784860d0dc42/waterfall-v-agile-iron-triangle-v03.png?cdnVersion=ks" alt="The iron triangle of planning " /></p>

<ul>
<li>Scope is the work to be done – such as features and functionalities – to deliver a working product.</li>
<li>Resources include budget and team members working to deliver and execute.</li>
<li>Time is when teams will deliver to the market such as releases and milestones.</li>
</ul>


<p><a href="https://www.atlassian.com/agile/agile-at-scale/agile-iron-triangle">The iron triangle of planning</a></p>

<h1>Scrum</h1>

<p><img src="https://res.infoq.com/news/2013/03/anime-scrum-primer/en/resources/anime_scrum_overview_small.png" alt="" /></p>

<h2><a href="https://agilemanifesto.org/iso/en/manifesto.html">Manifesto for Agile Software Development 敏捷宣言</a></h2>

<ul>
<li><code>個人與互動</code> 重於 <code>流程與工具</code></li>
<li><code>可用的軟體</code> 重於 <code>詳盡的文件</code></li>
<li><code>與客戶合作</code> 重於 <code>合約協商</code> </li>
<li><code>回應變化</code> 重於 <code>遵循計畫</code></li>
</ul>


<h2>Scrum Role</h2>

<ol>
<li>Product Owner(PO，產品負責人)

<ul>
<li>為產品的成敗負責</li>
<li>負責管理產品需求並決定需求的施工順序</li>
<li>負責回答問題與釐清需求</li>
</ul>
</li>
<li>Scrum Master(SM，無中文名稱)

<ul>
<li>監督流程</li>
<li>協助團隊持續改善開發流程</li>
<li>排除任何阻礙開發活動的事件</li>
</ul>
</li>
<li>Development Team(Dev Team，開發團隊)

<ul>
<li>負責開發軟體</li>
<li>決定細節，執行任務</li>
</ul>
</li>
<li>stakeholder (利益相關者)

<ul>
<li>和軟體開發專案有關，但是卻沒有實際參與專案開發活動的人</li>
</ul>
</li>
</ol>


<h2>Scrum Object</h2>

<ol>
<li>Item(物件) or Story(故事)：

<ul>
<li>由 PO 來定義產出，Story 的 Scope 必須是可以讓團隊在一般的速率下完成 3 - 5 個為佳，太多會太雜，太少會讓團隊感覺到這次的 Sprint 產出沒感覺，對團隊信心是個打擊</li>
</ul>
</li>
<li>Task(工作)：

<ul>
<li>由 Dev Team 列出 Story 所需完成的工作項目，並由 Dev Team 自行分配</li>
</ul>
</li>
<li>Product Backlog(產品待辦清單)：

<ul>
<li>由 PO 負責整理的產品願景圖，以 Story 為單位，開始順序由上而下</li>
<li>As a user, I can do something so that I can achieve xxx</li>
<li><a href="https://www.crisp.se/wp-content/uploads/2012/06/ProductBacklog.xls">ProductBacklog.xls</a></li>
</ul>
</li>
<li>Sprint Backlog(衝刺待辦清單)：

<ul>
<li>Dev Team 向 PO 承諾這個 Sprint 會盡力完成的 Story List，以 Task 為單位</li>
</ul>
</li>
<li>Potentially Shippable Product Increment(潛在可交付產品增量)：

<ul>
<li>Dev Team 的產出，就是這個 Spring 所完成的項目，並且客戶需要就可以立即上線的</li>
</ul>
</li>
<li>Burndown Chart(燃盡圖)：

<ul>
<li>剩餘的 Sprint Backlog，看看還剩多少才能清空，以 Task 大小為單位</li>
<li>把所有 stories 的 tasks 施工的小時數加總起來，每次 daily Scrum 報告已經完成哪些 tasks，並將總時數減掉完成時數，畫成一個表，團隊就可以知道進度是否正常</li>
<li><a href="http://www.uml.org.cn/SoftWareProcess/images/2011061511.png">Burndown Chart</a></li>
</ul>
</li>
</ol>


<h2>Scrum Ｍeeting</h2>

<blockquote><p>Scrum 活動每一個都是有它的目的和時間限制(Time Boxed)
Spring n 個禮拜，所有活動抓 n 小時</p></blockquote>

<ol>
<li>Sprint(衝刺)：

<ul>
<li>團隊決定哪些 Item 後，就開始去衝刺</li>
<li>長度定義上是 1 - 4 個禮拜，但實務上不要多過2個禮拜</li>
<li>長度應該要保持穩定，盡可能不變，這樣才容易讓團隊掌握節奏，也容易預估和比較 Sprint 內的工作量</li>
<li>大原則是 Sprint 內的 Sprint Backlog 不改變(有原則就有例外)</li>
</ul>
</li>
<li>Daily Scrum(每日站立會議)：

<ul>
<li>每天 10 - 15 分鐘不能超時</li>
<li>目的是讓團隊資訊同步</li>
<li>一定要站著為了讓大家長話短說</li>
<li>主要報告三件事

<ul>
<li>昨天做什麼以協助團隊達成sprint目標</li>
<li>今天準備做什麼以協助團隊達成sprint目標</li>
<li>有沒有遇到任何阻礙團隊達成sprint目標的事情</li>
</ul>
</li>
</ul>
</li>
<li>Sprint Planning Meeting(衝刺規劃會議)：

<ul>
<li>討論這次 sprint 所要開發的需求（stories）</li>
<li>將 story 細分為若干個 task，並估算每個 task 所需的時間（以小時計算</li>
<li>Story 優先順序 PO 決定</li>
<li>選多少 Item 由 Dev Team 決定</li>
<li>會議後會產生 Spring Backlog，上面完整寫出這次 Spring 所需要的所有資訊</li>
</ul>
</li>
<li>Product Backlog Refinement / PBR(產品待辦清單精煉會議)：

<ul>
<li>PO 跟 Dev Team 一起討論近期內會開始的 Story</li>
<li>從商業和使用者角度切入，儘可能不觸及技術細節</li>
</ul>
</li>
<li>Sprint Review(衝刺檢視會議)：

<ul>
<li>Sprint 結束時針對這次 Sprint 產出的會議</li>
<li>PO 邀請利害關係人對產出給予意見，必須是可用的功能才算產出</li>
<li>不需準備 Powerpoint 或其他簡報，單純就軟體操作取得回饋</li>
</ul>
</li>
<li>Sprint Retrospective / Sprint Retro (衝刺回顧會議，也有人稱『自省』會議)：

<ul>
<li>Scrum Team 成員(Dev Team 或包含 PO)</li>
<li>Sprint Review 後，針對這個 Sprint 團隊的工作模式討論改善，並定出下個 Sprint 改善事項</li>
<li>原則上只有團隊成員才能參加，避免主管級參與，而變成檢討會議</li>
</ul>
</li>
</ol>


<blockquote><p>後面為非正規 Scrum - <a href="http://teddy-chen-tw.blogspot.com/2012/01/scrum-3.html">Scrum 是什麼（3）：三種補充文件</a></p></blockquote>

<ol>
<li>Sprint Info Page (One Page, Kick off)

<ul>
<li>sprint planning meeting 開完之後，SM 會寫一份 sprint info page 文件，這份文件包含了 sprint goal(一句簡短的句子，用以表明該 sprint 所要完成的主要功能)，stories，sprint，startTime，endTime，以及團隊成員。</li>
<li>SM 將這份文件寄給 Scrum Team 與其他有興趣的輔助角色人員，讓他們知道一個新的 sprint 已經開始了。</li>
</ul>
</li>
<li>Sprint Demo Agenda

<ul>
<li>Sprint 結束前一天，SM 要寫出 sprint demo 的議程表，並將此文件寄給 Scrum Team 與其他有興趣的輔助角色人員。</li>
<li>議程表包含所有要 demo 的項目，以及每一個 demo 項目要花多少時間，由誰負責 demo。</li>
<li>當 Developer 收到該議程表時，就可以準備明天要 demo 的資料。</li>
</ul>
</li>
<li>Sprint Summary Report (會議記錄)

<ul>
<li>當開完 sprint retrospective meeting 之後，SM 會準備此文件</li>
<li>內容包含

<ul>
<li>sprint 所完成功能的簡述</li>
<li>完成多少個 story points</li>
<li>好的以及有待改善的項目（最多只各列三點）</li>
<li>改善行動計畫</li>
</ul>
</li>
<li>將此文件寄給Scrum Team 以及其他有興趣的輔助角色人員，讓他們知道這個 sprint 已經正式結束了。</li>
</ul>
</li>
</ol>


<h2>Technical</h2>

<ul>
<li>單元測試(Unit Test)</li>
<li>系統測試(System Test)</li>
<li>CI 持續整合(Continuous Integration)</li>
<li>CD 持續交付(Continuous Delivery)</li>
</ul>


<h2>Benefit</h2>

<ul>
<li>快速驗證使用者反應</li>
<li>學習目標導向解決問題</li>
<li>學習團隊協作</li>
<li>快速失敗，快速學習</li>
<li>快速且頻繁的同步資訊</li>
<li>自組織團隊(Self Organizing Team)</li>
<li>自省會議(Retrospective)</li>
<li>引導(Facilitation)</li>
</ul>


<p>參考文件</p>

<ul>
<li><a href="https://funevo.com/2015/06/27/scrum-agile-project-management-software-development/">Scrum 懶人包 – 10分鐘讀懂 Scrum Agile 敏捷軟體開發專案入門（含中文英文名詞對照）</a></li>
<li><a href="https://medium.com/doflowy/%E4%BB%80%E9%BA%BC%E6%98%AFscrum-%E4%B8%8D%E6%98%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E4%B9%9F%E8%83%BD%E6%87%82%E7%9A%84scrum%E5%85%A5%E9%96%80%E6%95%99%E5%AD%B8-1cc6683575f8">什麼是Scrum？不是工程師也能懂的Scrum入門介紹！</a></li>
<li><a href="https://funevo.com/2015/06/01/scrum-agile-shu-dan-book-list-training/">Scrum與Agile敏捷開發書單和學習資源</a></li>
<li><a href="http://teddy-chen-tw.blogspot.com/2011/12/scrum-1.html">Scrum 是什麼</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - JSON and Go]]></title>
    <link href="https://mgleon08.github.io/blog/2019/02/17/golang-json-and-go/"/>
    <updated>2019-02-17T22:40:16+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/02/17/golang-json-and-go</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>Encoding - Marshal 序列化</h1>

<p>在 Go 中並不是所有的類型都能進行序列化：</p>

<ul>
<li>必須是 struct 中支援外部引用的 field 才能夠序列化 (即開頭字母大寫的 field)</li>
<li>JSON object key 只支援 string</li>
<li>Channel、complex、function 等 type 無法進行序列化</li>
<li>不支援循環數據結構，因為序列化時會進行無限迴圈</li>
<li><code>Pointer</code> 序列化之後是其指向的值或者是 <code>nil</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">func</span> <span class="nx">Marshal</span><span class="p">(</span><span class="nx">v</span> <span class="kd">interface</span><span class="p">{})</span> <span class="p">([]</span><span class="kt">byte</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">UserInfo</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Say</span>  <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Age</span> <span class="kt">int64</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">m</span> <span class="o">:=</span> <span class="nx">UserInfo</span><span class="p">{</span><span class="s">&quot;Leon&quot;</span><span class="p">,</span> <span class="s">&quot;Hello&quot;</span><span class="p">,</span> <span class="mi">18</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">b</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Marshal</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// {&quot;Name&quot;:&quot;Leon&quot;,&quot;Say&quot;:&quot;Hello&quot;,&quot;Age&quot;:18}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>指定 JSON filed name</h1>

<h3>Struct Tag</h3>

<p><code>Struct tag</code> 可以決定 <code>Marshal</code> 和 <code>Unmarshal</code> 函式如何序列化和反序列化數據。</p>

<ul>
<li>一般 <code>json</code> 都是小寫，但因為 golang 序列化時，struct 必須是大寫，因此透過 <code>Struct Tag</code> 改成小寫</li>
<li>mongodb 則是使用 <code>bson</code>，可以在 struct 加上 <code>json:"name,omitempty" bson:"name,omitempty"</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">UserInfo</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span> <span class="s">`json:&quot;name&quot;`</span>
</span><span class='line'>  <span class="nx">Say</span>  <span class="kt">string</span> <span class="s">`json:&quot;say&quot;`</span>
</span><span class='line'>  <span class="nx">Age</span> <span class="kt">int64</span>   <span class="s">`json:&quot;age&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">m</span> <span class="o">:=</span> <span class="nx">UserInfo</span><span class="p">{</span><span class="s">&quot;Leon&quot;</span><span class="p">,</span> <span class="s">&quot;Hello&quot;</span><span class="p">,</span> <span class="mi">18</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">b</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Marshal</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// {&quot;name&quot;:&quot;Leon&quot;,&quot;say&quot;:&quot;Hello&quot;,&quot;age&quot;:18}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>指定 field 的行為</h1>

<h3>omitempty</h3>

<p>透過 <code>omitempty</code> 如果 field 的值是對應類型的 <code>zero-value</code>，序列化之後的 <code>JSON object</code> 中不包含此 <code>field</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">UserInfo</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span> <span class="s">`json:&quot;name&quot;`</span>
</span><span class='line'>  <span class="nx">Say</span>  <span class="kt">string</span> <span class="s">`json:&quot;say&quot;`</span>
</span><span class='line'>  <span class="nx">Age</span> <span class="kt">int64</span>   <span class="s">`json:&quot;age,omitempty&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">m</span> <span class="o">:=</span> <span class="nx">UserInfo</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">b</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Marshal</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// {&quot;name&quot;:&quot;&quot;,&quot;say&quot;:&quot;&quot;}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>-</h3>

<p>透過 <code>-</code> 可以忽略掉該 field</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">UserInfo</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span> <span class="s">`json:&quot;name&quot;`</span>
</span><span class='line'>  <span class="nx">Say</span>  <span class="kt">string</span> <span class="s">`json:&quot;-&quot;`</span>
</span><span class='line'>  <span class="nx">Age</span> <span class="kt">int64</span>   <span class="s">`json:&quot;age,omitempty&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">m</span> <span class="o">:=</span> <span class="nx">UserInfo</span><span class="p">{</span><span class="s">&quot;Leon&quot;</span><span class="p">,</span> <span class="s">&quot;Hello&quot;</span><span class="p">,</span> <span class="mi">18</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">b</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Marshal</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// {&quot;name&quot;:&quot;Leon&quot;,&quot;age&quot;:18}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Decoding - Unmarshal 反序列化</h1>

<p>預設的 JSON 支援以下幾種 Go 類型：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kt">bool</span> <span class="k">for</span> <span class="nx">JSON</span> <span class="nx">booleans</span>
</span><span class='line'><span class="kt">float64</span> <span class="k">for</span> <span class="nx">JSON</span> <span class="nx">numbers</span>
</span><span class='line'><span class="kt">string</span> <span class="k">for</span> <span class="nx">JSON</span> <span class="nx">strings</span>
</span><span class='line'><span class="kc">nil</span> <span class="k">for</span> <span class="nx">JSON</span> <span class="nx">null</span>
</span></code></pre></td></tr></table></div></figure>


<h3>知道類型的反序列化</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">UserInfo</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span> <span class="s">`json:&quot;name&quot;`</span>
</span><span class='line'>  <span class="nx">Say</span> <span class="kt">string</span>  <span class="s">`json:&quot;say&quot;`</span>
</span><span class='line'>  <span class="nx">Age</span> <span class="kt">int64</span>   <span class="s">`json:&quot;age&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">jsonString</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">jsonString</span> <span class="p">=</span> <span class="s">`{&quot;name&quot;:&quot;Leon&quot;,&quot;say&quot;:&quot;hello&quot;,&quot;age&quot;:18}`</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//把 json unmarshal 進去 struct</span>
</span><span class='line'>  <span class="nx">u</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">UserInfo</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">err</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Unmarshal</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">jsonString</span><span class="p">),</span> <span class="nx">u</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%T\n&quot;</span><span class="p">,</span> <span class="nx">u</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;name:%s, say:%s, age:%d\n&quot;</span><span class="p">,</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Name</span><span class="p">,</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Say</span><span class="p">,</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Age</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// &amp;{Leon hello 18}</span>
</span><span class='line'><span class="c1">// *main.UserInfo</span>
</span><span class='line'><span class="c1">// name:Leon, say:hello, age:18</span>
</span></code></pre></td></tr></table></div></figure>


<h3>不知道類型的反序列化</h3>

<p>如果不知道類型可以用 <code>interface{}</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">jsonString</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">jsonString</span> <span class="p">=</span> <span class="s">`{&quot;name&quot;:&quot;Leon&quot;,&quot;age&quot;:18,&quot;cars&quot;:[&quot;Maserati&quot;,&quot;BMW&quot;]}`</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//把 json unmarshal 進去 struct</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">u</span> <span class="kd">interface</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">err</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Unmarshal</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">jsonString</span><span class="p">),</span> <span class="o">&amp;</span><span class="nx">u</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%T\n&quot;</span><span class="p">,</span> <span class="nx">u</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// map[cars:[Maserati BMW] name:Leon age:18]</span>
</span><span class='line'><span class="c1">// map[string]interface {}</span>
</span></code></pre></td></tr></table></div></figure>


<p>回傳的格式如</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kd">interface</span><span class="p">{}{</span>
</span><span class='line'>    <span class="s">&quot;Name&quot;</span><span class="p">:</span> <span class="s">&quot;Leon&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span>  <span class="mi">18</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;cars&quot;</span><span class="p">:</span> <span class="p">[]</span><span class="kd">interface</span><span class="p">{}{</span>
</span><span class='line'>        <span class="s">&quot;Maserati&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;BMW&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>key 是 <code>string</code>，value 是 <code>interface{}</code>，必須透過 <code>type assertion</code> 和 <code>range</code> 取得所有的 key</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">showInfo</span><span class="p">(</span><span class="nx">u</span> <span class="kd">interface</span><span class="p">{}){</span>
</span><span class='line'>  <span class="nx">m</span> <span class="o">:=</span> <span class="nx">u</span><span class="p">.(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kd">interface</span><span class="p">{})</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">k</span><span class="p">,</span> <span class="nx">v</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">m</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">switch</span> <span class="nx">vv</span> <span class="o">:=</span> <span class="nx">v</span><span class="p">.(</span><span class="kd">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="kt">string</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span> <span class="s">&quot;is string&quot;</span><span class="p">,</span> <span class="nx">vv</span><span class="p">)</span>
</span><span class='line'>      <span class="k">case</span> <span class="kt">float64</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span> <span class="s">&quot;is float64&quot;</span><span class="p">,</span> <span class="nx">vv</span><span class="p">)</span>
</span><span class='line'>      <span class="k">case</span> <span class="p">[]</span><span class="kd">interface</span><span class="p">{}:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span> <span class="s">&quot;is an array:&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">u</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">vv</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">u</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span> <span class="s">&quot;is of a type I don&#39;t know how to handle&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">jsonString</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">jsonString</span> <span class="p">=</span> <span class="s">`{&quot;name&quot;:&quot;Leon&quot;,&quot;age&quot;:18,&quot;cars&quot;:[&quot;Maserati&quot;,&quot;BMW&quot;]}`</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//把 json unmarshal 進去 struct</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">u</span> <span class="kd">interface</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">err</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Unmarshal</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">jsonString</span><span class="p">),</span> <span class="o">&amp;</span><span class="nx">u</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">showInfo</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// name is string Leon</span>
</span><span class='line'><span class="c1">// age is float64 18</span>
</span><span class='line'><span class="c1">// cars is an array:</span>
</span><span class='line'><span class="c1">// 0 Maserati</span>
</span><span class='line'><span class="c1">// 1 BMW</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Reference Types - 反序列化對 slice、map、pointer 的處理</h1>

<p>struct 中包含一個 <code>slice Cars</code> ，slice 預設是 <code>nil</code>，之所以反序列化可以正常進行就是因為 Unmarshal 在序列化時進行了對 <code>slice Cars</code> 做了初始化，同理，對 <code>map</code> 和 <code>pointer</code> 都會做類似的工作</p>

<blockquote><p>比如序列化如果 Pointer 不是 nil 首先進行 dereference 獲得其指向的值，然後再進行序列化，反序列化時首先對 nil pointer 進行初始化</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">UserInfo</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">Name</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">Age</span>  <span class="kt">int64</span>
</span><span class='line'>    <span class="nx">Cars</span> <span class="p">[]</span><span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">jsonString</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">jsonString</span> <span class="p">=</span> <span class="s">`{&quot;name&quot;:&quot;Leon&quot;,&quot;age&quot;:18,&quot;cars&quot;:[&quot;Maserati&quot;,&quot;BMW&quot;]}`</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//把 json unmarshal 進去 struct</span>
</span><span class='line'>    <span class="nx">u</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">UserInfo</span><span class="p">{}</span>
</span><span class='line'>    <span class="nx">err</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Unmarshal</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">jsonString</span><span class="p">),</span> <span class="nx">u</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%T\n&quot;</span><span class="p">,</span> <span class="nx">u</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;name:%s, age:%d, cars:%s\n&quot;</span><span class="p">,</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Name</span><span class="p">,</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Age</span><span class="p">,</span> <span class="nx">u</span><span class="p">.</span><span class="nx">Cars</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// &amp;{Leon 18 [Maserati BMW]}</span>
</span><span class='line'><span class="c1">// *main.UserInfo</span>
</span><span class='line'><span class="c1">// name:Leon, age:18, cars:[Maserati BMW]</span>
</span></code></pre></td></tr></table></div></figure>


<h1>nested struct 的序列化</h1>

<p>Go 支援對 <code>nested struct</code> 進行序列化和反序列化:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">App</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Id</span> <span class="kt">string</span> <span class="s">`json:&quot;id&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Org</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span> <span class="s">`json:&quot;name&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">AppWithOrg</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">App</span>
</span><span class='line'>  <span class="nx">Org</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">data</span> <span class="o">:=</span> <span class="p">[]</span><span class="nb">byte</span><span class="p">(</span><span class="s">`{ &quot;id&quot;: &quot;123&quot;, &quot;name&quot;: &quot;My Awesome Org&quot; }`</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">b</span> <span class="nx">AppWithOrg</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">Unmarshal</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%#v\n\n&quot;</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nx">a</span> <span class="o">:=</span> <span class="nx">AppWithOrg</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">App</span><span class="p">:</span> <span class="nx">App</span><span class="p">{</span> <span class="nx">Id</span><span class="p">:</span> <span class="s">&quot;321&quot;</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">Org</span><span class="p">:</span> <span class="nx">Org</span><span class="p">{</span> <span class="nx">Name</span><span class="p">:</span> <span class="s">&quot;My Awesome Org&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">data</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Marshal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">data</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// main.AppWithOrg{App:main.App{Id:&quot;123&quot;}, Org:main.Org{Name:&quot;My Awesome Org&quot;}}</span>
</span><span class='line'><span class="c1">// {&quot;id&quot;:&quot;321&quot;,&quot;name&quot;:&quot;My Awesome Org&quot;}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Stream JSON</h1>

<p>Golang 提供 <code>Decoder</code> 和 <code>Encoder</code> 對 stream JSON 進行處理，常見 request 中的 Body、文件等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;io&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;strings&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">const</span> <span class="nx">jsonStream</span> <span class="p">=</span> <span class="s">`</span>
</span><span class='line'><span class="s">  {&quot;Name&quot;: &quot;Ed&quot;, &quot;Text&quot;: &quot;Knock knock.&quot;}</span>
</span><span class='line'><span class="s">  {&quot;Name&quot;: &quot;Sam&quot;, &quot;Text&quot;: &quot;Who&#39;s there?&quot;}</span>
</span><span class='line'><span class="s">  {&quot;Name&quot;: &quot;Ed&quot;, &quot;Text&quot;: &quot;Go fmt.&quot;}</span>
</span><span class='line'><span class="s">  {&quot;Name&quot;: &quot;Sam&quot;, &quot;Text&quot;: &quot;Go fmt who?&quot;}</span>
</span><span class='line'><span class="s">  {&quot;Name&quot;: &quot;Ed&quot;, &quot;Text&quot;: &quot;Go fmt yourself!&quot;}</span>
</span><span class='line'><span class="s">`</span>
</span><span class='line'>  <span class="kd">type</span> <span class="nx">Message</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">Name</span><span class="p">,</span> <span class="nx">Text</span> <span class="kt">string</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">dec</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">NewDecoder</span><span class="p">(</span><span class="nx">strings</span><span class="p">.</span><span class="nx">NewReader</span><span class="p">(</span><span class="nx">jsonStream</span><span class="p">))</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">m</span> <span class="nx">Message</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">dec</span><span class="p">.</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">m</span><span class="p">);</span> <span class="nx">err</span> <span class="o">==</span> <span class="nx">io</span><span class="p">.</span><span class="nx">EOF</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s: %s\n&quot;</span><span class="p">,</span> <span class="nx">m</span><span class="p">.</span><span class="nx">Name</span><span class="p">,</span> <span class="nx">m</span><span class="p">.</span><span class="nx">Text</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Ed: Knock knock.</span>
</span><span class='line'><span class="c1">// Sam: Who&#39;s there?</span>
</span><span class='line'><span class="c1">// Ed: Go fmt.</span>
</span><span class='line'><span class="c1">// Sam: Go fmt who?</span>
</span><span class='line'><span class="c1">// Ed: Go fmt yourself!</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://golang.org/pkg/encoding/json/#Marshal">json</a></li>
<li><a href="https://sanyuesha.com/2018/05/07/go-json/">理解 Go 中的 JSON</a></li>
<li><a href="https://blog.golang.org/json-and-go">JSON and Go</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - (&.) the Safe Navigation Operator Like Rails Try!]]></title>
    <link href="https://mgleon08.github.io/blog/2019/02/15/ruby-the-safe-navigation-operator/"/>
    <updated>2019-02-15T20:46:20+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/02/15/ruby-the-safe-navigation-operator</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>ruby 2.3.0</code> 之後有提供一個方法 <code>&amp;.</code> 跟 rails 的 try! 一樣（是有 <code>!</code> 驚嘆號的）</p>

<p><code>try!</code> 跟 <code>try</code> 比起來比較嚴謹，會去 check receiver 是否為 <code>nil</code>，如果都用只用 <code>try</code>，反而會導致都回傳 <code>nil</code> 而發生錯誤時也不知道在哪</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">try</span><span class="p">(</span><span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">empty?</span> <span class="o">&amp;&amp;</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="k">yield</span> <span class="nb">self</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">__send__</span><span class="p">(</span><span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">try!</span><span class="p">(</span><span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">empty?</span> <span class="o">&amp;&amp;</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="k">yield</span> <span class="nb">self</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">public_send</span><span class="p">(</span><span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>nil</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Account</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:owner</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">owner</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@owner</span> <span class="o">=</span> <span class="n">owner</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">Account</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">owner</span><span class="o">.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># NoMethodError (undefined method `address&#39; for nil:NilClass)</span>
</span><span class='line'><span class="n">user</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">owner</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">owner</span><span class="o">.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:owner</span><span class="p">)</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:address</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">try!</span><span class="p">(</span><span class="ss">:owner</span><span class="p">)</span><span class="o">.</span><span class="n">try!</span><span class="p">(</span><span class="ss">:address</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="n">user</span><span class="o">&amp;.</span><span class="n">owner</span><span class="o">&amp;.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<h1>false</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Account</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:owner</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">owner</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@owner</span> <span class="o">=</span> <span class="n">owner</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">Account</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">owner</span><span class="o">.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># NoMethodError (undefined method `address&#39; for false:FalseClass)</span>
</span><span class='line'><span class="n">user</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">owner</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">owner</span><span class="o">.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># =&gt; false</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:owner</span><span class="p">)</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:address</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">try!</span><span class="p">(</span><span class="ss">:owner</span><span class="p">)</span><span class="o">.</span><span class="n">try!</span><span class="p">(</span><span class="ss">:address</span><span class="p">)</span>
</span><span class='line'><span class="c1"># NoMethodError (undefined method `address&#39; for false:FalseClass)</span>
</span><span class='line'><span class="n">user</span><span class="o">&amp;.</span><span class="n">owner</span><span class="o">&amp;.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># NoMethodError (undefined method `address&#39; for false:FalseClass)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Object.new</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Account</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:owner</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">owner</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@owner</span> <span class="o">=</span> <span class="n">owner</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">Account</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Object</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">owner</span><span class="o">.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># NoMethodError (undefined method `address&#39; for #&lt;Object:0x00007fcb887785e8&gt;)</span>
</span><span class='line'><span class="n">user</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">owner</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">owner</span><span class="o">.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># NoMethodError (undefined method `address&#39; for #&lt;Object:0x00007fcb887785e8&gt;)</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:owner</span><span class="p">)</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:address</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">try!</span><span class="p">(</span><span class="ss">:owner</span><span class="p">)</span><span class="o">.</span><span class="n">try!</span><span class="p">(</span><span class="ss">:address</span><span class="p">)</span>
</span><span class='line'><span class="c1"># NoMethodError (undefined method `address&#39; for #&lt;Object:0x00007fcb887785e8&gt;)</span>
</span><span class='line'><span class="n">user</span><span class="o">&amp;.</span><span class="n">owner</span><span class="o">&amp;.</span><span class="n">address</span>
</span><span class='line'><span class="c1"># NoMethodError (undefined method `address&#39; for #&lt;Object:0x00007fcb887785e8&gt;)</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件:</p>

<ul>
<li><a href="http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/">The Safe Navigation Operator (&amp;.) in Ruby</a></li>
<li><a href="https://apidock.com/rails/v3.2.1/Object/try">try</a></li>
<li><a href="https://apidock.com/rails/v4.0.2/Object/try%21">try!</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - New Features in Ruby 2.6]]></title>
    <link href="https://mgleon08.github.io/blog/2019/02/12/new-features-in-ruby-2-6/"/>
    <updated>2019-02-12T21:13:17+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/02/12/new-features-in-ruby-2-6</id>
    <content type="html"><![CDATA[<p>ruby 2.6 多了一些有趣的新特性和功能，來了解一下</p>

<!-- more -->


<h1>Endless ranges</h1>

<p>利用 <code>..</code> 代表無窮的範圍</p>

<blockquote><p>早期的寫法 <code>100..Float::INFINITY</code></p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="mi">123</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="n">n</span>
</span><span class='line'><span class="k">when</span> <span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span> <span class="k">then</span> <span class="s1">&#39;Single digit&#39;</span>
</span><span class='line'><span class="k">when</span> <span class="mi">10</span><span class="o">.</span><span class="n">.</span><span class="mi">99</span> <span class="k">then</span> <span class="s1">&#39;Two digit&#39;</span>
</span><span class='line'><span class="k">when</span> <span class="mi">100</span><span class="o">.</span><span class="n">.</span> <span class="k">then</span> <span class="s1">&#39;Three or more&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; &quot;Three or more&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>但也要小心，會一直跑下去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">index</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">index</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Kernel#then (Kernel#yield_self alias)</h1>

<p>新增一個 <code>yield_self</code> 新的 alias <code>then</code></p>

<p>主要跟 <code>tap</code> 相反，<code>tap</code> 最後是返回原本的 <code>object</code>，<code>then</code> 則是返回 <code>block</code></p>

<p>大概是下面這樣的差別</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Object</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">tap</span>
</span><span class='line'>    <span class="k">yield</span> <span class="nb">self</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">def</span> <span class="nf">yield_self</span>
</span><span class='line'>    <span class="k">yield</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>範例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">3</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">then</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">**</span><span class="n">x</span> <span class="p">}</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="c1">#=&gt; &quot;256&quot;</span>
</span><span class='line'><span class="s2">&quot;my string&quot;</span><span class="o">.</span><span class="n">yield_self</span> <span class="p">{</span><span class="o">|</span><span class="n">s</span><span class="o">|</span> <span class="n">s</span><span class="o">.</span><span class="n">upcase</span> <span class="p">}</span>
</span><span class='line'><span class="c1">#=&gt; &quot;MY STRING&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cisbn</span> <span class="o">=</span> <span class="s1">&#39;978-1-93778-549-9&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">isbn</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">then</span> <span class="p">{</span> <span class="o">|</span><span class="n">isbn</span><span class="o">|</span> <span class="no">URI</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">API_URL</span><span class="si">}</span><span class="s2">?q=isbn:</span><span class="si">#{</span><span class="n">isbn</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="o">.</span><span class="n">then</span> <span class="p">{</span> <span class="o">|</span><span class="n">uri</span><span class="o">|</span> <span class="ss">Net</span><span class="p">:</span><span class="no">HTTP</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="o">.</span><span class="n">then</span> <span class="p">{</span> <span class="o">|</span><span class="n">json_response</span><span class="o">|</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">json_response</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="o">.</span><span class="n">then</span> <span class="p">{</span> <span class="o">|</span><span class="n">response</span><span class="o">|</span> <span class="n">response</span><span class="o">.</span><span class="n">dig</span><span class="p">(</span><span class="s1">&#39;items&#39;</span><span class="p">,</span> <span class="s1">&#39;volumeInfo&#39;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://ruby-doc.org/core-2.6.1/Object.html#method-i-yield_self">yield_self</a></li>
</ul>


<h1>Enumerable#chain and Enumerator#+</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">chain</span><span class="p">((</span><span class="mi">5</span><span class="o">.</span><span class="n">.</span><span class="mi">7</span><span class="p">),</span> <span class="o">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="c1"># =&gt; [1, 2, 3, 5, 6, 7, 9, 10]</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="o">+</span> <span class="p">(</span><span class="mi">5</span><span class="o">.</span><span class="n">.</span><span class="mi">7</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="c1"># =&gt; [1, 2, 3, 5, 6, 7, 9, 10]</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Composition operators &lt;&lt; and >> to Proc and Method</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">f</span> <span class="o">=</span> <span class="nb">proc</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">}</span>
</span><span class='line'><span class="n">g</span> <span class="o">=</span> <span class="nb">proc</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">3</span><span class="p">}</span>
</span><span class='line'><span class="p">(</span><span class="n">f</span> <span class="o">&lt;&lt;</span> <span class="n">g</span><span class="p">)</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="c1"># -&gt; 11; identical to f(g(3))</span>
</span><span class='line'><span class="p">(</span><span class="n">f</span> <span class="o">&gt;&gt;</span> <span class="n">g</span><span class="p">)</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="c1"># -&gt; 15; identical to g(f(3))</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Array#union and Array#difference</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">union</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="c1"># =&gt; [1, 2, 3, 4]</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">difference</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="c1"># =&gt; [1]</span>
</span><span class='line'><span class="n">a</span> <span class="o">|</span> <span class="n">b</span> <span class="c1"># =&gt; [1, 2, 3, 4]</span>
</span><span class='line'><span class="n">a</span> <span class="o">&amp;</span> <span class="n">b</span> <span class="c1"># =&gt; [2, 3]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://ruby-doc.org/core-2.6/Array.html#method-i-union">union</a></li>
<li><a href="https://ruby-doc.org/core-2.6/Array.html#method-i-difference">difference</a></li>
</ul>


<h1>Array#filter (Array#select alias)</h1>

<p>主要是其他語言 <code>Javascript, PHP, Haskell, Java 8, Scala, R</code> 等等都是用 <code>fliter</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="ss">:foo</span><span class="p">,</span> <span class="ss">:bar</span><span class="o">].</span><span class="n">filter</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span> <span class="o">==</span> <span class="ss">:foo</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Enumerable#to_h with block</h1>

<p><code>to_h</code> 支援 block，就可以直接作轉換 <code>key</code>, <code>value</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">hash</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">foo</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">bar</span><span class="p">:</span> <span class="mi">3</span> <span class="p">}</span>
</span><span class='line'><span class="nb">hash</span><span class="o">.</span><span class="n">to_h</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="o">|</span> <span class="o">[</span><span class="n">k</span><span class="o">.</span><span class="n">upcase</span><span class="p">,</span> <span class="n">v</span><span class="o">*</span><span class="n">v</span><span class="o">]</span> <span class="p">}</span> <span class="c1">#=&gt; { FOO: 4, BAR: 9 }</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ruby 2.5:</span>
</span><span class='line'><span class="c1"># hash.map { |k, v| [k.upcase, v*v] }.to_h</span>
</span><span class='line'><span class="c1"># hash.reduce({}) { |result, (k, v)| result.merge(k.upcase =&gt; v*v) }</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Enumerator::ArithmeticSequence</h1>

<p>之前無法用 <code>first</code> 和 <code>last</code></p>

<ul>
<li><code>Range#step</code></li>
<li><code>Numeric#step</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'><span class="c1"># 9</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'><span class="c1"># ruby 2.5:</span>
</span><span class='line'><span class="c1"># NoMethodError: undefined method `last&#39; for #&lt;Enumerator: 1..10:step(2)&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>%</code> is <code>step</code> alias</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">((</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span> <span class="o">%</span> <span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="c1">#  =&gt; [1, 3, 5, 7, 9]</span>
</span></code></pre></td></tr></table></div></figure>


<p>另一個改變</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1"># false - Ruby 2.5 (and older)</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1"># true - Ruby 2.6</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Merge multiple hashes</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">a</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">b</span><span class="p">:</span> <span class="mi">2</span> <span class="p">}</span>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">c</span><span class="p">:</span> <span class="mi">3</span> <span class="p">}</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span>
</span><span class='line'><span class="c1"># {:a=&gt;1, :b=&gt;2, :c=&gt;3}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">b</span><span class="p">)</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span><span class='line'><span class="c1"># ruby 2.5:</span>
</span><span class='line'><span class="c1"># {:a=&gt;1, :b=&gt;2, :c=&gt;3}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Random.bytes</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Random</span><span class="o">.</span><span class="n">bytes</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;\xA4\xFB\xC4\x94\xC5U\xA0\x1A&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ruby 2.5</span>
</span><span class='line'><span class="no">Random</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">bytes</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;\xCEn@\xFA\x93\xB3\xB9\x80p\xA9&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Range#=== now uses uses #cover? instead of #include?</h1>

<p><code>===</code>: <code>case equality</code>，原本是用 <code>include?</code> 的方式，改為用 <code>cover?</code></p>

<ul>
<li>include? 會將所有值一一拿出來做比對，因此效率較差</li>
<li>cover?   只會取出開頭和結尾，去比對，值 => 開頭 &amp;&amp; 值 &lt;= 結尾，效能比較好</li>
</ul>


<blockquote><p>cover?</p>

<p>Returns true if obj is between the begin and end of the range.</p>

<p>This tests begin &lt;= obj &lt;= end when exclude_end? is false and begin &lt;= obj &lt; end when exclude_end? is true.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="o">.</span><span class="n">.</span><span class="s2">&quot;z&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">cover?</span><span class="p">(</span><span class="s2">&quot;c&quot;</span><span class="p">)</span>  <span class="c1">#=&gt; true</span>
</span><span class='line'><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="o">.</span><span class="n">.</span><span class="s2">&quot;z&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">cover?</span><span class="p">(</span><span class="s2">&quot;5&quot;</span><span class="p">)</span>  <span class="c1">#=&gt; false</span>
</span><span class='line'><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="o">.</span><span class="n">.</span><span class="s2">&quot;z&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">cover?</span><span class="p">(</span><span class="s2">&quot;cc&quot;</span><span class="p">)</span> <span class="c1">#=&gt; true</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">cover?</span><span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="n">.</span><span class="mi">3</span><span class="p">)</span>     <span class="c1">#=&gt; true</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">cover?</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">6</span><span class="p">)</span>     <span class="c1">#=&gt; false</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">cover?</span><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="mi">6</span><span class="p">)</span>    <span class="c1">#=&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="o">.</span><span class="n">.</span><span class="s2">&quot;z&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">)</span>   <span class="c1">#=&gt; true</span>
</span><span class='line'><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="o">.</span><span class="n">.</span><span class="s2">&quot;z&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;A&quot;</span><span class="p">)</span>   <span class="c1">#=&gt; false</span>
</span><span class='line'><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="o">.</span><span class="n">.</span><span class="s2">&quot;z&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;cc&quot;</span><span class="p">)</span>  <span class="c1">#=&gt; false</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;date&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="no">DateTime</span><span class="o">.</span><span class="n">now</span>
</span><span class='line'><span class="k">when</span> <span class="no">Date</span><span class="o">.</span><span class="n">today</span><span class="o">.</span><span class="n">.</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;matched&#39;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;not matched&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://ruby-doc.org/core-2.6.1/Range.html#method-i-cover-3F">cover?</a></li>
<li><a href="https://ruby-doc.org/core-2.6.1/Range.html#method-i-include-3F">include?</a></li>
</ul>


<p>參考文件</p>

<ul>
<li><a href="https://github.com/ruby/ruby/blob/trunk/doc/NEWS-2.6.0">NEWS-2.6.0</a></li>
<li><a href="https://nithinbekal.com/posts/ruby-2-6/">What&rsquo;s new in Ruby 2.6</a></li>
<li><a href="https://medium.com/tailor-tech/whats-new-in-ruby-2-6-a4774f3631c1">What’s new in Ruby 2.6?</a></li>
<li><a href="https://www.rubyguides.com/2018/11/ruby-2-6-new-features/">9 New Features in Ruby 2.6</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Maps in Action]]></title>
    <link href="https://mgleon08.github.io/blog/2019/02/08/golang-maps-in-action/"/>
    <updated>2019-02-08T10:55:15+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/02/08/golang-maps-in-action</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>Introduction</h1>

<p> <code>Hash Table</code> 是 Computer Science 中最有用的資料結構，提供了快速尋找，新增，刪除，Golang 透過 <code>map</code> type 來實踐。</p>

<h1>Declaration and initialization</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">map</span><span class="p">[</span><span class="nx">KeyType</span><span class="p">]</span><span class="nx">ValueType</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>KeyType 是 type 可以是任意一個可比較的類型</li>
<li>ValueType 也是可以任意的類型</li>
<li>包括 map type 也可以</li>
</ul>


<p>下面的變數 <code>m</code> 是一個 <code>string keys</code> to <code>int values</code> 的 map</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">var</span> <span class="nx">m</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span>
</span></code></pre></td></tr></table></div></figure>


<p>Map 的類型是 <code>reference types</code>, 像是 <code>pointers</code> or <code>slices</code>，因此上面 <code>m</code> 的 value 是 nil</p>

<p>當讀取時 <code>nil map</code> 行為類似空的 map，若嘗試寫入 <code>nil map</code> 則會造成 <code>runtime panic</code></p>

<p>因此如果要初始化一個 map 可以用 <code>make</code> function</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">m</span> <span class="p">=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>make</code> function 會分配並且初始化一個 <code>hash map data structure</code> 並返回指向它(<code>make</code>)的 map value</p>

<h1>Working with maps</h1>

<p>Set key <code>route</code> to <code>66</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">m</span><span class="p">[</span><span class="s">&quot;route&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="mi">66</span>
</span></code></pre></td></tr></table></div></figure>


<p>Assign <code>m["route"]</code> to variable <code>66</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">i</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="s">&quot;route&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>value 是 <code>int</code>，因此如果 key 不存在，則會回傳 <code>0</code>，string 則是回傳空字串</p>

<blockquote><p>前提是要用 make 來建立，否則會 panic</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">j</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="s">&quot;root&quot;</span><span class="p">]</span>
</span><span class='line'><span class="c1">// j == 0</span>
</span></code></pre></td></tr></table></div></figure>


<p>回傳 map 的 item 長度</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">n</span> <span class="o">:=</span> <span class="nb">len</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>delete</code> function 根據 key 去做刪除，刪除不會回傳任何東西，如果 key 是不存在則不會做任何事</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nb">delete</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="s">&quot;route&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>map 也可以用兩個變數來取</p>

<ul>
<li>第一個變數 <code>i</code> 是指 <code>m["route"]</code> 裡的值，如果沒有 <code>route</code> 就回傳 <code>0</code></li>
<li>第二個變數 <code>ok</code> 則是用來判斷這個 key 存不存在，true 為存在，反之不存在</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">i</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="s">&quot;route&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果只是要判斷存不存在，並沒有要使用到 value 可以給一個 <code>_</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">_</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="s">&quot;route&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>要取出 map 的 key &amp; value 可以用 range</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">for</span> <span class="nx">key</span><span class="p">,</span> <span class="nx">value</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">m</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Key:&quot;</span><span class="p">,</span> <span class="nx">key</span><span class="p">,</span> <span class="s">&quot;Value:&quot;</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>初始化並給值</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">commits</span> <span class="o">:=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;rsc&quot;</span><span class="p">:</span> <span class="mi">3711</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;r&quot;</span><span class="p">:</span>   <span class="mi">2138</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;gri&quot;</span><span class="p">:</span> <span class="mi">1908</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;adg&quot;</span><span class="p">:</span> <span class="mi">912</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>初始化並給空的值，效果跟用 <code>make</code> 一樣</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">m</span> <span class="p">=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Exploiting zero values</h1>

<p>在 map 上利用 0(bool) 值</p>

<h3>map 利用 bool 來作為一種數據結構的檢測，就不需要多一個變數來處理</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 建立一個 Node 的 struct</span>
</span><span class='line'>  <span class="kd">type</span> <span class="nx">Node</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">Next</span>  <span class="o">*</span><span class="nx">Node</span>
</span><span class='line'>      <span class="nx">Value</span> <span class="kd">interface</span><span class="p">{}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nx">second</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">Node</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">Next</span><span class="p">:</span>  <span class="kc">nil</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">Value</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">first</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">Node</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">Next</span><span class="p">:</span>  <span class="nx">second</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">Value</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// 故意讓 first 重複，形成迴圈</span>
</span><span class='line'>  <span class="nx">second</span><span class="p">.</span><span class="nx">Next</span> <span class="p">=</span> <span class="nx">first</span>
</span><span class='line'>  <span class="nx">visited</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="o">*</span><span class="nx">Node</span><span class="p">]</span><span class="kt">bool</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">n</span> <span class="o">:=</span> <span class="nx">first</span><span class="p">;</span> <span class="nx">n</span> <span class="o">!=</span> <span class="kc">nil</span><span class="p">;</span> <span class="nx">n</span> <span class="p">=</span> <span class="nx">n</span><span class="p">.</span><span class="nx">Next</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 如果遇到一個已經變成 true 代表重複了，就 break</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">visited</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;cycle detected&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="c1">// 只要有遍歷到就將 value 改成 true</span>
</span><span class='line'>      <span class="nx">visited</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">Value</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>map of slices</h3>

<p>不需要 check key 存不存在，因為 appending 一個 nil 的 slice, 會自動分配新的 slice</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">type</span> <span class="nx">Person</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">Name</span>  <span class="kt">string</span>
</span><span class='line'>      <span class="nx">Likes</span> <span class="p">[]</span><span class="kt">string</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">people</span> <span class="p">[]</span><span class="o">*</span><span class="nx">Person</span>
</span><span class='line'>  <span class="nx">people</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">people</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">Person</span><span class="p">{</span><span class="s">&quot;Leon&quot;</span><span class="p">,</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&quot;cheese&quot;</span><span class="p">,</span> <span class="s">&quot;bacon&quot;</span><span class="p">}})</span>
</span><span class='line'>  <span class="c1">// 也可以 people := []*Person{&amp;Person{&quot;Leon&quot;, []string{&quot;cheese&quot;, &quot;bacon&quot;}}}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">likes</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="o">*</span><span class="nx">Person</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 取出所有 people</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">p</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">people</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 取出每個 person 喜歡的東西</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">l</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">p</span><span class="p">.</span><span class="nx">Likes</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// 列出喜歡這個東西的人</span>
</span><span class='line'>          <span class="nx">likes</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">likes</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span> <span class="nx">p</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// 列出喜歡起司的人</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">p</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">likes</span><span class="p">[</span><span class="s">&quot;cheese&quot;</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">Name</span><span class="p">,</span> <span class="s">&quot;likes cheese.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 列出喜歡培根的人數</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nx">likes</span><span class="p">[</span><span class="s">&quot;bacon&quot;</span><span class="p">]),</span> <span class="s">&quot;people like bacon.&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>由於 range 和 len 都將 nil slice 視為零長度的 slice，所以沒有 data 也不會有問題</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">ListNode</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Val</span>  <span class="kt">int</span>
</span><span class='line'>  <span class="nx">Next</span> <span class="o">*</span><span class="nx">ListNode</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">mapp</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="nx">ListNode</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">mapp</span><span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="nx">ListNode</span><span class="p">{</span><span class="nx">Val</span><span class="p">:</span> <span class="mi">1</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">mapp</span><span class="p">[</span><span class="s">&quot;b&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="nx">ListNode</span><span class="p">{</span><span class="nx">Val</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">mapp</span><span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">].</span><span class="nx">Next</span> <span class="p">=</span> <span class="nx">mapp</span><span class="p">[</span><span class="s">&quot;b&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">mapp</span><span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">].</span><span class="nx">Val</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Key types</h1>

<p>先前提到 key 可以是任何可以比較的類型(<code>boolean</code>, <code>numeric</code>, <code>string</code>, <code>pointer</code>, <code>channel</code>, and <code>interface types</code>, and <code>structs</code> or <code>arrays</code>)</p>

<p>注意到這列表上不包括(<code>slices</code>, <code>maps</code>, and <code>functions</code>) 這些類型不能做比較，所以也不能當作 map 的 key</p>

<p>另外 struct key 是比較特別的，因為 struct 的 data 是多維度的面相(可以描述一個 data 的結構)</p>

<p>舉例來說下面是一個 map 包著一個 map，用於統計國家/地區的網頁造訪次數</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 外面 map 的 key 是網頁的路徑 path，裡面的 map 的 key 則是 國家的代碼</span>
</span><span class='line'><span class="nx">hits</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>澳洲(Australian) 的 documentation page 點擊次數</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">n</span> <span class="o">:=</span> <span class="nx">hits</span><span class="p">[</span><span class="s">&quot;/doc/&quot;</span><span class="p">][</span><span class="s">&quot;au&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>但這種方法，再新增新的 data 時，會不太好處理，因為每次給外部 map key 時，就必須再檢查裡面的 map 是否存在，不存在在建立</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">func</span> <span class="nx">add</span><span class="p">(</span><span class="nx">m</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">path</span><span class="p">,</span> <span class="nx">country</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 先確認 value 在不在</span>
</span><span class='line'>    <span class="nx">mm</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="nx">path</span><span class="p">]</span>
</span><span class='line'>    <span class="c1">// 如果 value 不存在，就建立新的 inner map，每次都要檢查</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">!</span><span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">mm</span> <span class="p">=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">m</span><span class="p">[</span><span class="nx">path</span><span class="p">]</span> <span class="p">=</span> <span class="nx">mm</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// </span>
</span><span class='line'>    <span class="nx">mm</span><span class="p">[</span><span class="nx">country</span><span class="p">]</span><span class="o">++</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">add</span><span class="p">(</span><span class="nx">hits</span><span class="p">,</span> <span class="s">&quot;/doc/&quot;</span><span class="p">,</span> <span class="s">&quot;au&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>利用 struct 可以減少上面的複雜性</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">Key</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">Path</span><span class="p">,</span> <span class="nx">Country</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">hits</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="nx">Key</span><span class="p">]</span><span class="kt">int</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>當越南人(Vietnamese) 造訪頁面，增加(或建立新的) 可以用一行就解決</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">hits</span><span class="p">[</span><span class="nx">Key</span><span class="p">{</span><span class="s">&quot;/&quot;</span><span class="p">,</span> <span class="s">&quot;vn&quot;</span><span class="p">}]</span><span class="o">++</span>
</span></code></pre></td></tr></table></div></figure>


<p>要看到瑞士(Swiss)有多少人看到 <code>/ref/spec</code> 也很簡單</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">n</span> <span class="o">:=</span> <span class="nx">hits</span><span class="p">[</span><span class="nx">Key</span><span class="p">{</span><span class="s">&quot;/ref/spec&quot;</span><span class="p">,</span> <span class="s">&quot;ch&quot;</span><span class="p">}]</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Concurrency</h1>

<p><a href="https://golang.org/doc/faq#atomic_maps">Maps are not safe for concurrent use</a></p>

<p>並發訪問map是不安全的，會出現未定義行為</p>

<p>如果希望多併發讀取 map，必須提供某種同步機制，可以用 <a href="https://golang.org/pkg/sync/#RWMutex">sync.RWMutex</a> 讀寫鎖，確保同步機制(synchronization mechanism)</p>

<p>但是透過讀寫鎖控制 map 的並發訪問時，會導致一定的性能問題，不過能保證程序的安全運行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">counter</span> <span class="p">=</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">sync</span><span class="p">.</span><span class="nx">RWMutex</span>
</span><span class='line'>      <span class="nx">m</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span>
</span><span class='line'>  <span class="p">}{</span><span class="nx">m</span><span class="p">:</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">)}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// To read from the counter, take the read lock:</span>
</span><span class='line'>  <span class="nx">counter</span><span class="p">.</span><span class="nx">RLock</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">n</span> <span class="o">:=</span> <span class="nx">counter</span><span class="p">.</span><span class="nx">m</span><span class="p">[</span><span class="s">&quot;some_key&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="nx">counter</span><span class="p">.</span><span class="nx">RUnlock</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;some_key:&quot;</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// To write to the counter, take the write lock:</span>
</span><span class='line'>  <span class="nx">counter</span><span class="p">.</span><span class="nx">Lock</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">counter</span><span class="p">.</span><span class="nx">m</span><span class="p">[</span><span class="s">&quot;some_key&quot;</span><span class="p">]</span><span class="o">++</span>
</span><span class='line'>  <span class="nx">counter</span><span class="p">.</span><span class="nx">Unlock</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;some_key:&quot;</span><span class="p">,</span> <span class="nx">counter</span><span class="p">.</span><span class="nx">m</span><span class="p">[</span><span class="s">&quot;some_key&quot;</span><span class="p">])</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://colobu.com/2017/07/11/dive-into-sync-Map/">Go 1.9 sync.Map揭秘</a></li>
<li><a href="https://www.jianshu.com/p/10a998089486">go語言坑之並發訪問map</a></li>
</ul>


<h1>Iteration order</h1>

<p>用 <code>range</code> 迭代 map 時，並沒有指定每次的順序一樣，也沒有保證下一次的順序會跟上一次的順序一樣，每次都是隨機的</p>

<p>如果希望能夠每次迭代的順序都一樣的話，必須先將 key 單獨分開來做排序，在迭代排序好的 key mapping 回 map</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sort&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">m</span> <span class="o">:=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">int</span><span class="p">]</span><span class="kt">string</span><span class="p">{</span>
</span><span class='line'>      <span class="mi">1</span><span class="p">:</span> <span class="s">&quot;A&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="mi">2</span><span class="p">:</span> <span class="s">&quot;B&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="mi">3</span><span class="p">:</span> <span class="s">&quot;C&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// 先將 key 取出來排序</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">keys</span> <span class="p">[]</span><span class="kt">int</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">k</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">m</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">keys</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">keys</span><span class="p">,</span> <span class="nx">k</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">Ints</span><span class="p">(</span><span class="nx">keys</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// 改成以下方法，就會倒過來</span>
</span><span class='line'>  <span class="c1">// sort.Sort(sort.Reverse(sort.IntSlice(keys)))</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 迭代排序好的 slice，並指定 map 的 key</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">k</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">keys</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Key:&quot;</span><span class="p">,</span> <span class="nx">k</span><span class="p">,</span> <span class="s">&quot;Value:&quot;</span><span class="p">,</span> <span class="nx">m</span><span class="p">[</span><span class="nx">k</span><span class="p">])</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>cannot assign to struct field XXX in map</h1>

<p>當 struct 作為 map 裡面的值時，不能透過 map[key].xx = &ldquo;xx&rdquo; 這種賦值，會出現 <code>cannot assign to struct field XXX in map</code> 不予許修改 map 裡的值</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">test</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">a</span> <span class="o">:=</span> <span class="nx">test</span><span class="p">{</span><span class="s">&quot;hello&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">mapp</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="nx">test</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">mapp</span><span class="p">[</span><span class="s">&quot;hey&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="nx">a</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 因為 map 的 value 是不可尋址的，因此會報錯</span>
</span><span class='line'>  <span class="c1">// cannot assign to struct field mapp[&quot;test&quot;].name in map</span>
</span><span class='line'>  <span class="nx">mapp</span><span class="p">[</span><span class="s">&quot;hey&quot;</span><span class="p">].</span><span class="nx">name</span> <span class="p">=</span> <span class="s">&quot;hi&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// if v, ok := mapp[&quot;hey&quot;]; ok {</span>
</span><span class='line'>  <span class="c1">// 雖然這樣不會有 error，但實際上 v 是 copy 的值，因此也不會改到原本的 value，所以還是 hello</span>
</span><span class='line'>  <span class="c1">//     v.name = &quot;hi&quot;</span>
</span><span class='line'>  <span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">mapp</span><span class="p">[</span><span class="s">&quot;hey&quot;</span><span class="p">].</span><span class="nx">name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>原因:</h3>

<p>map 的 value 是不可尋址的(<a href="https://golang.org/ref/spec#Address_operators">addressable</a>)，因為 map 中的值會在記憶體中行動，舊的指針地址在 map 改變時會變得無效。</p>

<p>另外 map 是會自動擴容，因此原來存值是 A 地址，擴容後 A 地址就不是原來的值了，因此如果需要改值，必須改用 <code>make(map[string]*test)</code></p>

<p>參考文件</p>

<ul>
<li><a href="https://blog.golang.org/go-maps-in-action">Go maps in action</a></li>
<li><a href="https://stackoverflow.com/questions/32751537/why-do-i-get-a-cannot-assign-error-when-setting-value-to-a-struct-as-a-value-i">Why do I get a “cannot assign” error when setting value to a struct as a value in a map? [duplicate]</a></li>
<li><a href="https://gocn.vip/question/1714">問一個問題。為啥結構體作為map的值，不能透過map[key].成員屬性 = &ldquo;Xxx&rdquo; 這種賦值</a></li>
<li><a href="https://studygolang.com/articles/12714">Golang面試題解析（四）</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
