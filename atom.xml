<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leon's Blogging]]></title>
  <link href="http://mgleon08.github.com/atom.xml" rel="self"/>
  <link href="http://mgleon08.github.com/"/>
  <updated>2018-12-19T23:47:16+08:00</updated>
  <id>http://mgleon08.github.com/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Instagram Crawler With API (Ruby 爬蟲)]]></title>
    <link href="http://mgleon08.github.com/blog/2018/11/19/instagram-crawler-with-api/"/>
    <updated>2018-11-19T22:19:08+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/11/19/instagram-crawler-with-api</id>
    <content type="html"><![CDATA[<p>這是換透過分析 Instagram API，取得所有圖片和影片</p>

<!-- more -->


<p>根據上一篇 <a href="http://mgleon08.github.com/blog/2018/11/18/instagram-crawler-with-selenium/1.ins.png">Instagram Crawler with selenium (ruby 爬蟲)</a> 會有幾個問題</p>

<ol>
<li>因為是操作 browser 所以跟網路速度會有關係，萬一網路斷線或是很慢的話就沒辦法那麼順利爬取</li>
<li>頁面上的 class 都是亂數，可能是透過編譯自行產生，因此下次 Instagram 重新編譯，可能所有的 class 名稱又都不同了..</li>
</ol>


<p>因此這次換用 API 的方式來爬取 Instagram 的貼文，因為是用 API 所以也不需要去操作 browser，取得對應的 class，也就不會有上述的問題!</p>

<h1>Think</h1>

<h2>分析 API</h2>

<p>首先先觀察一下 Instagram 上面的 API <code>https://www.instagram.com/marvel/</code> (隨便一個都可以)</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-19-instagram-crawler-with-api/1.ins.png"></p>

<p>可以發現每次進到頁面會 request 三條 API，打開後發現其中一條 API，裡面有我們要的資訊 (<code>edges</code> 就是 API 取回的貼文)</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-19-instagram-crawler-with-api/2.ins.png"></p>

<p>開始分析裡面的資訊，首先是 API</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-19-instagram-crawler-with-api/3.ins.png"></p>

<p>會發現後面都會帶兩個參數 <code>query_hash</code> &amp; <code>variables</code> 而 <code>variables</code> 裡面是一個 json 又包了很多資訊</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;id&quot;</span><span class="ss">:&quot;204633036&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;first&quot;</span> <span class="mi">12</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;after&quot;</span><span class="p">:</span> <span class="s2">&quot;QVFEeDUzd05jNVczMXpMRTNwYzlnYldCM0p4SGIyRmh4Q2VHYy1jZm1sUlRSalY3cVdoUklKWWdBT2RNSjJxc1pZbVBGZlN1REdjUExLMGlOWDhpR0VTcQ==&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><ul>
<li>id: 研判應該是 user_id 之類，用來判斷使用者，因為所有 API 所使用的 id 都一樣</li>
<li>first: 嘗試更換 first 的數字，就可以發現可以要到更多資料，應該是取得數量的設定</li>
<li>after: 後面的參數，跟 API 裡面的 <code>end_cursor</code> 長度格式都是一樣，研判是用來判斷下一個 API 的參數所用，在 API 裡面還有一個參數是 <code>has_next_page</code>，因此可以確定 <code>has_next_page</code> 是用來判斷是否有下一頁，<code>end_cursor</code> 是下一頁所需要的參數值</li>
</ul>
</blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">page_info</span><span class="s2">&quot;: {</span>
</span><span class='line'><span class="s2">  &quot;</span><span class="n">has_next_page</span><span class="s2">&quot;: true,</span>
</span><span class='line'><span class="s2">  &quot;</span><span class="n">end_cursor</span><span class="s2">&quot;:   &quot;</span><span class="no">QVFDbml1aFJVRkM2QkVJdzRIN1pJTEpMVlpVTl9hdHh0YlBXUDZGRDRDa1NYLUpvX3hBaGlDcXNLSlhud0dma1hBWnNyOG5DWEFjNTNlOEJibXdyaml4Vg</span><span class="o">==</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>嘗試將 API 上的 <code>variables</code> 裡的 <code>end_cursor</code> 換成 API 取回來的 <code>end_cursor</code></p>

<p>Request 取得新貼文成功!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">www</span><span class="o">.</span><span class="n">instagram</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">graphql</span><span class="o">/</span><span class="n">query</span><span class="o">/</span><span class="p">?</span><span class="n">query_hash</span><span class="o">=</span><span class="mi">50</span><span class="n">d3631032cf38ebe1a2d758524e3492</span><span class="o">&amp;</span><span class="n">variables</span><span class="o">=%</span><span class="mi">7</span><span class="n">B</span><span class="o">%</span><span class="mi">22</span><span class="nb">id</span><span class="o">%</span><span class="mi">22</span><span class="o">%</span><span class="mi">3</span><span class="n">A</span><span class="o">%</span><span class="mi">22204633036</span><span class="o">%</span><span class="mi">22</span><span class="o">%</span><span class="mi">2</span><span class="n">C</span><span class="o">%</span><span class="mi">22</span><span class="n">first</span><span class="o">%</span><span class="mi">22</span><span class="o">%</span><span class="mi">3</span><span class="no">A12</span><span class="o">%</span><span class="mi">2</span><span class="n">C</span><span class="o">%</span><span class="mi">22</span><span class="n">after</span><span class="o">%</span><span class="mi">22</span><span class="o">%</span><span class="mi">3</span><span class="n">A</span><span class="o">%</span><span class="mi">22</span><span class="no">QVFDbml1aFJVRkM2QkVJdzRIN1pJTEpMVlpVTl9hdHh0YlBXUDZGRDRDa1NYLUpvX3hBaGlDcXNLSlhud0dma1hBWnNyOG5DWEFjNTNlOEJibXdyaml4Vg</span><span class="o">%</span><span class="mi">3</span><span class="n">D</span><span class="o">%</span><span class="mi">3</span><span class="n">D</span><span class="o">%</span><span class="mi">22</span><span class="o">%</span><span class="mi">7</span><span class="n">D</span>
</span></code></pre></td></tr></table></div></figure>


<h2>第一個 API?</h2>

<p>接著會發現，每個 API 給的都是下一條 API 的 <code>end_cursor</code>，那第一條呢???</p>

<p>如果希望讓爬蟲自動去爬所有的貼文，而不是還要餵食第一條 API 給它..勢必還是要找到啊..</p>

<p>一開始怎麼找都找不到，最後終於在頁面原始碼找到了 (command + F <code>end_cursor</code>)</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-19-instagram-crawler-with-api/4.ins.png"></p>

<p>仔細觀察，發現都是包在 <code>window._sharedData</code> 裡面，因此第一條 API 的 <code>end_cursor</code> 就透過爬頁面的 <code>window._sharedData</code> 將參數帶到之前的 API 即可!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'><span class="n">js_data</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="n">at_xpath</span><span class="p">(</span><span class="s2">&quot;//script[contains(text(),&#39;window._sharedData&#39;)]&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>前 12 個貼文?</h2>

<p>再來會發現，我們已經取得了第一個 API，但是回來的資料，卻是從第 13 個貼文開始，而不是第一個??</p>

<p>原來第一個 API 會是從第 13 個貼文開始，而前 12 個貼文，在剛剛頁面的 <code>window._sharedData</code> 就可以找到!</p>

<p>分析後，如果前面 12 個有包含 video 或是 post，就沒辦法取得影片跟後面的連續圖片，仔細想想在這頁面也並不需要這兩種資訊，於是點貼文之後，會發現 video 和 post 連續圖片就跑出來了</p>

<p>Video 會發現在 <code>property="og:video"</code> 裡面</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-19-instagram-crawler-with-api/5.ins.png"></p>

<p>Post 則會在 <code>"edges"</code> 底下的 array 裡面</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-19-instagram-crawler-with-api/6.ins.png"></p>

<p>那要怎麼知道貼文的連結?仔細觀察貼文的 url 都是 <code>https://www.instagram.com/p/BqAlq0wh9wV/</code> 看起來只要得到後面那段亂碼，就可以取得連結，接著就來看看
<code>window._sharedData</code> 裡面是否找得到</p>

<p>command + F <code>BqAlq0wh9wV</code>，就可以找到 <code>shortcode":"BqAlq0wh9wV"</code>，判斷 shortcode 應該就是每個貼文的代碼，這樣就可以進到每個頁面，各自取得相關的資訊</p>

<h2>策略</h2>

<p>由上面分析過後，我們的策略就是前 12 個貼文，透過爬 html 來取得，第 13 個貼文開始，就透過 API 來取得!</p>

<h2>Data</h2>

<p>資料基本上都是在 edges 的 node 裡面</p>

<h3>HTML</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># json = window._sharedData 裡面內容</span>
</span><span class='line'><span class="n">page_info</span> <span class="o">=</span> <span class="n">json</span><span class="o">[</span><span class="s2">&quot;entry_data&quot;</span><span class="o">][</span><span class="s2">&quot;ProfilePage&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;graphql&quot;</span><span class="o">][</span><span class="s2">&quot;user&quot;</span><span class="o">][</span><span class="s2">&quot;edge_owner_to_timeline_media&quot;</span><span class="o">][</span><span class="s1">&#39;page_info&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">edges</span>     <span class="o">=</span> <span class="n">json</span><span class="o">[</span><span class="s2">&quot;entry_data&quot;</span><span class="o">][</span><span class="s2">&quot;ProfilePage&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;graphql&quot;</span><span class="o">][</span><span class="s2">&quot;user&quot;</span><span class="o">][</span><span class="s2">&quot;edge_owner_to_timeline_media&quot;</span><span class="o">][</span><span class="s2">&quot;edges&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">edges</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">edge</span><span class="o">|</span>
</span><span class='line'>  <span class="n">node</span> <span class="o">=</span> <span class="n">edge</span><span class="o">[</span><span class="s2">&quot;node&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">page_url</span> <span class="o">=</span> <span class="s2">&quot;https://www.instagram.com/p/</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s2">&quot;shortcode&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">/&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">node</span><span class="o">[</span><span class="s2">&quot;is_video&quot;</span><span class="o">]</span>
</span><span class='line'>     <span class="c1"># VIDEO</span>
</span><span class='line'>    <span class="n">url</span> <span class="o">=</span> <span class="no">Html</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">page_url</span><span class="p">)</span><span class="o">.</span><span class="n">video_page</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">shortcode_media</span> <span class="o">=</span> <span class="no">Html</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">page_url</span><span class="p">)</span><span class="o">.</span><span class="n">photo_page</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">shortcode_media</span><span class="o">.</span><span class="n">is_a?</span> <span class="nb">Array</span>
</span><span class='line'>      <span class="c1"># POST</span>
</span><span class='line'>      <span class="n">shortcode_media</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class='line'>        <span class="n">url</span> <span class="o">=</span> <span class="n">post</span><span class="o">[</span><span class="s2">&quot;node&quot;</span><span class="o">][</span><span class="s2">&quot;display_url&quot;</span><span class="o">]</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># PHOTO</span>
</span><span class='line'>      <span class="n">url</span> <span class="o">=</span> <span class="n">shortcode_media</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">video_page</span>
</span><span class='line'>  <span class="n">doc</span>    <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'>  <span class="n">meta_v</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="n">at_xpath</span><span class="p">(</span><span class="s2">&quot;//meta[@property=&#39;og:video&#39;]&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">url</span>    <span class="o">=</span> <span class="n">meta_v</span><span class="o">.</span><span class="n">attribute_nodes</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">photo_page</span>
</span><span class='line'>  <span class="n">doc</span>       <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'>  <span class="n">js_data</span>   <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="n">at_xpath</span><span class="p">(</span><span class="s2">&quot;//script[contains(text(),&#39;window._sharedData&#39;)]&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">json</span>      <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">js_data</span><span class="o">.</span><span class="n">text</span><span class="o">[</span><span class="mi">21</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">shortcode_media</span> <span class="o">=</span> <span class="n">json</span><span class="o">[</span><span class="s2">&quot;entry_data&quot;</span><span class="o">][</span><span class="s2">&quot;PostPage&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;graphql&quot;</span><span class="o">][</span><span class="s2">&quot;shortcode_media&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">shortcode_media</span><span class="o">[</span><span class="s2">&quot;edge_sidecar_to_children&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="c1"># POST</span>
</span><span class='line'>    <span class="n">shortcode_media</span><span class="o">[</span><span class="s2">&quot;edge_sidecar_to_children&quot;</span><span class="o">][</span><span class="s2">&quot;edges&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="c1"># PHOTO</span>
</span><span class='line'>    <span class="n">shortcode_media</span><span class="o">[</span><span class="s2">&quot;display_url&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>API</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">page_info</span> <span class="o">=</span> <span class="n">json</span><span class="o">[</span><span class="s2">&quot;data&quot;</span><span class="o">][</span><span class="s2">&quot;user&quot;</span><span class="o">][</span><span class="s2">&quot;edge_owner_to_timeline_media&quot;</span><span class="o">][</span><span class="s2">&quot;page_info&quot;</span><span class="o">]</span>
</span><span class='line'><span class="n">edges</span> <span class="o">=</span> <span class="n">json</span><span class="o">[</span><span class="s2">&quot;data&quot;</span><span class="o">][</span><span class="s2">&quot;user&quot;</span><span class="o">][</span><span class="s2">&quot;edge_owner_to_timeline_media&quot;</span><span class="o">][</span><span class="s2">&quot;edges&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">edges</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">edge</span><span class="o">|</span>
</span><span class='line'>  <span class="n">node</span> <span class="o">=</span> <span class="n">edge</span><span class="o">[</span><span class="s2">&quot;node&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">node</span><span class="o">[</span><span class="s2">&quot;is_video&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="c1"># VIDEO</span>
</span><span class='line'>    <span class="n">url</span> <span class="o">=</span> <span class="n">node</span><span class="o">[</span><span class="s2">&quot;video_url&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="o">!</span><span class="n">node</span><span class="o">[</span><span class="s2">&quot;edge_sidecar_to_children&quot;</span><span class="o">].</span><span class="n">nil?</span>
</span><span class='line'>  <span class="c1"># POST</span>
</span><span class='line'>    <span class="n">posts</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class='line'>      <span class="n">url</span> <span class="o">=</span> <span class="n">post</span><span class="o">[</span><span class="s2">&quot;node&quot;</span><span class="o">][</span><span class="s2">&quot;display_url&quot;</span><span class="o">]</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="c1"># PHOTO</span>
</span><span class='line'>    <span class="n">url</span> <span class="o">=</span> <span class="n">node</span><span class="o">[</span><span class="s2">&quot;display_url&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Ruby Gem</h1>

<p>以上是 Instagram 爬蟲邏輯和概念，最後這邊做成一個 gem 可以直接使用!</p>

<ul>
<li><a href="https://github.com/mgleon08/instagram-crawler">instagram-crawler</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Instagram Crawler With Selenium (Ruby 爬蟲)]]></title>
    <link href="http://mgleon08.github.com/blog/2018/11/18/instagram-crawler-with-selenium/"/>
    <updated>2018-11-18T21:55:00+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/11/18/instagram-crawler-with-selenium</id>
    <content type="html"><![CDATA[<p>透過模擬瀏覽器行為，取得 Instagram 所有圖片和影片!</p>

<!-- more -->


<p>一般常見的 crawler，只要透過 http request，把 html 拉回來，就可以直接爬上面的原始碼</p>

<p>但現在很多網頁都是透過 frontend 透過 API 拉資料，在用 javascript 去做動態 render，導致直接拉 html 也拉不到什麼東西。</p>

<p>因此改用模擬 browser 的行為，讓它將 html 都長出來，再去爬裡面的資料。</p>

<h1><a href="https://github.com/SeleniumHQ/selenium">selenium</a></h1>

<blockquote><p>A browser automation framework and ecosystem</p></blockquote>

<p>簡單的來說就是可以透過程式，直接驅動瀏覽器進行各種網站操作，透過這個 WebDriver  就可以讓頁面長出資料後，再把要的資料爬出來!</p>

<h1>WebDriver</h1>

<p>一開始要先安裝 WebDriver，根據你要用的 browser 去安裝對應的 WebDriver，像我基本上都是用 Chrome，因此就要去安裝 <a href="https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver">ChromeDriver</a>，比較簡單方式是直接執行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew tap homebrew/cask && brew cask install chromedriver</span></code></pre></td></tr></table></div></figure>


<h1>Think</h1>

<p>接著就開始分析要如何透過它來爬 instagram 頁面，這裡就用比較常用的 ruby 來講解。</p>

<p>用 ruby 來爬的話首先都會想到用 <a href="https://github.com/sparklemotion/nokogiri">nokogiri</a>，之前也有介紹過 <a href="https://mgleon08.github.io/blog/2016/02/07/ruby-crawler/">用 Ruby 做網頁爬蟲</a>，但這次必須模擬 browser 行為，因此改用 <a href="https://github.com/watir/watir">watir</a>，watir 是一個已經整合 selenium 的 ruby gem，那現在來開始了。</p>

<p>首先先隨便找一個頁面來觀察，</p>

<h2>一. 關閉不需要的區塊</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">browser</span> <span class="o">=</span> <span class="no">Watir</span><span class="o">::</span><span class="no">Browser</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">browser</span><span class="o">.</span><span class="n">goto</span><span class="p">(</span><span class="s1">&#39;https://www.instagram.com/marvel/&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>一開始會開一個全新的頁面，沒有 login，這時候下方會有個 login 的區塊，先找出關閉的button，並先將其關閉(避免影響瀏覽器操作)</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/1.ins.png"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># find close login button</span>
</span><span class='line'><span class="n">close_login_button</span> <span class="o">=</span> <span class="n">browser</span><span class="o">.</span><span class="n">button</span><span class="p">(</span><span class="ss">class</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;Ls00D&quot;</span><span class="p">,</span> <span class="s2">&quot;coreSpriteDismissLarge&quot;</span><span class="p">,</span> <span class="s2">&quot;Jx1OT&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="c1"># click close login button</span>
</span><span class='line'><span class="n">close_login_button</span><span class="o">.</span><span class="n">click</span> <span class="k">if</span> <span class="n">close_login_button</span><span class="o">.</span><span class="n">exist?</span>
</span></code></pre></td></tr></table></div></figure>


<h2>二. 解析</h2>

<p>接著觀察在 instagram 裡面，每一行<code>&lt;div class="Nnq7C weEfm"&gt;&lt;/div&gt;</code>都有 3 個 po 文 <code>&lt;div class="v1Nh3 kIKUG _bz0w"&gt;&lt;/div&gt;</code>，而每個貼文的資訊就在  裡面，因此我們要的資訊都會在這裡頭</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/2.ins.png"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># find all post div</span>
</span><span class='line'><span class="n">items</span> <span class="o">=</span> <span class="n">browser</span><span class="o">.</span><span class="n">divs</span><span class="p">(</span><span class="ss">class</span><span class="p">:</span><span class="o">[</span><span class="s2">&quot;v1Nh3&quot;</span><span class="p">,</span> <span class="s2">&quot;kIKUG&quot;</span><span class="p">,</span> <span class="s2">&quot;_bz0w&quot;</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>裡面的資訊又分為 Photo, Video, Post，那要怎麼分辨這三個?</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/3.ins.png"></p>

<p>首先注意到右上角除了單一 Photo，就會有個 icon，再仔細看 Video 跟 Post 的 icon 的 class 不同，所以判斷就如下</p>

<ul>
<li>Photo: 沒有 <code>&lt;div class="u7YqG"&gt;&lt;/div&gt;</code></li>
<li>Video: 有 <code>&lt;div class="u7YqG"&gt;&lt;/div&gt;</code>，並且裡面有 <code>&lt;div class="Byj2F"&gt;&lt;/div&gt;</code></li>
<li>Post: 有 <code>&lt;div class="u7YqG"&gt;&lt;/div&gt;</code>，並且裡面有 <code>&lt;div class="qFq_l"&gt;&lt;/div&gt;</code></li>
</ul>


<p>接著知道在哪後就要取得對應資訊</p>

<h3>Photo</h3>

<p>找到對應的 div 之後，取得 div 底下 image 的 src 即可。</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/4.ins.png"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">dom</span> <span class="o">=</span> <span class="n">browser</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="ss">class</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;_97aPb&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="ss">class</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;KL4Bh&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">image_src</span> <span class="o">=</span> <span class="n">dom</span><span class="o">.</span><span class="n">img</span><span class="o">.</span><span class="n">src</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Video</h3>

<p>Video 在找到對應的 dom，之後發現並沒有 video 相關的資訊，因為這個頁面只有 Video 的封面，並沒有實際在播放影片，因此必須打開影片的播放頁面，才能找到對應的檔案位置</p>

<p>因此先操作 browser 去打開影片頁面，並爬裡面的 html，發現在 <code>&lt;video class="tWeCl"&gt;&lt;/video&gt;</code> 裡面</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/5.ins.png"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">video_src</span> <span class="o">=</span> <span class="n">browser</span><span class="o">.</span><span class="n">video</span><span class="p">(</span><span class="ss">class</span><span class="p">:</span> <span class="s2">&quot;tWeCl&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">src</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Post</h3>

<p>跟 Video，在該頁面只能找到第一張，無法找到後面其他圖片，因此也打開 Post 的頁面去爬，接著找到放在 <code>&lt;li class="_-1_m6"&gt;&lt;/li&gt;</code> 裡面</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/6.ins.png"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">browser</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="ss">class</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;_2dDPU&quot;</span><span class="p">,</span> <span class="s2">&quot;vCf6V&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">lis</span><span class="p">(</span><span class="ss">class</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;_-1_m6&quot;</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>但這邊有個問題，會發現第三個之後，並沒有箭頭可以往下展開，需要點往右的箭頭，滑動圖片，才會接著展開，因此每次都必須點往右的箭頭，一個一個爬，直到最後一張</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/7.ins.png"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">post_src</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">lis</span><span class="o">.</span><span class="n">each</span><span class="o">.</span><span class="n">with_index</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="p">,</span> <span class="n">index</span><span class="o">|</span>
</span><span class='line'>  <span class="n">post_src</span> <span class="o">&lt;&lt;</span> <span class="n">post</span><span class="o">.</span><span class="n">img</span><span class="o">.</span><span class="n">src</span>
</span><span class='line'>  <span class="c1"># 還沒到最後一張就按一下圖片右鍵</span>
</span><span class='line'>  <span class="n">browser</span><span class="o">.</span><span class="n">button</span><span class="p">(</span><span class="ss">class</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;  _6CZji&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">click</span> <span class="k">if</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">lis</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>記得 Video &amp; Post 打開貼文後要關閉才能繼續找下一張!</p>

<h2>三. 迴圈</h2>

<p>接著會發現上面的 <code>&lt;div class="v1Nh3 kIKUG _bz0w"&gt;&lt;/div&gt;</code> 數量，跟實際上的貼文數量，是不成比例，但只要往下滑就會發現，div 的數量會不斷增加</p>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/8.ins.png"></p>

<p>因此接著就是要操作 browser 往下滑到最後，讓頁面載入新的 div 進來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">browser</span><span class="o">.</span><span class="n">execute_script</span><span class="p">(</span><span class="s2">&quot;window.scrollTo(0, document.body.scrollHeight);&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nb">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="c1"># 讓頁面讀取一下資訊</span>
</span></code></pre></td></tr></table></div></figure>


<p>並且要判斷何時滑到最下面，這邊直接取回頁面的高度，每滑一次，爬完，在滑一次時，判斷是否高度跟上次一樣，一樣就代表已經到最底了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">scrollHeight</span> <span class="o">=</span> <span class="n">new_scrollHeight</span>
</span><span class='line'>  <span class="n">new_scrollHeight</span> <span class="o">=</span> <span class="n">browser</span><span class="o">.</span><span class="n">execute_script</span><span class="p">(</span><span class="s2">&quot;return document.body.scrollHeight&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span> <span class="k">while</span> <span class="p">(</span><span class="n">new_scrollHeight</span> <span class="o">-</span> <span class="n">scrollHeight</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著就是就是無限迴圈直到滑到最下面就停止。</p>

<h2>Preview</h2>

<p><img src="http://mgleon08.github.com/images/custom/2018-11-18-instagram-crawler-with-selenium/9.ins.gif"></p>

<h2>Other</h2>

<ol>
<li>因為是操作 browser 所以跟網路速度會有關係，最好的方式是在每次要讀取新頁面時，先暫停讓頁面讀取再繼續下一步</li>
<li>頁面上的 class 都是亂數，可能是透過編譯自行產生，因此下次 Instagram 重新編譯，可能所有的 class 名稱又都不同了..</li>
<li>另外如果不希望打開 browser 可以使用 headless 模式</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Watir</span><span class="o">::</span><span class="no">Browser</span><span class="o">.</span><span class="n">new</span> <span class="ss">:chrome</span><span class="p">,</span> <span class="ss">headless</span><span class="p">:</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>example</h2>

<p><a href="https://github.com/mgleon08/instagram_crawler_with_selenium">instagram_crawler_with_selenium</a></p>

<p>參考文件</p>

<ul>
<li><a href="https://github.com/watir/watir">watir</a></li>
<li><a href="https://readysteadycode.com/howto-scrape-websites-with-ruby-and-watir">HOWTO scrape websites with Ruby &amp; Watir</a></li>
<li><a href="https://readysteadycode.com/howto-decide-which-ruby-web-scraping-library-to-use">HOWTO decide which Ruby web scraping library to use</a></li>
<li><a href="https://www.seleniumhq.org/">seleniumhq</a></li>
<li><a href="https://sites.google.com/a/chromium.org/chromedriver/downloads">ChromeDriver - WebDriver for Chrome</a></li>
<li><a href="https://www.youtube.com/watch?v=1UYBAn69Qrk&amp;feature=youtu.be&amp;t=4m24s">The Ultimate Introduction to Web Scraping and Browser Automation</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UML Class Diagram]]></title>
    <link href="http://mgleon08.github.com/blog/2018/11/08/uml-class-diagram/"/>
    <updated>2018-11-08T15:15:11+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/11/08/uml-class-diagram</id>
    <content type="html"><![CDATA[<p>類別圖，跟 ERD 有些類似，可能包含了 ERD 所描述的內容，但不一定可對應</p>

<!-- more -->


<p>Unified Modeling Language (UML)，透過此圖可以很清楚的畫出，每個 model 裡面有的 <code>attributes</code> &amp; <code>methods</code>，還有跟別的 model 的相互關係</p>

<h3>Symbol</h3>

<p>每個 <code>attributes</code> &amp; <code>methods</code> 前面可以標示符號，代表這個目前是哪一種狀態</p>

<ul>
<li>private : -</li>
<li>public : +</li>
<li>protected : #</li>
<li>package / default : ~</li>
</ul>


<p><img src="https://i.imgur.com/gkyiOkn.png" alt="" /></p>

<p>上圖算是比較簡易的版本，有些在 method 後面還會加入傳入的參數，跟回傳值</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span> <span class="n">setName</span><span class="p">(</span><span class="n">string</span><span class="p">):</span> <span class="n">string</span>
</span><span class='line'><span class="o">-</span> <span class="n">eat</span><span class="p">(</span><span class="n">string</span><span class="p">):</span> <span class="n">string</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Relationship</h3>

<p>透過 model 跟 model 間線的關聯，可以知道是繼承還是組合等等</p>

<ul>
<li>Inheritance 繼承 –––––▷</li>
<li>Association 關聯 ––––––</li>
<li>Aggregation 聚合 –––––◆</li>
<li>Composition 組合 –––––◇</li>
<li>Dependency 依賴  &mdash;&ndash;></li>
</ul>


<h3>Multiplicity</h3>

<p>線上面的數字則可以表示，model 與 model 的對應關係</p>

<ul>
<li><code>0..1</code> zero to one (optional)</li>
<li><code>n</code> specific number</li>
<li><code>0..*</code> zero to many</li>
<li><code>1..*</code> one to many</li>
<li><code>m..n</code> specific number range</li>
</ul>


<h3>Example</h3>

<p>實際上大概的圖示</p>

<p><img src="https://i.imgur.com/B6mapCR.png" alt="" /></p>

<ul>
<li><a href="https://www.youtube.com/watch?v=UI6lqHOVHic">UML Class Diagram Tutorial</a></li>
<li><a href="https://dotblogs.com.tw/lazycodestyle/2016/06/01/233545">[軟工] 類別圖「關聯」、「聚合」及「組合」比較</a></li>
<li><a href="https://github.com/macdidi5/UMLTutorial">UML超新手入門</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Relationship Diagram (ERD)]]></title>
    <link href="http://mgleon08.github.com/blog/2018/11/07/entity-relationship-diagram/"/>
    <updated>2018-11-07T15:14:59+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/11/07/entity-relationship-diagram</id>
    <content type="html"><![CDATA[<p>在工作上時常用到 Entity Relationship Diagram (ERD) 來規劃 DB schema 的關聯，透過這個可以在規劃專案時很清楚知道整個架構，並且讓執行的人也可以很清楚要怎麼實作。</p>

<!-- more -->


<p>畫出來的圖大概會長這樣</p>

<p><img src="https://i.imgur.com/aGA5DHb.png" alt="" /></p>

<p>這邊的重點就是要瞭解中間關聯的線的左右邊代表了什麼意思 (如以下圖)</p>

<p><img src="https://d2slcw3kip6qmk.cloudfront.net/marketing/pages/chart/erd-symbols/ERD-Notation.PNG" alt="ERPD Cardinality" /></p>

<p>以第一張圖舉例來說就代表</p>

<ul>
<li>1 個 customer 可以有 0 個或多個 order</li>
<li>1 個 order 至少有 1 個或多個 product</li>
<li>1 個 product 可以有 0 個或多個 order</li>
<li>1 個 order 至少且只能有一個 customer</li>
</ul>


<p>更進階清楚的話，可以連所有 column 的 type 都寫進去</p>

<p><img src="https://i.imgur.com/KBUmyAK.png" alt="" /></p>

<ul>
<li><a href="https://www.youtube.com/watch?v=QpdhBUYk7Kk">Entity Relationship Diagram (ERD) Tutorial - Part 1</a></li>
<li><a href="https://www.youtube.com/watch?v=-CuY5ADwn24">Entity Relationship Diagram (ERD) Tutorial - Part 2</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Reading Files]]></title>
    <link href="http://mgleon08.github.com/blog/2018/11/06/golang-reading-files/"/>
    <updated>2018-11-06T15:16:53+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/11/06/golang-reading-files</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><a href="#entire">Reading an entire file into memory </a></li>
<li><a href="#chunk">Reading a file in small chunks</a></li>
<li><a href="#line">Reading a file line by line</a></li>
</ul>


<h1><span id="entire"> Reading an entire file into memory </span></h1>

<p>Use <a href="https://golang.org/pkg/io/ioutil/">ioutil</a> package</p>

<ul>
<li><a href="https://golang.org/pkg/io/ioutil/#ReadFile">ReadFile</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 先建立檔案</span>
</span><span class='line'>
</span><span class='line'><span class="nx">filehandling</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">filehandling</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'><span class="err">└──</span> <span class="nx">test</span><span class="p">.</span><span class="nx">txt</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// filehandling.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;io/ioutil&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">data</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadFile</span><span class="p">(</span><span class="s">&quot;test.txt&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 當找不到 test file 時，會顯示此訊息</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;File reading error&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// return data 是 slice 透過 string 轉</span>
</span><span class='line'>    <span class="c1">// 或是改用 fmt.Printf(&quot;Contents of file: %s&quot;, data)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Contents of file:&quot;</span><span class="p">,</span> <span class="nb">string</span><span class="p">(</span><span class="nx">data</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>當你用 <code>go install</code> or <code>go build</code> 出 binary 的 file，file 移到不同位置就會找不到檔案，有幾種方式可以解決</p>

<h3>1. 用絕對路徑</h3>

<h3>2. 把路徑當參數，在執行檔案時傳入</h3>

<p>必須用到 <a href="https://golang.org/pkg/flag/">flag</a> package</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// flag.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;flag&quot;</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 第一個參數 flag name, 第二個 default value, 第三個 flag description</span>
</span><span class='line'>    <span class="nx">fptr</span> <span class="o">:=</span> <span class="nx">flag</span><span class="p">.</span><span class="nx">String</span><span class="p">(</span><span class="s">&quot;fpath&quot;</span><span class="p">,</span> <span class="s">&quot;test.txt&quot;</span><span class="p">,</span> <span class="s">&quot;file path to read from&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">// 必須先執行，parse flag</span>
</span><span class='line'>    <span class="nx">flag</span><span class="p">.</span><span class="nx">Parse</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;value of fpath is&quot;</span><span class="p">,</span> <span class="o">*</span><span class="nx">fptr</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">flag</span><span class="p">.</span><span class="k">go</span> <span class="o">-</span><span class="nx">fpath</span><span class="p">=</span><span class="o">/</span><span class="nx">path</span><span class="o">-</span><span class="nx">of</span><span class="o">-</span><span class="nx">file</span><span class="o">/</span><span class="nx">test</span><span class="p">.</span><span class="nx">txt</span>
</span></code></pre></td></tr></table></div></figure>


<p>更改後為</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;flag&quot;</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;io/ioutil&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fptr</span> <span class="o">:=</span> <span class="nx">flag</span><span class="p">.</span><span class="nx">String</span><span class="p">(</span><span class="s">&quot;fpath&quot;</span><span class="p">,</span> <span class="s">&quot;test.txt&quot;</span><span class="p">,</span> <span class="s">&quot;file path to read from&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">flag</span><span class="p">.</span><span class="nx">Parse</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">data</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadFile</span><span class="p">(</span><span class="o">*</span><span class="nx">fptr</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;File reading error&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Contents of file:&quot;</span><span class="p">,</span> <span class="nb">string</span><span class="p">(</span><span class="nx">data</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>在編譯的時候把檔案一起編譯進去</li>
</ol>


<p>可以透過 <a href="https://github.com/gobuffalo/packr">packr</a> package 來實現</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/gobuffalo/packr&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">box</span> <span class="o">:=</span> <span class="nx">packr</span><span class="p">.</span><span class="nx">NewBox</span><span class="p">(</span><span class="s">&quot;../filehandling&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">data</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">box</span><span class="p">.</span><span class="nx">FindString</span><span class="p">(</span><span class="s">&quot;test.txt&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Contents of file:&quot;</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 用 go 安裝，編譯成絕對路徑，因此任何地方都可以執行 filehandling</span>
</span><span class='line'><span class="c1">// 但是只要將 test.txt 刪除或改名，就會找不到</span>
</span><span class='line'><span class="k">go</span> <span class="nx">install</span> <span class="o">-</span><span class="nx">v</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 用 packr 安裝，則是連 file 也編譯進去，因此即使把檔案刪除也可以執行</span>
</span><span class='line'><span class="nx">packr</span> <span class="nx">install</span> <span class="o">-</span><span class="nx">v</span> <span class="nx">filehandling</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">building box ../filehandling</span>
</span><span class='line'><span class="cm">packing file filehandling.go</span>
</span><span class='line'><span class="cm">packed file filehandling.go</span>
</span><span class='line'><span class="cm">packing file test.txt</span>
</span><span class='line'><span class="cm">packed file test.txt</span>
</span><span class='line'><span class="cm">built box ../filehandling with [&quot;filehandling.go&quot; &quot;test.txt&quot;]</span>
</span><span class='line'><span class="cm">filehandling</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="chunk"> Reading a file in small chunks </span></h1>

<p>前面都是透過 memory 來一次讀取 file，但檔案太大，或是 memory 不夠的時候，就會導致錯誤，因此可以透過另一種方式來執行 <a href="https://golang.org/pkg/bufio/">bufio</a> 將檔案內容做分割</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;bufio&quot;</span>
</span><span class='line'>  <span class="s">&quot;flag&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;os&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 先透過 flag 讀取參數</span>
</span><span class='line'>  <span class="nx">fptr</span> <span class="o">:=</span> <span class="nx">flag</span><span class="p">.</span><span class="nx">String</span><span class="p">(</span><span class="s">&quot;fpath&quot;</span><span class="p">,</span> <span class="s">&quot;test.txt&quot;</span><span class="p">,</span> <span class="s">&quot;file path to read from&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// 解析參數</span>
</span><span class='line'>  <span class="nx">flag</span><span class="p">.</span><span class="nx">Parse</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 打開檔案</span>
</span><span class='line'>  <span class="nx">f</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Open</span><span class="p">(</span><span class="o">*</span><span class="nx">fptr</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// function 結束前關閉 file</span>
</span><span class='line'>  <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">err</span> <span class="p">=</span> <span class="nx">f</span><span class="p">.</span><span class="nx">Close</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="c1">// returns a new Reader whose buffer has the default size.</span>
</span><span class='line'>  <span class="nx">r</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nx">NewReader</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// 建立 byte slice，容量 3，用來一次讀取 3 個</span>
</span><span class='line'>  <span class="nx">b</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">byte</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">Read</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Error reading file:&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="nx">s</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="line"> Reading a file line by line </span></h1>

<p>上面是一次要讀取多少個字元，這次改用一行一行去做讀取，一樣用 <a href="https://golang.org/pkg/bufio/">bufio</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;bufio&quot;</span>
</span><span class='line'>  <span class="s">&quot;flag&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;os&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 先透過 flag 讀取參數</span>
</span><span class='line'>  <span class="nx">fptr</span> <span class="o">:=</span> <span class="nx">flag</span><span class="p">.</span><span class="nx">String</span><span class="p">(</span><span class="s">&quot;fpath&quot;</span><span class="p">,</span> <span class="s">&quot;test.txt&quot;</span><span class="p">,</span> <span class="s">&quot;file path to read from&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// 解析參數</span>
</span><span class='line'>  <span class="nx">flag</span><span class="p">.</span><span class="nx">Parse</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 打開檔案</span>
</span><span class='line'>  <span class="nx">f</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Open</span><span class="p">(</span><span class="o">*</span><span class="nx">fptr</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// function 結束前關閉 file</span>
</span><span class='line'>  <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">err</span> <span class="p">=</span> <span class="nx">f</span><span class="p">.</span><span class="nx">Close</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="c1">// 透過 Scanner 將一行一行印出</span>
</span><span class='line'>  <span class="nx">s</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nx">NewScanner</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">s</span><span class="p">.</span><span class="nx">Scan</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">Text</span><span class="p">())</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">err</span> <span class="p">=</span> <span class="nx">s</span><span class="p">.</span><span class="nx">Err</span><span class="p">()</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件:</p>

<ul>
<li><a href="https://golangbot.com/read-files/">golangbot - Reading Files</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Reflection]]></title>
    <link href="http://mgleon08.github.com/blog/2018/11/05/golang-reflection/"/>
    <updated>2018-11-05T15:16:41+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/11/05/golang-reflection</id>
    <content type="html"><![CDATA[<!-- more -->


<h1><span id="what"> What is reflection? </span></h1>

<p><a href="https://golang.org/pkg/reflect/">Reflection</a> 是 golang 中的一個 package，可以在執行時檢查變數和值，並找到其所屬的 type。</p>

<h3>reflect.Type and reflect.Value</h3>

<ul>
<li><code>reflect.Type</code> 可以表示 <code>interface{}</code> 具體的 type，透過 <a href="https://golang.org/pkg/reflect/#TypeOf">reflect.TypeOf()</a> 取得</li>
<li><code>reflect.Value</code> 可以表示 <code>interface{}</code> 底層的 value，透過 <a href="https://golang.org/pkg/reflect/#ValueOf">reflect.ValueOf()</a> 取得</li>
<li><code>reflect.Kind</code> 可以表示具體 type 的類型 <a href="https://golang.org/pkg/reflect/#Kind">reflect.Kind</a></li>
<li>以下範例可能會比較清楚</li>
</ul>


<p>Generalize query creator and make it work on any struct</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;reflect&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">order</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ordId</span>      <span class="kt">int</span>
</span><span class='line'>  <span class="nx">customerId</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// interface{} 意味著任何型態的值，因為裡面沒有任何 method，也代表所有 type 都 implement</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">createQuery</span><span class="p">(</span><span class="nx">q</span> <span class="kd">interface</span><span class="p">{})</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">t</span> <span class="o">:=</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">TypeOf</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">v</span> <span class="o">:=</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">ValueOf</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">k</span> <span class="o">:=</span> <span class="nx">t</span><span class="p">.</span><span class="nx">Kind</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Type &quot;</span><span class="p">,</span> <span class="nx">t</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Value &quot;</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Kind &quot;</span><span class="p">,</span> <span class="nx">k</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">o</span> <span class="o">:=</span> <span class="nx">order</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">ordId</span><span class="p">:</span>      <span class="mi">456</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">customerId</span><span class="p">:</span> <span class="mi">56</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">createQuery</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Type  main.order</span>
</span><span class='line'><span class="c1">//Value  {456 56}</span>
</span><span class='line'><span class="c1">//Kind  struct</span>
</span></code></pre></td></tr></table></div></figure>


<h3>NumField() and Field() methods</h3>

<ul>
<li><code>NumField()</code> 用來算出 reflect.Value 裡的數量</li>
<li><code>Field()</code> 用來取出 reflect.Value 的值</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;reflect&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">order</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">ordId</span>      <span class="kt">int</span>
</span><span class='line'>    <span class="nx">customerId</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">createQuery</span><span class="p">(</span><span class="nx">q</span> <span class="kd">interface</span><span class="p">{})</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">ValueOf</span><span class="p">(</span><span class="nx">q</span><span class="p">).</span><span class="nx">Kind</span><span class="p">()</span> <span class="o">==</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">Struct</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">v</span> <span class="o">:=</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">ValueOf</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Number of fields&quot;</span><span class="p">,</span> <span class="nx">v</span><span class="p">.</span><span class="nx">NumField</span><span class="p">())</span>
</span><span class='line'>        <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">v</span><span class="p">.</span><span class="nx">NumField</span><span class="p">();</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Field:%d type:%T value:%v\n&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">v</span><span class="p">.</span><span class="nx">Field</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span> <span class="nx">v</span><span class="p">.</span><span class="nx">Field</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">o</span> <span class="o">:=</span> <span class="nx">order</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">ordId</span><span class="p">:</span>      <span class="mi">456</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">customerId</span><span class="p">:</span> <span class="mi">56</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">createQuery</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Int() and String() methods</h3>

<ul>
<li>The methods Int and String help extract the reflect.Value as an int64 and string respectively.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;reflect&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">a</span> <span class="o">:=</span> <span class="mi">56</span>
</span><span class='line'>    <span class="nx">x</span> <span class="o">:=</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">ValueOf</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">Int</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;type:%T value:%v\n&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">x</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">b</span> <span class="o">:=</span> <span class="s">&quot;Naveen&quot;</span>
</span><span class='line'>    <span class="nx">y</span> <span class="o">:=</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">ValueOf</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">String</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;type:%T value:%v\n&quot;</span><span class="p">,</span> <span class="nx">y</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// type:int64 value:56</span>
</span><span class='line'><span class="c1">// type:string value:Naveen</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Complete Generalize query creator</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;reflect&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">order</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">ordId</span>      <span class="kt">int</span>
</span><span class='line'>    <span class="nx">customerId</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">employee</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">name</span>    <span class="kt">string</span>
</span><span class='line'>    <span class="nx">id</span>      <span class="kt">int</span>
</span><span class='line'>    <span class="nx">address</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">salary</span>  <span class="kt">int</span>
</span><span class='line'>    <span class="nx">country</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">createQuery</span><span class="p">(</span><span class="nx">q</span> <span class="kd">interface</span><span class="p">{})</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 先判斷 q 是否為 struct</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">ValueOf</span><span class="p">(</span><span class="nx">q</span><span class="p">).</span><span class="nx">Kind</span><span class="p">()</span> <span class="o">==</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">Struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 取得具體 type，並提取該名稱</span>
</span><span class='line'>      <span class="c1">// main.order -&gt; order</span>
</span><span class='line'>      <span class="c1">// main.employee -&gt; employee</span>
</span><span class='line'>        <span class="nx">t</span> <span class="o">:=</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">TypeOf</span><span class="p">(</span><span class="nx">q</span><span class="p">).</span><span class="nx">Name</span><span class="p">()</span>
</span><span class='line'>        <span class="nx">query</span> <span class="o">:=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;insert into %s values(&quot;</span><span class="p">,</span> <span class="nx">t</span><span class="p">)</span>
</span><span class='line'>      <span class="c1">// 取得 value</span>
</span><span class='line'>        <span class="nx">v</span> <span class="o">:=</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">ValueOf</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span>
</span><span class='line'>      <span class="c1">// v.NumField() 取得數量去做迴圈</span>
</span><span class='line'>        <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">v</span><span class="p">.</span><span class="nx">NumField</span><span class="p">();</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">switch</span> <span class="nx">v</span><span class="p">.</span><span class="nx">Field</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">Kind</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">case</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">Int</span><span class="p">:</span>
</span><span class='line'>                <span class="k">if</span> <span class="nx">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                  <span class="c1">// 第一個不需接 ,</span>
</span><span class='line'>                    <span class="nx">query</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s%d&quot;</span><span class="p">,</span> <span class="nx">query</span><span class="p">,</span> <span class="nx">v</span><span class="p">.</span><span class="nx">Field</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">Int</span><span class="p">())</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">query</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s, %d&quot;</span><span class="p">,</span> <span class="nx">query</span><span class="p">,</span> <span class="nx">v</span><span class="p">.</span><span class="nx">Field</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">Int</span><span class="p">())</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="k">case</span> <span class="nx">reflect</span><span class="p">.</span><span class="nx">String</span><span class="p">:</span>
</span><span class='line'>                <span class="k">if</span> <span class="nx">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                  <span class="c1">// 第一個不需接 ,</span>
</span><span class='line'>                    <span class="nx">query</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s\&quot;%s\&quot;&quot;</span><span class="p">,</span> <span class="nx">query</span><span class="p">,</span> <span class="nx">v</span><span class="p">.</span><span class="nx">Field</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">String</span><span class="p">())</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">query</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s, \&quot;%s\&quot;&quot;</span><span class="p">,</span> <span class="nx">query</span><span class="p">,</span> <span class="nx">v</span><span class="p">.</span><span class="nx">Field</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">String</span><span class="p">())</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="k">default</span><span class="p">:</span>
</span><span class='line'>                <span class="c1">// 這個只處理 int &amp; string 不符合就 return</span>
</span><span class='line'>                <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Unsupported type&quot;</span><span class="p">)</span>
</span><span class='line'>                <span class="k">return</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="c1">// 最後結尾在加上 )</span>
</span><span class='line'>        <span class="nx">query</span> <span class="p">=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s)&quot;</span><span class="p">,</span> <span class="nx">query</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="c1">// 如果參數不是 struct 就會顯示</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;unsupported type&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">o</span> <span class="o">:=</span> <span class="nx">order</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">ordId</span><span class="p">:</span>      <span class="mi">456</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">customerId</span><span class="p">:</span> <span class="mi">56</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">createQuery</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">e</span> <span class="o">:=</span> <span class="nx">employee</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">name</span><span class="p">:</span>    <span class="s">&quot;Naveen&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">id</span><span class="p">:</span>      <span class="mi">565</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">address</span><span class="p">:</span> <span class="s">&quot;Coimbatore&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">salary</span><span class="p">:</span>  <span class="mi">90000</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">country</span><span class="p">:</span> <span class="s">&quot;India&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">createQuery</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">i</span> <span class="o">:=</span> <span class="mi">90</span>
</span><span class='line'>    <span class="nx">createQuery</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Should reflection be used?</h1>

<blockquote><p>Rob Pike: Clear is better than clever. Reflection is never clear.</p></blockquote>

<p>結論是 reflection 是非常強大且高級的技巧，但是難以寫的乾淨或是很好維護，所以作者是建議盡量可以避免，除非真的有需要的話</p>

<p>參考文件</p>

<ul>
<li><a href="https://golangbot.com/reflection/">golangbot.com Part 34: Reflection</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[簡單理解 CDN 原理]]></title>
    <link href="http://mgleon08.github.com/blog/2018/10/29/understand-cdn/"/>
    <updated>2018-10-29T15:06:53+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/10/29/understand-cdn</id>
    <content type="html"><![CDATA[<p>近期遇到 CDN 的問題，順便瞭解一下 CDN 整個運作模式</p>

<!-- more -->


<p>原先以為 CDN 會自動做快取直到我們去 purge CDN，但實際上 CDN 是會根據 <code>Response Headers</code> 的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cache-control: max-age=60, public</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails 中設定 max-age 的方式</span>
</span><span class='line'><span class="n">expires_in</span> <span class="mi">1</span><span class="o">.</span><span class="n">minutes</span><span class="p">,</span> <span class="kp">public</span><span class="p">:</span> <span class="kp">true</span> <span class="c1"># public</span>
</span><span class='line'><span class="n">expires_in</span> <span class="mi">5</span><span class="o">.</span><span class="n">minutes</span> <span class="c1"># private</span>
</span></code></pre></td></tr></table></div></figure>


<p>去做對應的 cache (必須用 public)，另外做了 <code>max-age</code> 之後，不只 CDN 會有設定，使用者的瀏覽器也會有設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">server</span> <span class="o">-&gt;</span> <span class="no">CDN</span> <span class="o">-&gt;</span> <span class="no">Browser</span>
</span><span class='line'><span class="mi">60</span>         <span class="mi">60</span>       <span class="mi">60</span>
</span></code></pre></td></tr></table></div></figure>


<p>因此如果設定 <code>max-age</code> 60 秒</p>

<ul>
<li>CDN cache 60 秒，在這 60 秒就不會再打 server，直到 60秒過 or <code>purge CDN</code></li>
<li>Browser cache 60 秒，在這 60 秒就不會再打 CDN，直到 60秒過 or <code>clear browser cache</code></li>
</ul>


<blockquote><p>這邊有個重點，當測試的時候，必須開不同的 browser 去做測試，不然直接打 CDN 跟 HTML 打 API 的 url cache 會同步</p></blockquote>

<h1>cache-control</h1>

<blockquote><p>HTTP 1.1 才出現 Cache-Control</p></blockquote>

<p>接著再根據 cache-control 瞭解一下行為，當 browser 設定</p>

<h3>max-age</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cache</span><span class="o">-</span><span class="ss">control</span><span class="p">:</span> <span class="n">max</span><span class="o">-</span><span class="n">age</span><span class="o">=</span><span class="mi">60</span><span class="p">,</span> <span class="kp">public</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第一次訪問，200</li>
<li>第二次訪問時，則會顯示 200(from cache)，後來 google 有更新，就有分 <code>from disk cache(磁盤緩存)</code> 和 <code>from memory cache(內存緩存)</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Status</span> <span class="ss">Code</span><span class="p">:</span> <span class="mi">200</span>  <span class="p">(</span><span class="n">from</span> <span class="n">disk</span> <span class="n">cache</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 記得必須是用 code 去呼叫才會，不是直接打 api，之前測試直接打會變成 304，改用 script 成功了</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>但什麼時候是哪種緩存，目前看起來是會根據 google 來判斷 <a href="https://www.zhihu.com/question/64201378">求教大神瀏覽器是根據什麼決定from disk cache 與 from memory cache？</a></li>
<li>如果有 expires(HTTP1.0) 也存在的話，max-age 會蓋過 expires</li>
</ul>


<blockquote><p>「public」和「private」
如果回應標記為「public」，即使具備關聯的 HTTP 認證，甚至回應狀態碼無法正常快取，回應也可以供使用者快取。在大多數情況下，「public」並不是必要項目，因為明確的快取資訊 (例如「max-age」) 已表示 回應可供快取。</p>

<p>另一方面，瀏覽器可以快取「private」回應，但是通常只開放給單一使用者快取，因此不允許任何中繼快取對其進行快取，例如使用者瀏覽器可以快取包含使用者私人資訊的 HTML 網頁，但是 CDN 不能快取。
<a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=zh-tw">HTTP 快取</a></p></blockquote>

<h3>no-cache</h3>

<p>當設定以下 <code>no-cache</code>，代表每次都會發送 Request 去確認是否有新的檔案，沒有就會  return <code>304</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cache</span><span class="o">-</span><span class="ss">control</span><span class="p">:</span> <span class="n">no</span><span class="o">-</span><span class="n">cache</span>
</span><span class='line'><span class="c1"># 相當於 cache-control: max-age=0</span>
</span></code></pre></td></tr></table></div></figure>


<h3>no-store</h3>

<p>當設定以下 <code>no-store</code>，代表完全不使用快取</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cache</span><span class="o">-</span><span class="ss">control</span><span class="p">:</span> <span class="n">no</span><span class="o">-</span><span class="n">store</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Purge CDN</h1>

<p>通常廠商會提供一隻 API，可以做 purge CDN 的動作，當資料有更新時就可以透過這支 API 把 CDN 清除，讓它重新跟 server 拉取，但有個重點是，<code>max-age</code> 就不能夠設定太長，太長會導致 brower 那邊一直 cache 舊的，即使我們 purge 掉 CDN，brower 也是會等到 <code>max-age</code> 時間到，才會重新去拉 CDN。</p>

<h1>params cache object</h1>

<p>一開始 url 本來是希望帶 params 的方式做 cache，在測試的時候發現，雖然可以做 cache，但在 purge 的時候卻無法清除，看 log 發現顯示 <code>none cache-existing</code>
代表根本沒有清掉 cache，詢問了 cdn 的廠商，原來要有帶 params 的 url，當作是 unique object 算是特殊需求，要另外開啟。</p>

<p>但這家開啟後，萬一之後要換別家，會不會別家沒有支援或是要另外開啟? 所以後來還是改用 <code>path_params</code> 的方式，以防換別家的時候又會有問題</p>

<h1>File Extension</h1>

<p>CDN cache 是根據整個 url，包括副檔名，因此 <code>http://localhost:3000/test.js</code> 和 <code>http://localhost:3000/test.json</code> 會是不同的 url，purge 時也必須指定對應的 url 才能夠 purge</p>

<h1>http/https</h1>

<p>purge 的 url 必須要打一開始設定的 url，<code>http/https</code> 會有差別，如果設定的是 <code>http</code> 就必須針對 <code>http</code> 去做 purge 而不是 <code>https</code></p>

<p>參考文件:</p>

<ul>
<li><a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=zh-tw">HTTP 快取</a></li>
<li><a href="https://cythilya.github.io/2018/07/27/http-caching/?fbclid=IwAR1jJfxG2o25i06Pqueb8yE0copC4VSJpbXmr4lG76wPTcDQzGa7ncE6iTk">HTTP Caching</a></li>
<li><a href="https://blog.techbridge.cc/2017/06/17/cache-introduction/">循序漸進理解 HTTP Cache 機制</a></li>
<li><a href="https://excaliburhan.com/post/things-you-should-know-about-browser-cache.html">你應該知道的瀏覽器緩存知識</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - OOP, Composition, Polymorphism]]></title>
    <link href="http://mgleon08.github.com/blog/2018/10/19/golang-oop-composition-polymorphism/"/>
    <updated>2018-10-19T22:43:55+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/10/19/golang-oop-composition-polymorphism</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><a href="#oop">object oriented programming</a></li>
<li><a href="#composition">Composition</a></li>
<li><a href="#polymorphism">Polymorphism</a></li>
</ul>


<h1><span id="oop"> object oriented programming </span></h1>

<p>golang 本身並不是純的 OOP，在官網也有寫道 <a href="https://golang.org/doc/faq#Is_Go_an_object-oriented_language">Is Go an object-oriented language?</a></p>

<p>但可以透過 golang 的 <code>struct</code> &amp; <code>method</code> 表現的跟其他語言的 class 類似</p>

<h3>Structs Instead of Classes</h3>

<p>這裡的 <code>employee.go</code> 就像是 class 一樣，在 <code>main.go</code> 裡面可以使用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">oop</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">employee</span>
</span><span class='line'><span class="err">│</span>   <span class="err">└──</span> <span class="nx">employee</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'><span class="err">└──</span> <span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// employee.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">employee</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Employee</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">FirstName</span>   <span class="kt">string</span>
</span><span class='line'>    <span class="nx">LastName</span>    <span class="kt">string</span>
</span><span class='line'>    <span class="nx">TotalLeaves</span> <span class="kt">int</span>
</span><span class='line'>    <span class="nx">LeavesTaken</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">e</span> <span class="nx">Employee</span><span class="p">)</span> <span class="nx">LeavesRemaining</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s %s has %d leaves remaining&quot;</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">FirstName</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">LastName</span><span class="p">,</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">TotalLeaves</span> <span class="o">-</span> <span class="nx">e</span><span class="p">.</span><span class="nx">LeavesTaken</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// main.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;oop/employee&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">e</span> <span class="o">:=</span> <span class="nx">employee</span><span class="p">.</span><span class="nx">Employee</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">FirstName</span><span class="p">:</span> <span class="s">&quot;Sam&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">LastName</span><span class="p">:</span> <span class="s">&quot;Adolf&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">TotalLeaves</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">LeavesTaken</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">e</span><span class="p">.</span><span class="nx">LeavesRemaining</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>New() function instead of constructors</h3>

<p>如果上面改成以下，並不會報錯，會顯示 <code>has 0 leaves remaining</code> 但是這並不是正確的，因為人名都不見了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// main.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;oop/employee&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">e</span> <span class="nx">employee</span><span class="p">.</span><span class="nx">Employee</span>
</span><span class='line'>    <span class="nx">e</span><span class="p">.</span><span class="nx">LeavesRemaining</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>為了防止這樣，因此我們可以透過 <code>func</code> 建立類似 <code>建構子 constructors</code> 的方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// employee.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">employee</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 改成小寫，因為只需要內部使用</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">employee</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">firstName</span>   <span class="kt">string</span>
</span><span class='line'>    <span class="nx">lastName</span>    <span class="kt">string</span>
</span><span class='line'>    <span class="nx">totalLeaves</span> <span class="kt">int</span>
</span><span class='line'>    <span class="nx">leavesTaken</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 大寫，讓外部要呼叫只能透過 New()</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">New</span><span class="p">(</span><span class="nx">firstName</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">lastName</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">totalLeave</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">leavesTaken</span> <span class="kt">int</span><span class="p">)</span> <span class="nx">employee</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">e</span> <span class="o">:=</span> <span class="nx">employee</span> <span class="p">{</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">totalLeave</span><span class="p">,</span> <span class="nx">leavesTaken</span><span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">e</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">e</span> <span class="nx">employee</span><span class="p">)</span> <span class="nx">LeavesRemaining</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s %s has %d leaves remaining&quot;</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">lastName</span><span class="p">,</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">totalLeaves</span> <span class="o">-</span> <span class="nx">e</span><span class="p">.</span><span class="nx">leavesTaken</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// main.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;oop/employee&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">e</span> <span class="o">:=</span> <span class="nx">employee</span><span class="p">.</span><span class="nx">New</span><span class="p">(</span><span class="s">&quot;Sam&quot;</span><span class="p">,</span> <span class="s">&quot;Adolf&quot;</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">e</span><span class="p">.</span><span class="nx">LeavesRemaining</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="composition"> Composition </span></h1>

<p>go 並不支援繼承(Inheritance)，但支援組合(Composition)，透過 <code>embedding structs</code> 來達成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">author</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">firstName</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">lastName</span>  <span class="kt">string</span>
</span><span class='line'>    <span class="nx">bio</span>       <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">a</span> <span class="nx">author</span><span class="p">)</span> <span class="nx">fullName</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s %s&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">.</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">a</span><span class="p">.</span><span class="nx">lastName</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">post</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span>     <span class="kt">string</span>
</span><span class='line'>    <span class="nx">content</span>   <span class="kt">string</span>
</span><span class='line'>    <span class="nx">author</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="nx">post</span><span class="p">)</span> <span class="nx">details</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Title: &quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">title</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Content: &quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">content</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Author: &quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">author</span><span class="p">.</span><span class="nx">fullName</span><span class="p">())</span>
</span><span class='line'>    <span class="c1">// 這裡就是透過 embedding structs，也可以改寫成 p.fullName()，因為 fullName 並沒有跟 post 裡的 method 衝突到</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Bio: &quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">author</span><span class="p">.</span><span class="nx">bio</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">author1</span> <span class="o">:=</span> <span class="nx">author</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Naveen&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Ramanathan&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Golang Enthusiast&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">post1</span> <span class="o">:=</span> <span class="nx">post</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Inheritance in Go&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Go supports composition instead of inheritance&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">author1</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">post1</span><span class="p">.</span><span class="nx">details</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Embedding slice of structs</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">author</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">firstName</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">lastName</span>  <span class="kt">string</span>
</span><span class='line'>    <span class="nx">bio</span>       <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">a</span> <span class="nx">author</span><span class="p">)</span> <span class="nx">fullName</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%s %s&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">.</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">a</span><span class="p">.</span><span class="nx">lastName</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">post</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span>   <span class="kt">string</span>
</span><span class='line'>    <span class="nx">content</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">author</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="nx">post</span><span class="p">)</span> <span class="nx">details</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Title: &quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">title</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Content: &quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">content</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Author: &quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">fullName</span><span class="p">())</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Bio: &quot;</span><span class="p">,</span> <span class="nx">p</span><span class="p">.</span><span class="nx">bio</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">website</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'> <span class="nx">posts</span> <span class="p">[]</span><span class="nx">post</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">w</span> <span class="nx">website</span><span class="p">)</span> <span class="nx">contents</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Contents of Website&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">v</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">w</span><span class="p">.</span><span class="nx">posts</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">v</span><span class="p">.</span><span class="nx">details</span><span class="p">()</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">author1</span> <span class="o">:=</span> <span class="nx">author</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Naveen&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Ramanathan&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Golang Enthusiast&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">post1</span> <span class="o">:=</span> <span class="nx">post</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Inheritance in Go&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Go supports composition instead of inheritance&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">author1</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">post2</span> <span class="o">:=</span> <span class="nx">post</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Struct instead of Classes in Go&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Go does not support classes but methods can be added to structs&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">author1</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">post3</span> <span class="o">:=</span> <span class="nx">post</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Concurrency&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;Go is a concurrent language and not a parallel one&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">author1</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">w</span> <span class="o">:=</span> <span class="nx">website</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">posts</span><span class="p">:</span> <span class="p">[]</span><span class="nx">post</span><span class="p">{</span><span class="nx">post1</span><span class="p">,</span> <span class="nx">post2</span><span class="p">,</span> <span class="nx">post3</span><span class="p">},</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">w</span><span class="p">.</span><span class="nx">contents</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="polymorphism"> Polymorphism </span></h1>

<p>go 要達成多態，必須透過 interface 來實現，只要有 type 實作了 interface 的 function，就可以說這個 type 實作了這個 interface，因此透過這個特性，就能達成 Polymorphism</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Income</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">calculate</span><span class="p">()</span> <span class="kt">int</span>
</span><span class='line'>    <span class="nx">source</span><span class="p">()</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">FixedBilling</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">projectName</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">biddedAmount</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">TimeAndMaterial</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">projectName</span> <span class="kt">string</span>
</span><span class='line'>    <span class="nx">noOfHours</span>  <span class="kt">int</span>
</span><span class='line'>    <span class="nx">hourlyRate</span> <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// FixedBilling 實作 interface 的 calculate() &amp; source()</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">fb</span> <span class="nx">FixedBilling</span><span class="p">)</span> <span class="nx">calculate</span><span class="p">()</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">fb</span><span class="p">.</span><span class="nx">biddedAmount</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">fb</span> <span class="nx">FixedBilling</span><span class="p">)</span> <span class="nx">source</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">fb</span><span class="p">.</span><span class="nx">projectName</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// TimeAndMaterial 實作 interface 的 calculate() &amp; source()</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">tm</span> <span class="nx">TimeAndMaterial</span><span class="p">)</span> <span class="nx">calculate</span><span class="p">()</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">tm</span><span class="p">.</span><span class="nx">noOfHours</span> <span class="o">*</span> <span class="nx">tm</span><span class="p">.</span><span class="nx">hourlyRate</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">tm</span> <span class="nx">TimeAndMaterial</span><span class="p">)</span> <span class="nx">source</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">tm</span><span class="p">.</span><span class="nx">projectName</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ic 只接收實作了 Income interface 的 type，達成 Polymorphism</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">calculateNetIncome</span><span class="p">(</span><span class="nx">ic</span> <span class="p">[]</span><span class="nx">Income</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">netincome</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">income</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">ic</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Income From %s = $%d\n&quot;</span><span class="p">,</span> <span class="nx">income</span><span class="p">.</span><span class="nx">source</span><span class="p">(),</span> <span class="nx">income</span><span class="p">.</span><span class="nx">calculate</span><span class="p">())</span>
</span><span class='line'>        <span class="nx">netincome</span> <span class="o">+=</span> <span class="nx">income</span><span class="p">.</span><span class="nx">calculate</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Net income of organisation = $%d&quot;</span><span class="p">,</span> <span class="nx">netincome</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">project1</span> <span class="o">:=</span> <span class="nx">FixedBilling</span><span class="p">{</span><span class="nx">projectName</span><span class="p">:</span> <span class="s">&quot;Project 1&quot;</span><span class="p">,</span> <span class="nx">biddedAmount</span><span class="p">:</span> <span class="mi">5000</span><span class="p">}</span>
</span><span class='line'>    <span class="nx">project2</span> <span class="o">:=</span> <span class="nx">FixedBilling</span><span class="p">{</span><span class="nx">projectName</span><span class="p">:</span> <span class="s">&quot;Project 2&quot;</span><span class="p">,</span> <span class="nx">biddedAmount</span><span class="p">:</span> <span class="mi">10000</span><span class="p">}</span>
</span><span class='line'>    <span class="nx">project3</span> <span class="o">:=</span> <span class="nx">TimeAndMaterial</span><span class="p">{</span><span class="nx">projectName</span><span class="p">:</span> <span class="s">&quot;Project 3&quot;</span><span class="p">,</span> <span class="nx">noOfHours</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="nx">hourlyRate</span><span class="p">:</span> <span class="mi">25</span><span class="p">}</span>
</span><span class='line'>    <span class="nx">incomeStreams</span> <span class="o">:=</span> <span class="p">[]</span><span class="nx">Income</span><span class="p">{</span><span class="nx">project1</span><span class="p">,</span> <span class="nx">project2</span><span class="p">,</span> <span class="nx">project3</span><span class="p">}</span>
</span><span class='line'>    <span class="nx">calculateNetIncome</span><span class="p">(</span><span class="nx">incomeStreams</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://golangbot.com/learn-golang-series/">golangbot.com</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drone]]></title>
    <link href="http://mgleon08.github.com/blog/2018/09/17/drone/"/>
    <updated>2018-09-17T11:25:36+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/09/17/drone</id>
    <content type="html"><![CDATA[<p>透過 drone 可以很輕易的自己架設一個 CI CD server</p>

<!-- more -->


<blockquote><p>Drone 是一套基於 Docker 容器技術的持續交付平台。</p></blockquote>

<h3>dockerfile</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">version</span><span class="p">:</span> <span class="s1">&#39;3&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">services</span><span class="p">:</span>
</span><span class='line'>  <span class="n">drone</span><span class="o">-</span><span class="ss">server</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">image</span><span class="p">:</span> <span class="n">drone</span><span class="o">/</span><span class="ss">drone</span><span class="p">:</span><span class="mi">0</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">5</span>
</span><span class='line'>    <span class="ss">container_name</span><span class="p">:</span> <span class="n">drone</span><span class="o">-</span><span class="n">server</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="mi">80</span><span class="p">:</span><span class="mi">8000</span>
</span><span class='line'>      <span class="o">-</span> <span class="mi">9000</span>
</span><span class='line'>    <span class="ss">volumes</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="o">.</span><span class="n">/</span><span class="ss">db</span><span class="p">:</span><span class="sr">/var/</span><span class="n">lib</span><span class="o">/</span><span class="n">drone</span><span class="o">/</span>
</span><span class='line'>    <span class="ss">restart</span><span class="p">:</span> <span class="n">always</span>
</span><span class='line'>    <span class="ss">environment</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_OPEN</span><span class="o">=</span><span class="kp">true</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_HOST</span><span class="o">=</span><span class="err">$</span><span class="p">{</span><span class="no">DRONE_HOST</span><span class="p">}</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_GITHUB</span><span class="o">=</span><span class="kp">true</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_GITHUB_CLIENT</span><span class="o">=</span><span class="err">$</span><span class="p">{</span><span class="no">DRONE_GITHUB_CLIENT</span><span class="p">}</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_GITHUB_SECRET</span><span class="o">=</span><span class="err">$</span><span class="p">{</span><span class="no">DRONE_GITHUB_SECRET</span><span class="p">}</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_SECRET</span><span class="o">=</span><span class="err">$</span><span class="p">{</span><span class="no">DRONE_SECRET</span><span class="p">}</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_ADMIN</span><span class="o">=</span><span class="n">leon</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_ORGS</span><span class="o">=</span><span class="nb">test</span> <span class="c1"># Organization 名稱</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_DEBUG</span><span class="o">=</span><span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">drone</span><span class="o">-</span><span class="ss">agent</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">image</span><span class="p">:</span> <span class="n">drone</span><span class="o">/</span><span class="ss">agent</span><span class="p">:</span><span class="mi">0</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">5</span>
</span><span class='line'>    <span class="ss">command</span><span class="p">:</span> <span class="n">agent</span>
</span><span class='line'>    <span class="ss">restart</span><span class="p">:</span> <span class="n">always</span>
</span><span class='line'>    <span class="ss">depends_on</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="n">drone</span><span class="o">-</span><span class="n">server</span>
</span><span class='line'>    <span class="ss">scale</span><span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>    <span class="ss">volumes</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="sr">/var/</span><span class="n">run</span><span class="o">/</span><span class="n">docker</span><span class="o">.</span><span class="n">sock</span><span class="ss">:/</span><span class="n">var</span><span class="o">/</span><span class="n">run</span><span class="o">/</span><span class="n">docker</span><span class="o">.</span><span class="n">sock</span>
</span><span class='line'>    <span class="ss">environment</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_SERVER</span><span class="o">=</span><span class="n">drone</span><span class="o">-</span><span class="ss">server</span><span class="p">:</span><span class="mi">9000</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_SECRET</span><span class="o">=</span><span class="err">$</span><span class="p">{</span><span class="no">DRONE_SECRET</span><span class="p">}</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_MAX_PROCS</span><span class="o">=</span><span class="mi">3</span>
</span><span class='line'>      <span class="o">-</span> <span class="no">DRONE_DEBUG</span><span class="o">=</span><span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h3>.drone.yml</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># 所有流程共享一個 workspace</span>
</span><span class='line'><span class="l-Scalar-Plain">workspace</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">base</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/rails</span> <span class="c1"># 所有步驟都可以存取此目錄資料</span>
</span><span class='line'>  <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">src/github.com/mgleon08/project</span> <span class="c1"># 所有指令都在此目錄執行</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># pull git 下來</span>
</span><span class='line'><span class="l-Scalar-Plain">clone</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">git</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">plugins/git:next</span>
</span><span class='line'>    <span class="l-Scalar-Plain">pull</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>    <span class="l-Scalar-Plain">depth</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">tags</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span> <span class="c1"># 將 tag 一起拉下來</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">pipeline</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="c1"># 將一些不需要重複 build 的檔案 cache 起來 e.g. gem, node_module</span>
</span><span class='line'>  <span class="l-Scalar-Plain">restore-cache</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">drillster/drone-volume-cache</span>
</span><span class='line'>    <span class="l-Scalar-Plain">restore</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>    <span class="l-Scalar-Plain">mount</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./vendor</span>
</span><span class='line'>    <span class="c1"># Mount the cache volume, needs &quot;Trusted&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">/tmp/cache:/cache</span>
</span><span class='line'>    <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">local</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">install</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby:2.5</span>
</span><span class='line'>    <span class="l-Scalar-Plain">pull</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">RAILS_ENV=test</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">RAKE_ENV=test</span>
</span><span class='line'>    <span class="l-Scalar-Plain">commands</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">ruby -v</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">gem -v</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># bundle，檔案位置設定在 vendor/bundle</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># config</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">cp config/database.ci.yml config/database.yml</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># setup secrets and db migration</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rails -v</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rake generate:secrets --trace</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rake db:create db:migrate --trace</span>
</span><span class='line'>    <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">local</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">rubocop</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby:2.5</span>
</span><span class='line'>    <span class="l-Scalar-Plain">group</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">testing</span> <span class="c1"># 同一個 group 可同時執行，平行測試</span>
</span><span class='line'>    <span class="l-Scalar-Plain">commands</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rubocop -c .rubocop.yml || true</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rubocop -c .rubocop.yml --format=json --out=rubocop-result.json || true</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">flay</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby:2.5</span>
</span><span class='line'>    <span class="l-Scalar-Plain">group</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">testing</span>
</span><span class='line'>    <span class="l-Scalar-Plain">commands</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec flay app</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">rspec</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby:2.5</span>
</span><span class='line'>    <span class="l-Scalar-Plain">group</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">testing</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">RAILS_ENV=test</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">RAKE_ENV=test</span>
</span><span class='line'>    <span class="l-Scalar-Plain">commands</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rspec --color --tag ~@feature</span>
</span><span class='line'>    <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">local</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">rebuild-cache</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">drillster/drone-volume-cache</span>
</span><span class='line'>    <span class="l-Scalar-Plain">group</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">cleanup</span>
</span><span class='line'>    <span class="l-Scalar-Plain">rebuild</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>    <span class="l-Scalar-Plain">mount</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">./vendor</span>
</span><span class='line'>    <span class="c1"># Mount the cache volume, needs &quot;Trusted&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">/tmp/cache:/cache</span>
</span><span class='line'>    <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">local</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">notify</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">plugins/slack</span>
</span><span class='line'>    <span class="l-Scalar-Plain">secrets</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span> <span class="nv">slack_webhook</span> <span class="p-Indicator">]</span> <span class="c1"># 在 drone 介面上設定環境變數 secrets</span>
</span><span class='line'>    <span class="l-Scalar-Plain">channel</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">channel_name</span>
</span><span class='line'>    <span class="l-Scalar-Plain">username</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Drone CI</span>
</span><span class='line'>    <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">status</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span> <span class="nv">success</span><span class="p-Indicator">,</span> <span class="nv">failure</span> <span class="p-Indicator">]</span> <span class="c1"># 成功或失敗都通知訊息</span>
</span><span class='line'>      <span class="l-Scalar-Plain">local</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># database.yml 裡面的 database 要跟下面定義的名字一樣，這邊也是叫 database</span>
</span><span class='line'><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mysql:5.7</span>
</span><span class='line'>    <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span> <span class="c1"># 全域變數</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">MYSQL_ALLOW_EMPTY_PASSWORD=yes</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://yeasy.gitbooks.io/docker_practice/cases/ci/drone.html">Build Drone</a></li>
<li><a href="http://docs.drone.io/zh/">docs drone</a></li>
<li><a href="http://plugins.drone.io/">plugins.drone.io</a></li>
<li><a href="https://www.slideshare.net/appleboy/drone-79506886">用 Drone 打造輕量級容器持續交付平台</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript 30 天挑戰]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/29/javascript30-challenge/"/>
    <updated>2018-07-29T21:49:28+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/29/javascript30-challenge</id>
    <content type="html"><![CDATA[<p><img src="https://mgleon08.github.io/JavaScript30/thumbnail.png" alt="" /></p>

<!-- more -->


<p>跟著 WesBos 一起挑戰 JavaScript30</p>

<ul>
<li><a href="https://github.com/wesbos/JavaScript30">wesbos github</a></li>
<li><a href="https://javascript30.com/">javascript30.com</a></li>
</ul>


<h1>List</h1>

<table>
<thead>
<tr>
<th> Day </th>
<th> Challenge </th>
<th> Demo </th>
<th> GitHub </th>
</tr>
</thead>
<tbody>
<tr>
<td> 001 </td>
<td> JavaScript Drum Kit </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/001.JavaScript-Drum-Kit/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/001.JavaScript-Drum-Kit">GitHub</a></td>
</tr>
<tr>
<td> 002 </td>
<td> CSS + JS Clock </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/002.CSS+JS-Clock/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/002.CSS%2BJS-Clock">Github</a> </td>
</tr>
<tr>
<td> 003 </td>
<td> Playing with CSS Variables and JS </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/003.Playing-with-CSS-Variables-and-JS/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/003.Playing-with-CSS-Variables-and-JS">Github</a> </td>
</tr>
<tr>
<td> 004 </td>
<td> Array Cardio Day 1 </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/004.Array-Cardio-Day-1/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/004.Array-Cardio-Day-1">Github</a> </td>
</tr>
<tr>
<td> 005 </td>
<td> Flex Panels Image Gallery </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/005.Flex-Panels-Image-Gallery/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/005.Flex-Panels-Image-Gallery">Github</a> </td>
</tr>
<tr>
<td> 006 </td>
<td> Ajax Type Ahead </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/006.Ajax-Type-Ahead/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/006.Ajax-Type-Ahead">Github</a> </td>
</tr>
<tr>
<td> 007 </td>
<td> Array Cardio Day 2 </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/007.Array-Cardio-Day-2/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/007.Array-Cardio-Day-2">Github</a></td>
</tr>
<tr>
<td> 008 </td>
<td> Fun with HTML5 Canvas </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/008.Fun-with-HTML5-Canvas/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/008.Fun-with-HTML5-Canvas">Github</a> </td>
</tr>
<tr>
<td> 009 </td>
<td> 14 Must Know Dev Tools Tricks </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/009.14-Must-Know-Dev-Tools-Tricks/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/009.14-Must-Know-Dev-Tools-Tricks">Github</a> </td>
</tr>
<tr>
<td> 010 </td>
<td> Hold Shift to Check Multiple Checkboxes </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/010.Hold-Shift-to-Check-Multiple-Checkboxes/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/010.Hold-Shift-to-Check-Multiple-Checkboxes">Github</a> </td>
</tr>
<tr>
<td> 011 </td>
<td> Custom HTML5 Video Player </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/011.Custom-HTML5-Video-Player/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/011.Custom-HTML5-Video-Player">Github</a> </td>
</tr>
<tr>
<td> 012 </td>
<td> Key Sequence Detection (KONAMI CODE) </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/012.Key-Sequence-Detection(KONAMI-CODE)/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/012.Key-Sequence-Detection(KONAMI-CODE)">Github</a> </td>
</tr>
<tr>
<td> 013 </td>
<td> Slide In on Scroll </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/013.Slide-In-on-Scroll/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/013.Slide-In-on-Scroll">Github</a> </td>
</tr>
<tr>
<td> 014 </td>
<td> Object and Arrays - Reference VS Copy </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/014.Object-and-Arrays-Reference-VS-Copy/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/014.Object-and-Arrays-Reference-VS-Copy">Github</a> </td>
</tr>
<tr>
<td> 015 </td>
<td> LocalStorage and Event Delegation </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/015.LocalStorage-and-Event-Delegation/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/015.LocalStorage-and-Event-Delegation">Github</a> </td>
</tr>
<tr>
<td> 016 </td>
<td> CSS Text Shadow Mouse Move Effect </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/016.CSS-Text-Shadow-Mouse-Move-Effect/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/016.CSS-Text-Shadow-Mouse-Move-Effect">Github</a> </td>
</tr>
<tr>
<td> 017 </td>
<td> Sorting Band Names without articles </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/017.Sorting-Band-Names-without-articles/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/017.Sorting-Band-Names-without-articles">Github</a> </td>
</tr>
<tr>
<td> 018 </td>
<td> Tally String Times with Reduce </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/018.Tally-String-Times-with-Reduce/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/018.Tally-String-Times-with-Reduce">Github</a> </td>
</tr>
<tr>
<td> 019 </td>
<td> Unreal Webcam Fun </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/019.Unreal-Webcam-Fun/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/019.Unreal-Webcam-Fun">Github</a> </td>
</tr>
<tr>
<td> 020 </td>
<td> Native Speech Recognition</td>
<td> <a href="https://mgleon08.github.io/JavaScript30/020.Native-Speech-Recognition/">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/020.Native-Speech-Recognition">Github</a> </td>
</tr>
<tr>
<td> 021 </td>
<td> Geolocation based Speedometer and Compass </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/021.Geolocation-based-Speedometer-and-Compass/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/021.Geolocation-based-Speedometer-and-Compass">Github</a> </td>
</tr>
<tr>
<td> 022 </td>
<td> Follow Along Links </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/022.Follow-Along-Links/">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/022.Follow-Along-Links">Github</a> </td>
</tr>
<tr>
<td> 023 </td>
<td> Speech Synthesis </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/023.Speech-Synthesis/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/023.Speech-Synthesis">Github</a> </td>
</tr>
<tr>
<td> 024 </td>
<td> Sticky Nav </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/024.Sticky-Nav/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/024.Sticky-Nav">Github</a> </td>
</tr>
<tr>
<td> 025 </td>
<td> Event Capture, Propagation, Bubbling and Once </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/025.Event-Capture-Propagation-Bubbling-and-Once/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/025.Event-Capture-Propagation-Bubbling-and-Once">Github</a> </td>
</tr>
<tr>
<td> 026 </td>
<td> Stripe Follow Along Dropdown </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/026.Stripe-Follow-Along-Dropdown/">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/026.Stripe-Follow-Along-Dropdown">Github</a> </td>
</tr>
<tr>
<td> 027 </td>
<td> Click and Drag to Scroll </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/027.Click-and-Drag-to-Scroll/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/027.Click-and-Drag-to-Scroll">Github</a> </td>
</tr>
<tr>
<td> 028 </td>
<td> Video Speed Controller UI </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/028.Video-Speed-Controller-UI/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/028.Video-Speed-Controller-UI">Github</a> </td>
</tr>
<tr>
<td> 029 </td>
<td> Countdown Clock </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/029.Countdown-Clock/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/029.Countdown-Clock">Github</a> </td>
</tr>
<tr>
<td> 030 </td>
<td> Whack A Mole Game </td>
<td> <a href="https://mgleon08.github.io/JavaScript30/030.Whack-A-Mole-Game/index.html">Demo</a> </td>
<td> <a href="https://github.com/mgleon08/JavaScript30/tree/master/030.Whack-A-Mole-Game">Github</a> </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS Flex 屬性]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/28/css-flex/"/>
    <updated>2018-07-28T21:46:59+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/28/css-flex</id>
    <content type="html"><![CDATA[<p>css 用來排版的新語法，以前都是用 float 來做排版，但相當麻煩，用了 flex 變的相當輕鬆好用</p>

<!-- more -->


<h1>Flex 外容器屬性</h1>

<h3>display</h3>

<p>必須宣告才能使用 flex</p>

<ul>
<li><code>flex</code></li>
<li><code>inline-flex</code>: 相當於 <code>inline-block</code> + <code>flex</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>flex-direction</h3>

<p>排序方向</p>

<ul>
<li><code>row</code>: 水平 - Items are placed the same as the text direction.</li>
<li><code>row-reverse</code>: 水平反轉 - Items are placed opposite to the text direction.</li>
<li><code>column</code>: 垂直 - Items are placed top to bottom.</li>
<li><code>column-reverse</code>: 垂直反轉 - Items are placed bottom to top</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">flex-direction</span><span class="o">:</span> <span class="n">row</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>flex-wrap</h3>

<p>超出範圍時的處理方式</p>

<ul>
<li><code>nowrap</code>: 換行 (<em>default</em>)</li>
<li><code>wrap</code>: 不換行</li>
<li><code>wrap-reverse</code>: 換行時反轉</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">flex-wrap</span><span class="o">:</span> <span class="no">nowrap</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>flex-flow</h3>

<p><code>flex-direction</code> 與 <code>flex-wrap</code> 的縮寫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">flex-flow</span><span class="o">:</span> <span class="n">row</span> <span class="no">nowrap</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>justify-content</h3>

<p>水平軸對齊設定</p>

<ul>
<li><code>flex-start</code>: Items align to the left side of the container.</li>
<li><code>flex-end</code>: Items align to the right side of the container.</li>
<li><code>center</code>: Items align at the center of the container.</li>
<li><code>space-between</code>: Items display with equal spacing between them. 平均分配內容元素，左右元素將會與 main start 和 main end 貼齊</li>
<li><code>space-around</code>: Items display with equal spacing around them. 平均分配內容元素，間距也是平均分配</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">justify-content</span><span class="o">:</span> <span class="no">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>align-items</h3>

<p>交錯軸的對齊設定</p>

<ul>
<li><code>flex-start</code>: Items align to the top of the container.</li>
<li><code>flex-end</code>: Items align to the bottom of the container.</li>
<li><code>center</code>: Items align at the vertical center of the container.</li>
<li><code>baseline</code>: Items display at the baseline of the container. 以所有內容元素的基線作為對齊標準</li>
<li><code>stretch</code>: Items are stretched to fit the container. 將內容元素全部撐開至 Flexbox 的高度 (<em>default</em>)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">align-items</span><span class="o">:</span> <span class="no">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>align-content</h3>

<p><code>align-items</code> 多行版本</p>

<blockquote><p>注意 stretch 在高度被限制的情況下不會正常伸展。</p></blockquote>

<ul>
<li><code>flex-start</code>: Lines are packed at the top of the container.</li>
<li><code>flex-end</code>: Lines are packed at the bottom of the container.</li>
<li><code>center</code>: Lines are packed at the vertical center of the container.</li>
<li><code>space-between</code>: Lines display with equal spacing between them. 將第一行與最後一行分別對齊最上方與最下方</li>
<li><code>space-around</code>: Lines display with equal spacing around them. 每行平均分配間距</li>
<li><code>stretch</code>: Lines are stretched to fit the container.內容元素全部撐開（<em>default</em>）</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">align-content</span><span class="o">:</span> <span class="no">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Flex 內元件屬性</h1>

<h3>flex</h3>

<p>包含了 <code>flex-grow</code> <code>flex-shrink</code> <code>flex-basis</code></p>

<ul>
<li><code>flex-grow</code>: 數字，無單位，當子元素的 flex-basis 長度「小」於它自己在父元素分配到的長度，按照數字做相對應的「伸展」比例分配，預設值為 0，不會進行彈性變化，不可為負值，設為 1 則會進行彈性變化。</li>
<li><code>flex-shrink</code>: 數字，無單位，當子元素的 flex-basis 長度「大」於它自己在父元素分配到的長度，按照數字做相對應的「壓縮」比例分配，預設值為 1，設為 0 的話不會進行彈性變化，不可為負值。</li>
<li><code>flex-basis</code>: 子元素的基本大小，作為父元素的大小比較基準，預設值為 0，也因為預設值為 0，所以沒有設定此屬性的時候，會以直接採用 flex-grow 屬性，flex-basis 也可以設為 auto，如果設為 auto，就表示子元素以自己的基本大小為單位。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">flex</span><span class="o">:</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// 當設定一個是 flex-grow</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>align-self</h3>

<p><code>align-self</code> 的作用在於覆寫已經套用 <code>align-items</code> 的屬性，可調整內元件交錯軸的對齊設定(主軸線則不能另外做設定)，且可以個別設定單一元件的值。</p>

<ul>
<li><code>auto</code></li>
<li><code>flex-start</code></li>
<li><code>flex-end</code></li>
<li><code>center</code></li>
<li><code>baseline</code></li>
<li><code>stretch</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">align-self</span><span class="o">:</span> <span class="no">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>order</h3>

<p>可重新定義元件的排列順序，順序會依據數值的大小排列。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">order</span><span class="o">:</span> <span class="mi">-1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>playground</h1>

<p data-height="265" data-theme-id="0" data-slug-hash="rrYjvX" data-default-tab="css,result" data-user="leonji" data-pen-title="rrYjvX" class="codepen">See the Pen <a href="https://codepen.io/leonji/pen/rrYjvX/">rrYjvX</a> by leonji (<a href="https://codepen.io/leonji">@leonji</a>) on <a href="https://codepen.io">CodePen</a>.</p>


<script async src="https://static.codepen.io/assets/embed/ei.js"></script>


<p>參考文件</p>

<ul>
<li><a href="https://flexboxfroggy.com/">flexboxfroggy</a></li>
<li><a href="https://flexbox.io/">flexbox Wes Bos</a></li>
<li><a href="http://www.oxxostudio.tw/articles/201501/css-flexbox.html">深入解析 CSS Flexbox </a></li>
<li><a href="https://wcc723.github.io/css/2017/07/21/css-flex/">圖解：CSS Flex 屬性一點也不難</a></li>
<li><a href="https://hackernoon.com/the-ultimate-css-battle-grid-vs-flexbox-d40da0449faf">The ultimate CSS battle: Grid vs Flexbox</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nothing Is Something by Sandi Metz]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/26/nothing-is-something-by-sandi-metz/"/>
    <updated>2018-07-26T21:36:02+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/26/nothing-is-something-by-sandi-metz</id>
    <content type="html"><![CDATA[<p>這是 Sandi Metz 2015 的演講，雖然有點舊，但還是很不錯，來紀錄一下</p>

<!-- more -->


<h3>Smalltalk Infected</h3>

<p>一開始先介紹 <code>if</code> 可以改寫為自己的 method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">true</span><span class="o">.</span><span class="n">class</span> <span class="c1"># TrueClass</span>
</span><span class='line'><span class="kp">false</span><span class="o">.</span><span class="n">class</span> <span class="c1"># FalseClass</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TrueClass</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_false</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">FalseClass</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_false</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">if_true</span><span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;evaluated block&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">evaluated</span> <span class="n">block</span>
</span><span class='line'><span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來改寫為 <code>Object</code> <code>FalseClass</code> <code>NilClass</code> 因為在 ruby 的世界中，除了 <code>false</code> 和 <code>nil</code> 是 &ldquo;Falsy"，其他都是 "truthy&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Object</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_false</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">FalseClass</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_false</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">NilClass</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">NilClass</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">if_true</span><span class="p">{</span> <span class="nb">puts</span> <span class="s1">&#39;a&#39;</span> <span class="p">}</span><span class="o">.</span><span class="n">if_false</span><span class="p">{</span> <span class="nb">puts</span><span class="s1">&#39;b&#39;</span> <span class="p">}</span>
</span><span class='line'><span class="n">a</span>
</span><span class='line'><span class="c1"># true</span>
</span></code></pre></td></tr></table></div></figure>


<p>但我們並不想改寫 ruby 原本就有的 method，而是將上面的技巧應用在需要的地方</p>

<h3>Condition Averse</h3>

<p>Sometimes nil is nothing</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ids</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;pig&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;sheep&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">animals</span> <span class="o">=</span> <span class="n">ids</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="nb">id</span><span class="o">|</span> <span class="no">Animal</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)}</span>
</span><span class='line'><span class="c1"># =&gt; [#&lt;Animal:0x007f94b290ae90 @name=&quot;pig&quot;&gt;, nil,</span>
</span><span class='line'>     <span class="c1">#&lt;Animal:0x007f94b290ae18 @name=&quot;sheep&quot;&gt;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1"># NoMethodError: undefined method `name&#39; for nil:NilClass</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="s1">&#39;no animal&#39;</span> <span class="p">:</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1">#    &#39;no animal&#39;</span>
</span><span class='line'><span class="c1">#    &#39;sheep&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span> <span class="o">&amp;&amp;</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="s1">&#39;&#39;</span> <span class="p">:</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span> <span class="o">==</span> <span class="kp">nil</span> <span class="p">?</span> <span class="s1">&#39;&#39;</span> <span class="p">:</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">NilClass</span><span class="p">)</span> <span class="p">?</span> <span class="s1">&#39;&#39;</span> <span class="p">:</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1">#    empty string</span>
</span><span class='line'><span class="c1">#    &#39;sheep&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Message Centric</h3>

<p>新增 <code>MissingAnimal</code> class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Animal</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MissingAnimal</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span>
</span><span class='line'>    <span class="s1">&#39;no animal&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">ids</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;pig&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;sheep&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">animals</span> <span class="o">=</span> <span class="n">ids</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="nb">id</span><span class="o">|</span> <span class="no">Animal</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="o">||</span> <span class="no">MissingAnimal</span><span class="o">.</span><span class="n">new</span><span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; [#&lt;Animal: @name=&quot;pig&quot;&gt;, #&lt;MissingAnimal:&gt;, #&lt;Animal: @name=&quot;sheep&quot;&gt;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1">#    &#39;no animal&#39;</span>
</span><span class='line'><span class="c1">#    &#39;sheep&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是這樣反而對 <code>MissingAnimal</code> 會有 dependency，接著在外面再包一層，將 dependency 封裝起來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">GuaranteedAnimal</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Animal</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="o">||</span> <span class="no">MissingAnimal</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span> <span class="o">=</span> <span class="n">ids</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span><span class="no">GuaranteedAnimal</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; [#&lt;Animal: @name=&quot;pig&quot;&gt;, </span>
</span><span class='line'>      <span class="c1">#&lt;MissingAnimal:&gt;,</span>
</span><span class='line'>      <span class="c1">#&lt;Animal: @name=&quot;sheep&quot;&gt;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1">#    &#39;no animal&#39;</span>
</span><span class='line'><span class="c1">#    &#39;sheep&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Abstraction Seeking</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">House</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">recite</span>
</span><span class='line'>    <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.data</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">line</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">line</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="s2">&quot;This is </span><span class="si">#{</span><span class="n">phrase</span><span class="p">(</span><span class="n">number</span><span class="p">)</span><span class="si">}</span><span class="s2">.</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">phrase</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parts</span><span class="p">(</span><span class="n">number</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">parts</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">last</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">data</span>
</span><span class='line'>    <span class="o">[</span> <span class="s1">&#39;the horse and the hound and the horn that belonged to&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>    <span class="s1">&#39;the malt that lay in&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;the house that Jack built&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著 Implement <code>RandomHouse</code> <code>EchoHouse</code> without &lsquo;if&rsquo; statements</p>

<p>用繼承 Inheritance?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">RandomHouse</span> <span class="o">&lt;</span> <span class="no">House</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">data</span>
</span><span class='line'>    <span class="vi">@data</span> <span class="o">||=</span> <span class="k">super</span><span class="o">.</span><span class="n">shuffle</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">EchoHouse</span> <span class="o">&lt;</span> <span class="no">House</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">parts</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="k">super</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="k">super</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但這樣一個要改寫 <code>data</code> 另一個改寫 <code>parts</code>，當有新需求 <code>RandomEchoHouse</code>，那不就要這兩個 method 在寫一次，也不可能只繼承其中一個</p>

<blockquote><p>Inheritance is for specialization is not for sharing code</p></blockquote>

<p>改用組合 Composition 的方式來處理</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">House</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:formatter</span><span class="p">,</span> <span class="ss">:data</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="ss">orderer</span><span class="p">:</span> <span class="no">DefaultOrder</span><span class="o">.</span><span class="n">new</span><span class="p">,</span> <span class="ss">formatter</span><span class="p">:</span> <span class="no">DefaultFormatter</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@formatter</span> <span class="o">=</span> <span class="n">formatter</span>
</span><span class='line'>    <span class="vi">@data</span> <span class="o">=</span> <span class="n">orderer</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="no">DATA</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">parts</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="n">formatter</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">last</span><span class="p">(</span><span class="n">number</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">DefaultOrder</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">order</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">RandomOrder</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">order</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">shuffle</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">DefaultFormatter</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">format</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parts</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">EchoFormatter</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">format</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parts</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="no">House</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">orderer</span><span class="p">:</span> <span class="no">RandomOrder</span><span class="o">.</span><span class="n">new</span><span class="p">)</span><span class="o">.</span><span class="n">line</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
</span><span class='line'><span class="no">House</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">formatter</span><span class="p">:</span> <span class="no">EchoFormatter</span><span class="o">.</span><span class="n">new</span><span class="p">)</span><span class="o">.</span><span class="n">line</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=OMPfEXIlTVE">[Video]RailsConf 2015 - Nothing is Something</a></li>
<li><a href="https://speakerdeck.com/skmetz/nothing-is-something-railsconf">[Silde] RailsConf 2015 - Nothing is Something</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TaiwanUserID 台灣身分證字號驗證]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/24/taiwan-user-id/"/>
    <updated>2018-07-24T21:38:14+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/24/taiwan-user-id</id>
    <content type="html"><![CDATA[<p>你知道台灣身分證字號是怎麼算出來的嗎?</p>

<!-- more -->


<p>剛好公司同事有寫到，蠻有趣的來紀錄一下，要快還是要用 <code>while</code> 阿~</p>

<h1>公式</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>戶籍代表的字母數字：
</span><span class='line'>Ａ台北市-10 Ｂ台中市-11 Ｃ基隆市-12 Ｄ台南市-13 Ｅ高雄市-14 Ｆ台北縣-15
</span><span class='line'>Ｇ宜蘭縣-16 Ｈ桃園縣-17 Ｉ嘉義市-34 Ｊ新竹縣-18 Ｋ苗栗縣-19 Ｌ台中縣-20
</span><span class='line'>Ｍ南投縣-21 Ｎ彰化縣-22 Ｏ新竹市-35 Ｐ雲林縣-23 Ｑ嘉義縣-24 Ｒ台南縣-25
</span><span class='line'>Ｓ高雄縣-26 Ｔ屏東縣-27 Ｕ花蓮縣-28 Ｖ台東縣-29 Ｗ金門縣-32 Ｘ澎湖縣-30
</span><span class='line'>Ｙ陽明山-31 Ｚ連江縣-33
</span><span class='line'>
</span><span class='line'>公式
</span><span class='line'>A123456789 -&gt; 10123456789
</span><span class='line'>
</span><span class='line'>1   0   1    2    3    4    5    6    7   8   9 (拆解字母後的數字)
</span><span class='line'>*   *   *    *    *    *    *    *    *   *   *
</span><span class='line'>1   9   8    7    6    5    4    3    2   1   1 (固定係數)
</span><span class='line'>-----------------------------------------------
</span><span class='line'>1 + 0 + 8 + 14 + 18 + 20 + 20 + 18 + 14 + 8 + 9 = 130
</span><span class='line'>
</span><span class='line'>130 % 10 == 0</span></code></pre></td></tr></table></div></figure>


<h1>Code</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">LOCATION_CODE</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;A&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;B&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;C&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;D&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;E&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;F&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;G&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;H&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;I&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;J&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;K&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;L&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;M&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;N&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;O&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;P&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;Q&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;R&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;S&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;T&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;U&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;V&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;W&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;X&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;Y&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;Z&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">MULTIPLIER</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">id_card_validate</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="kp">false</span> <span class="k">unless</span> <span class="nb">id</span> <span class="o">=~</span> <span class="sr">/\A[A-Z](1|2)\d{8}\z/</span>
</span><span class='line'>  <span class="n">chars</span> <span class="o">=</span> <span class="nb">id</span><span class="o">.</span><span class="n">chars</span>
</span><span class='line'>  <span class="n">numbers</span> <span class="o">=</span> <span class="no">LOCATION_CODE</span><span class="o">[</span><span class="n">chars</span><span class="o">.</span><span class="n">shift</span><span class="o">]</span> <span class="o">+</span> <span class="n">chars</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_i</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sum</span> <span class="o">=</span> <span class="n">numbers</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="no">MULTIPLIER</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="n">a</span> <span class="o">*</span> <span class="n">b</span> <span class="p">}</span><span class="o">.</span><span class="n">reduce</span><span class="p">(</span><span class="ss">:+</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># sum, i = 0, 0</span>
</span><span class='line'>  <span class="c1"># while i &lt;= 10</span>
</span><span class='line'>  <span class="c1">#   sum += numbers[i] * MULTIPLIER[i]</span>
</span><span class='line'>  <span class="c1">#   i += 1</span>
</span><span class='line'>  <span class="c1"># end</span>
</span><span class='line'>  <span class="p">(</span><span class="n">sum</span> <span class="o">%</span> <span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">zero?</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="mi">100000</span>
</span><span class='line'><span class="no">Benchmark</span><span class="o">.</span><span class="n">bmbm</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s1">&#39;leonji&#39;</span><span class="p">){</span> <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span> <span class="n">id_card_validate</span><span class="p">(</span><span class="s1">&#39;A123456789&#39;</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Rehearsal ------------------------------------------</span>
</span><span class='line'><span class="c1"># leonji   0.770000   0.010000   0.780000 (  0.796012)</span>
</span><span class='line'><span class="c1"># --------------------------------- total: 0.780000sec</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#              user     system      total        real</span>
</span><span class='line'><span class="c1"># leonji   0.770000   0.000000   0.770000 (  0.792737)</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="http://tzoyiing.pixnet.net/blog/post/29821245-%5B%E8%BD%89%E8%B2%BC%5D-%E8%BA%AB%E4%BB%BD%E8%A8%BC%E5%AD%97%E8%99%9F%E7%B7%A8%E7%A2%BC%E5%85%AC%E5%BC%8F%E8%AA%AA%E6%98%8E~%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E9%A9%97">[轉貼] 身份證字號編碼公式說明~教你如何驗證</a></li>
<li><a href="https://tonytonyjan.net/2015/04/15/national-identification-card-validator-of-taiwan/">台灣身份證字號驗證器</a></li>
<li><a href="https://github.com/wayne5540/taiwanese_id_builder">taiwanese_id_builder</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Environment Banner]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/23/environment-banner/"/>
    <updated>2018-07-23T21:35:24+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/23/environment-banner</id>
    <content type="html"><![CDATA[<p>可以很快速的知道目前環境上的版本是什麼</p>

<!-- more -->


<p>公司因為多台機器不同環境，因此有同事做了一個 <code>Environment banner</code>，可以很方便地知道目前是哪一個 branch 哪一個 版本，這邊就來記錄一下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/helpers/environment_banner_helper.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">EnvironmentBannerHelper</span>
</span><span class='line'>  <span class="no">RELEASE_INFO_PATH</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">public_path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;release_info&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_branch</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">git_available?</span>
</span><span class='line'>      <span class="c1"># 讀取當前 HEAD 所在的 branch 名稱</span>
</span><span class='line'>      <span class="sb">`git rev-parse --abbrev-ref HEAD`</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># 當在 deploy 的時候，無法用 git (除非另外裝)，因此可以先將資訊存放在某的檔案，或是環境變數</span>
</span><span class='line'>      <span class="n">git_info</span><span class="o">[</span><span class="ss">:branch</span><span class="o">]</span> <span class="c1"># 檔案</span>
</span><span class='line'>      <span class="c1"># ENV.fetch(&quot;CURRENT_BRANCH&quot;, &quot;--branch-not-found--&quot;) # ENV</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_sha</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">git_available?</span>
</span><span class='line'>      <span class="c1"># 讀取當前的 log 最新一行</span>
</span><span class='line'>      <span class="sb">`git log --oneline -1`</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># 當在 deploy 的時候，無法用 git (除非另外裝)，因此可以先將資訊存放在某的檔案，或是環境變數</span>
</span><span class='line'>      <span class="n">git_info</span><span class="o">[</span><span class="ss">:sha</span><span class="o">]</span> <span class="c1"># 檔案</span>
</span><span class='line'>      <span class="c1"># ENV.fetch(&quot;CURRENT_SHA&quot;, &quot;--sha-not-found--&quot;) # ENV</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 確認當前環境有沒有 git</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">git_available?</span>
</span><span class='line'>    <span class="n">to_dev_null</span> <span class="o">=</span> <span class="s2">&quot;&gt; /dev/null 2&gt;&amp;1&quot;</span>
</span><span class='line'>    <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;which git </span><span class="si">#{</span><span class="n">to_dev_null</span><span class="si">}</span><span class="s2"> &amp;&amp; git rev-parse --git-dir </span><span class="si">#{</span><span class="n">to_dev_null</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 主要是為了 capistrano 上面會有不同的 release 資料夾</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">release_number</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">unless</span> <span class="n">check_release_info</span> <span class="o">&amp;&amp;</span> <span class="no">IO</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="no">RELEASE_INFO_PATH</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="no">IO</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="no">RELEASE_INFO_PATH</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/\D/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">prepend</span><span class="p">(</span><span class="s1">&#39;#&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">git_info</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span> <span class="ss">sha</span><span class="p">:</span> <span class="s2">&quot;N/A&quot;</span><span class="p">,</span> <span class="ss">branch</span><span class="p">:</span> <span class="s2">&quot;N/A&quot;</span><span class="p">}</span> <span class="k">unless</span> <span class="n">check_release_info</span> <span class="o">&amp;&amp;</span> <span class="no">IO</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="no">RELEASE_INFO_PATH</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="n">line</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="no">RELEASE_INFO_PATH</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">sha</span><span class="p">:</span>    <span class="n">line</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">6</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">branch</span><span class="p">:</span> <span class="n">line</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/refs\/heads\//</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">check_release_info</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">exist?</span> <span class="no">RELEASE_INFO_PATH</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/views/layouts/application.html.erb</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% unless </span><span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">production?</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;div class=&quot;environment-banner &lt;%= Rails.env %&gt;</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">    &lt;%= Rails.env %&gt; | &lt;%= &quot;</span><span class="c1">#{current_branch} @ #{current_sha} #{release_number}&quot; %&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/* app/assets/stylesheets/application.scss */</span>
</span><span class='line'><span class="nc">.environment-banner.development</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background</span><span class="o">:</span> <span class="err">$</span><span class="nb">green</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="err">$</span><span class="nb">white</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>capistrano deploy 時新增 <code>release_info</code> 檔案方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:repo_url</span><span class="p">,</span> <span class="s1">&#39;git@github.com:xxx/xxx.git&#39;</span>
</span><span class='line'><span class="n">ask</span> <span class="ss">:branch</span><span class="p">,</span> <span class="sb">`git rev-parse --abbrev-ref HEAD`</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 將所有 git 撞況寫到一個 file 上，再透過該 file 來顯示</span>
</span><span class='line'><span class="c1"># readlink 可以找到實際檔案位置，awk 分析出路徑上最後的 release 資料夾名稱</span>
</span><span class='line'><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;echo current_release: `readlink -f </span><span class="si">#{</span><span class="n">release_path</span><span class="si">}</span><span class="s2"> | awk -F&#39;/&#39; &#39;{print $NF}&#39;` &gt; </span><span class="si">#{</span><span class="n">shared_path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;public/release_info&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># header</span>
</span><span class='line'><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;git ls-remote -h </span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:repo_url</span><span class="p">)</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:branch</span><span class="p">)</span><span class="si">}</span><span class="s2"> &gt;&gt; </span><span class="si">#{</span><span class="n">shared_path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;public/release_info&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># tag</span>
</span><span class='line'><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;git ls-remote -t </span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:repo_url</span><span class="p">)</span><span class="si">}</span><span class="s2"> | tail -n 1 &gt;&gt; </span><span class="si">#{</span><span class="n">shared_path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;public/release_info&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying Rails API + Nuxt.js + Devise-JWT API App to Production With Heroku]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/22/deploying-rails-nuxt-jwt-to-production-with-heroku/"/>
    <updated>2018-07-22T23:12:48+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/22/deploying-rails-nuxt-jwt-to-production-with-heroku</id>
    <content type="html"><![CDATA[<p>接著來把做好的 <code>Rails API + Nuxt.js + Devise-JWT</code> deploy 到 heroku</p>

<!-- more -->


<ul>
<li><a href="https://medium.com/@fishpercolator/deploying-your-nuxt-rails-api-app-to-production-with-heroku-54efd09eec22">Deploying your Nuxt+Rails API app to production with Heroku</a></li>
</ul>


<p>由於一開始我們希望用 docker-compose 來 build 環境，因此將前後端都 commit 在一起，但在部屬的時候希望將兩個分開，這時就可以用到 <code>git subtree</code></p>

<p><a href="https://heroku.com"><img src="https://www.herokucdn.com/deploy/button.svg" alt="Deploy" /></a></p>

<h1>Backend</h1>

<p>Rails5.2 必須先將 <code>production</code> 的 <code>config.require_master_key</code> 打開</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/environments/production.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">require_master_key</span> <span class="o">=</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>記得要把 <code>cors.rb</code> 設定成 herokuapp 的 domain (根據前端專案的名稱)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/initializers/cors.rb</span>
</span><span class='line'><span class="n">origins</span> <span class="s1">&#39;localhost:3000&#39;</span><span class="p">,</span> <span class="s1">&#39;autheg-frontend-demo.herokuapp.com&#39;</span>
</span><span class='line'><span class="c1"># or</span>
</span><span class='line'><span class="n">origins</span> <span class="s1">&#39;*&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>安裝 <a href="https://devcenter.heroku.com/articles/heroku-cli">heroku-cli</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">heroku</span><span class="o">/</span><span class="n">brew</span><span class="o">/</span><span class="n">heroku</span>
</span></code></pre></td></tr></table></div></figure>


<p>create backend 的 heroku 專案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 先到最上層的資料夾</span>
</span><span class='line'><span class="n">cd</span> <span class="n">autheg</span>
</span><span class='line'><span class="c1"># 如果看到這個 &quot;Name is already taken&quot;，就換一個名字即可</span>
</span><span class='line'><span class="n">heroku</span> <span class="ss">apps</span><span class="p">:</span><span class="n">create</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span>
</span></code></pre></td></tr></table></div></figure>


<p>預設 remote name 會是 heroku，因為等下要在 create frontend remote，因此先改名</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 更改 local 的 remote name</span>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">rename</span> <span class="n">heroku</span> <span class="n">backend</span>
</span></code></pre></td></tr></table></div></figure>


<p>將後端 autheg-backend push 上去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 透過 subtree 先將後端 autheg-backend push 上去</span>
</span><span class='line'><span class="n">git</span> <span class="n">subtree</span> <span class="n">push</span> <span class="o">--</span><span class="n">prefix</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span> <span class="n">backend</span> <span class="n">master</span>
</span></code></pre></td></tr></table></div></figure>


<p>建立環境變數</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">set</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="no">RAILS_MASTER_KEY</span><span class="o">=</span><span class="p">(</span><span class="n">local</span> <span class="err">裡面的</span> <span class="n">config</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">set</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="no">JWT_SECRET</span><span class="o">=</span><span class="err">$</span><span class="p">(</span><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="n">rails</span> <span class="n">secret</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>建立 table data</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="n">rails</span> <span class="ss">db</span><span class="p">:</span><span class="ss">schema</span><span class="p">:</span><span class="nb">load</span>
</span></code></pre></td></tr></table></div></figure>


<p>新增 db 資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="n">rails</span> <span class="n">console</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># user</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create!</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">&quot;test@example.com&quot;</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s2">&quot;password&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># example</span>
</span><span class='line'><span class="p">{</span><span class="s2">&quot;foo&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;green&quot;</span><span class="p">,</span> <span class="s2">&quot;bar&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;red&quot;</span><span class="p">,</span> <span class="s2">&quot;baz&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;purple&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="p">,</span><span class="n">c</span><span class="o">|</span> <span class="no">Example</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="n">n</span><span class="p">,</span> <span class="ss">colour</span><span class="p">:</span> <span class="n">c</span><span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來就可以透過 <a href="http://yet-another-rest-client.com/">YARC</a> or <a href="https://www.getpostman.com/">Postman</a> 來測試有沒有成功!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">POST</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span><span class="o">.</span><span class="n">herokuapp</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">api</span><span class="o">/</span><span class="n">users</span><span class="o">/</span><span class="n">sign_in</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s2">&quot;user&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="s2">&quot;email&quot;</span><span class="ss">:&quot;test@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;password&quot;</span><span class="ss">:&quot;password&quot;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Frontend</h1>

<p><a href="https://github.com/nuxt/docs/blob/master/en/faq/heroku-deployment.md">nuxt heroku-deployment</a></p>

<p>create frontend 的 heroku 專案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 先到最上層的資料夾</span>
</span><span class='line'><span class="n">cd</span> <span class="n">autheg</span>
</span><span class='line'><span class="c1"># 如果看到這個 &quot;Name is already taken&quot;，就換一個名字即可</span>
</span><span class='line'><span class="n">heroku</span> <span class="ss">apps</span><span class="p">:</span><span class="n">create</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span><span class="o">-</span><span class="n">demo</span>
</span></code></pre></td></tr></table></div></figure>


<p>rename remote name</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">rename</span> <span class="n">heroku</span> <span class="n">frontend</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定環境變數，要跑在 production 模式，因此要將之前安裝在 dev 環境中的套件，安裝上去</p>

<blockquote><p>The following command tells your app to run in production mode and on all interfaces (0.0.0.0) but tells yarn/npm to run in development mode, so that all the dev packages are installed as part of the build process.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">set</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span><span class="o">-</span><span class="n">demo</span> <span class="no">NODE_ENV</span><span class="o">=</span><span class="n">production</span> <span class="no">HOST</span><span class="o">=</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span> <span class="no">NPM_CONFIG_PRODUCTION</span><span class="o">=</span><span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>改一下 <code>package.json</code>，讓 heroku deploy 之後可以 build 檔案出來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;heroku-postbuild&quot;</span><span class="p">:</span> <span class="s2">&quot;npm run build&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定 backend 的 API 路徑</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">set</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span><span class="o">-</span><span class="n">demo</span> <span class="no">API_URL</span><span class="o">=</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span><span class="o">.</span><span class="n">herokuapp</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">api</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著就可以到首頁上去測試了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span><span class="o">-</span><span class="n">demo</span><span class="o">.</span><span class="n">herokuapp</span><span class="o">.</span><span class="n">com</span><span class="o">/</span>
</span><span class='line'><span class="c1"># email: test@example.com</span>
</span><span class='line'><span class="c1"># password: password</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Heroku</h1>

<p>其他 heroku 功能</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># create new heroku project</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">create</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># push heroku</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">heroku</span> <span class="n">master</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># env config remove</span>
</span><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">remove</span> <span class="no">TOKEN</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># log</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">logs</span> <span class="o">--</span><span class="n">tail</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># scale</span>
</span><span class='line'><span class="n">heroku</span> <span class="ss">ps</span><span class="p">:</span><span class="n">scale</span> <span class="n">web</span><span class="o">=</span><span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ssh</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span> <span class="n">bash</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># run 指令</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="n">rails</span> <span class="n">console</span>
</span></code></pre></td></tr></table></div></figure>


<h1>git subtree</h1>

<p>git subtree 本身不支援 force push，因此要透過其他方式來達成</p>

<ul>
<li><a href="https://gist.github.com/tduarte/eac064b4778711b116bb827f8c9bef7b">publish-ghpages.md</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="n">master</span> <span class="c1"># you can avoid this line if you are in master...</span>
</span><span class='line'><span class="n">git</span> <span class="n">subtree</span> <span class="nb">split</span> <span class="o">--</span><span class="n">prefix</span> <span class="n">dist</span> <span class="o">-</span><span class="n">b</span> <span class="n">gh</span><span class="o">-</span><span class="n">pages</span> <span class="c1"># create a local gh-pages branch containing the splitted output folder</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="o">-</span><span class="n">f</span> <span class="n">origin</span> <span class="n">gh</span><span class="o">-</span><span class="ss">pages</span><span class="p">:</span><span class="n">gh</span><span class="o">-</span><span class="n">pages</span> <span class="c1"># force the push of the gh-pages branch to the remote gh-pages branch at origin</span>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">D</span> <span class="n">gh</span><span class="o">-</span><span class="n">pages</span> <span class="c1"># delete the local gh-pages because you will need it: ref</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://medium.com/@fishpercolator/deploying-your-nuxt-rails-api-app-to-production-with-heroku-54efd09eec22">Deploying your Nuxt+Rails API app to production with Heroku</a></li>
<li><a href="https://hexo.crboy.net/2016/09/amazing-git-subtree/">神奇的 Git Subtree</a></li>
<li><a href="http://yutin.logdown.com/posts/188306-git-subtree-total-addendum-library">Git SubTree 共編 Library</a></li>
<li><a href="http://erning.net/blog/2012/05/09/the-twelve-factor-app/">The Twelve-Factor App</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails API + Nuxt.js + Devise-JWT]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/17/rails-nuxt-jwt/"/>
    <updated>2018-07-17T17:39:32+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/17/rails-nuxt-jwt</id>
    <content type="html"><![CDATA[<p>在網路上發現這篇文章，覺得寫得很不錯，所以這次就跟著這篇一起做一遍~</p>

<!-- more-->


<p><a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></p>

<p>來學習，<code>Rails API / Nuxt.js / JWT / Docker</code></p>

<ul>
<li><a href="#part1">Part 1: Creating a development environment</a></li>
<li><a href="#part2">Part 2: Getting them talking to each other</a></li>
<li><a href="#part3">Part 3: Authentication with Devise-JWT</a></li>
</ul>


<h1><span id="part1">Part 1: Creating a development environment</span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># backend</span>
</span><span class='line'><span class="n">mkdir</span> <span class="n">autheg</span>
</span><span class='line'><span class="n">cd</span> <span class="n">autheg</span>
</span><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span> <span class="o">-</span><span class="n">T</span> <span class="o">--</span><span class="n">skip</span><span class="o">-</span><span class="n">spring</span> <span class="o">-</span><span class="n">C</span> <span class="o">-</span><span class="n">B</span> <span class="o">-</span><span class="n">d</span> <span class="n">postgresql</span> <span class="o">--</span><span class="n">api</span>
</span><span class='line'><span class="c1"># -T = skip test</span>
</span><span class='line'><span class="c1"># -C = skip action cable</span>
</span><span class='line'><span class="c1"># -B = skip bundle 主要是作者要跑在 docker 裡面</span>
</span><span class='line'><span class="c1"># --api = 沒有任何 view 純 API server</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#frontend</span>
</span><span class='line'><span class="n">vue</span> <span class="n">init</span> <span class="n">nuxt</span><span class="o">-</span><span class="n">community</span><span class="o">/</span><span class="n">starter</span><span class="o">-</span><span class="n">template</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span>
</span><span class='line'><span class="n">cd</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span>
</span><span class='line'><span class="n">yarn</span> <span class="n">generate</span><span class="o">-</span><span class="n">lock</span><span class="o">-</span><span class="n">entry</span> <span class="o">&gt;</span> <span class="n">yarn</span><span class="o">.</span><span class="n">lock</span>
</span><span class='line'><span class="c1"># 跟 -B 類似，為了不 install</span>
</span></code></pre></td></tr></table></div></figure>


<h3>backend</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-backend/Dockerfile</span>
</span><span class='line'><span class="no">FROM</span> <span class="ss">ruby</span><span class="p">:</span><span class="mi">2</span><span class="o">.</span><span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="no">ARG</span> <span class="no">UID</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">adduser</span> <span class="n">rails</span> <span class="o">--</span><span class="n">uid</span> <span class="vg">$UID</span> <span class="o">--</span><span class="n">disabled</span><span class="o">-</span><span class="n">password</span> <span class="o">--</span><span class="n">gecos</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="c1"># 可以透過 $UID 給予不同的 user ID，並且進到任何的 container 都可以用相同的 user ID</span>
</span><span class='line'><span class="c1"># --disabled-password - 讓 rails 無法用密碼登入</span>
</span><span class='line'><span class="c1"># --gecos 用戶的詳細訊息（如姓名，年齡，電話等），因為 adduser 會提示你輸入用戶的密碼和相關的finger訊息，但是這個可以用選項--gecos來覆蓋。</span>
</span><span class='line'>
</span><span class='line'><span class="no">ENV</span> <span class="no">APP</span> <span class="sr">/usr/s</span><span class="n">rc</span><span class="o">/</span><span class="n">app</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">mkdir</span> <span class="vg">$APP</span>
</span><span class='line'><span class="no">WORKDIR</span> <span class="vg">$APP</span>
</span><span class='line'>
</span><span class='line'><span class="no">COPY</span> <span class="no">Gemfile</span><span class="o">*</span> <span class="vg">$APP</span><span class="o">/</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">bundle</span> <span class="n">install</span> <span class="o">-</span><span class="n">j3</span> <span class="o">--</span><span class="n">path</span> <span class="n">vendor</span><span class="o">/</span><span class="n">bundle</span>
</span><span class='line'><span class="c1"># Gems and yarn packages are installed into the mounted volumes. </span>
</span><span class='line'><span class="c1"># This will stop you from needing to rebuild the whole Docker image every time you change the Gemfile or package.json.</span>
</span><span class='line'>
</span><span class='line'><span class="no">COPY</span> <span class="o">.</span> <span class="vg">$APP</span><span class="o">/</span>
</span><span class='line'>
</span><span class='line'><span class="no">CMD</span> <span class="o">[</span><span class="s2">&quot;bin/rails&quot;</span><span class="p">,</span> <span class="s2">&quot;server&quot;</span><span class="p">,</span> <span class="s2">&quot;-p&quot;</span><span class="p">,</span> <span class="s2">&quot;8080&quot;</span><span class="p">,</span> <span class="s2">&quot;-b&quot;</span><span class="p">,</span> <span class="s2">&quot;0.0.0.0&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 這裡原本是 rails，但實際在 run 的時候會有 error，因此改為 bin/rails</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>.dockerignore</code> 避免 Docker 在 build 的時候，一併複製過去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-backend/.dockerignore</span>
</span><span class='line'><span class="sr">/vendor/</span><span class="n">bundle</span>
</span><span class='line'><span class="sr">/log</span>
</span><span class='line'><span class="sr">/</span><span class="n">tmp</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-backend/.gitignore</span>
</span><span class='line'><span class="sr">/vendor/</span><span class="n">bundle</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<h3>frontend</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-frontend/Dockerfile</span>
</span><span class='line'>
</span><span class='line'><span class="no">FROM</span> <span class="ss">node</span><span class="p">:</span><span class="mi">9</span>
</span><span class='line'>
</span><span class='line'><span class="no">ARG</span> <span class="no">UID</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">adduser</span> <span class="n">frontend</span> <span class="o">--</span><span class="n">uid</span> <span class="vg">$UID</span> <span class="o">--</span><span class="n">disabled</span><span class="o">-</span><span class="n">password</span> <span class="o">--</span><span class="n">gecos</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">ENV</span> <span class="no">APP</span> <span class="sr">/usr/s</span><span class="n">rc</span><span class="o">/</span><span class="n">app</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">mkdir</span> <span class="vg">$APP</span>
</span><span class='line'><span class="no">WORKDIR</span> <span class="vg">$APP</span>
</span><span class='line'>
</span><span class='line'><span class="no">COPY</span> <span class="n">package</span><span class="o">.</span><span class="n">json</span> <span class="n">yarn</span><span class="o">.</span><span class="n">lock</span> <span class="vg">$APP</span><span class="o">/</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">yarn</span>
</span><span class='line'><span class="c1"># Gems and yarn packages are installed into the mounted volumes. </span>
</span><span class='line'><span class="c1"># This will stop you from needing to rebuild the whole Docker image every time you change the Gemfile or package.json.</span>
</span><span class='line'>
</span><span class='line'><span class="no">COPY</span> <span class="o">.</span> <span class="vg">$APP</span><span class="o">/</span>
</span><span class='line'>
</span><span class='line'><span class="no">CMD</span> <span class="o">[</span><span class="s2">&quot;yarn&quot;</span><span class="p">,</span> <span class="s2">&quot;run&quot;</span><span class="p">,</span> <span class="s2">&quot;dev&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>.dockerignore</code> 避免 Docker 在 build 的時候，一併複製過去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-frontend/.dockerignore</span>
</span><span class='line'><span class="sr">/node_modules/</span>
</span></code></pre></td></tr></table></div></figure>


<h3>all</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/docker-compose.yml</span>
</span><span class='line'>
</span><span class='line'><span class="ss">version</span><span class="p">:</span> <span class="s1">&#39;3&#39;</span> <span class="c1"># dockerfile 版本 </span>
</span><span class='line'><span class="ss">services</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">db</span><span class="p">:</span> <span class="c1"># 對應 rails database.yml 的 host</span>
</span><span class='line'>    <span class="ss">image</span><span class="p">:</span> <span class="n">postgres</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="s2">&quot;5432&quot;</span>
</span><span class='line'>  <span class="ss">backend</span><span class="p">:</span> <span class="c1"># 會變成 REPOSITORY name autheg_backend</span>
</span><span class='line'>    <span class="ss">build</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">context</span><span class="p">:</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span> <span class="c1"># 要 build 的資料夾位置</span>
</span><span class='line'>      <span class="ss">args</span><span class="p">:</span>
</span><span class='line'>        <span class="ss">UID</span><span class="p">:</span> <span class="err">$</span><span class="p">{</span><span class="ss">UID</span><span class="p">:</span><span class="o">-</span><span class="mi">1001</span><span class="p">}</span>
</span><span class='line'>    <span class="ss">volumes</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="o">.</span><span class="n">/autheg</span><span class="o">-</span><span class="ss">backend</span><span class="p">:</span><span class="sr">/usr/s</span><span class="n">rc</span><span class="o">/</span><span class="n">app</span>
</span><span class='line'>      <span class="c1"># 放哪裡沒有一定 /var/www/html,  /usr/src/app,  /home 都有人放</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="s2">&quot;8080:8080&quot;</span>
</span><span class='line'>    <span class="ss">depends_on</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="n">db</span>
</span><span class='line'>    <span class="ss">user</span><span class="p">:</span> <span class="n">rails</span> <span class="c1"># 對應到 adduser 的名稱</span>
</span><span class='line'>  <span class="ss">frontend</span><span class="p">:</span> <span class="c1"># 會變成 REPOSITORY name autheg_frontend</span>
</span><span class='line'>    <span class="ss">build</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">context</span><span class="p">:</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span>
</span><span class='line'>      <span class="ss">args</span><span class="p">:</span>
</span><span class='line'>        <span class="ss">UID</span><span class="p">:</span> <span class="err">$</span><span class="p">{</span><span class="ss">UID</span><span class="p">:</span><span class="o">-</span><span class="mi">1001</span><span class="p">}</span>
</span><span class='line'>    <span class="ss">volumes</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="o">.</span><span class="n">/autheg</span><span class="o">-</span><span class="ss">frontend</span><span class="p">:</span><span class="sr">/usr/s</span><span class="n">rc</span><span class="o">/</span><span class="n">app</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="s2">&quot;3000:3000&quot;</span>
</span><span class='line'>    <span class="ss">user</span><span class="p">:</span> <span class="n">frontend</span> <span class="c1"># 對應到 adduser 的名稱</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來執行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">build</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker images</span>
</span><span class='line'><span class="no">REPOSITORY</span>          <span class="no">TAG</span>                 <span class="no">IMAGE</span> <span class="no">ID</span>            <span class="no">CREATED</span>              <span class="no">SIZE</span>
</span><span class='line'><span class="n">autheg_frontend</span>     <span class="n">latest</span>              <span class="mi">18</span><span class="n">b1178326a7</span>        <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span> <span class="n">ago</span>   <span class="mi">890</span><span class="no">MB</span>
</span><span class='line'><span class="n">autheg_backend</span>      <span class="n">latest</span>              <span class="mi">528</span><span class="n">bfe5bf6d6</span>        <span class="mi">2</span> <span class="n">minutes</span> <span class="n">ago</span>        <span class="mi">1</span><span class="o">.</span><span class="mo">03</span><span class="no">GB</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker ps -a</span>
</span><span class='line'><span class="no">CONTAINER</span> <span class="no">ID</span>        <span class="no">IMAGE</span>               <span class="no">COMMAND</span>                  <span class="no">CREATED</span>              <span class="no">STATUS</span>                          <span class="no">PORTS</span>                     <span class="no">NAMES</span>
</span><span class='line'><span class="n">a11609898c96</span>        <span class="n">autheg_backend</span>      <span class="s2">&quot;bundle&quot;</span>                 <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span> <span class="n">ago</span>   <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span> <span class="n">ago</span>                             <span class="n">autheg_backend_run_1</span>
</span><span class='line'><span class="n">f088297e9b9b</span>        <span class="n">postgres</span>            <span class="s2">&quot;docker-entrypoint.s…&quot;</span>   <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span> <span class="n">ago</span>   <span class="no">Up</span> <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span>               <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">:</span><span class="mi">32783</span><span class="o">-&gt;</span><span class="mi">5432</span><span class="o">/</span><span class="n">tcp</span>   <span class="n">autheg_db_1</span>
</span><span class='line'>
</span><span class='line'><span class="n">docker</span> <span class="n">volume</span> <span class="n">ls</span>
</span><span class='line'><span class="c1"># DRIVER              VOLUME NAME</span>
</span><span class='line'><span class="c1"># local               64117d4ab46a1d0575cc7136e745cc70bf568cfb3e200c80c69ae035cde89085</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">frontend</span> <span class="n">yarn</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker ps -a</span>
</span><span class='line'><span class="no">CONTAINER</span> <span class="no">ID</span>        <span class="no">IMAGE</span>               <span class="no">COMMAND</span>                  <span class="no">CREATED</span>                  <span class="no">STATUS</span>                     <span class="no">PORTS</span>                     <span class="no">NAMES</span>
</span><span class='line'><span class="n">d51e53bd1370</span>        <span class="n">autheg_frontend</span>     <span class="s2">&quot;yarn&quot;</span>                   <span class="no">Less</span> <span class="n">than</span> <span class="n">a</span> <span class="n">second</span> <span class="n">ago</span>   <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">3</span> <span class="n">seconds</span> <span class="n">ago</span>                             <span class="n">autheg_frontend_run_1</span>
</span><span class='line'><span class="n">a11609898c96</span>        <span class="n">autheg_backend</span>      <span class="s2">&quot;bundle&quot;</span>                 <span class="mi">3</span> <span class="n">minutes</span> <span class="n">ago</span>            <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">3</span> <span class="n">minutes</span> <span class="n">ago</span>                             <span class="n">autheg_backend_run_1</span>
</span><span class='line'><span class="n">f088297e9b9b</span>        <span class="n">postgres</span>            <span class="s2">&quot;docker-entrypoint.s…&quot;</span>   <span class="mi">3</span> <span class="n">minutes</span> <span class="n">ago</span>            <span class="no">Up</span> <span class="mi">3</span> <span class="n">minutes</span>               <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">:</span><span class="mi">32783</span><span class="o">-&gt;</span><span class="mi">5432</span><span class="o">/</span><span class="n">tcp</span>   <span class="n">autheg_db_1</span>
</span></code></pre></td></tr></table></div></figure>


<p>要再跑 bundle &amp; yarn 是因為有做 volumes，因此利用 docker 所建立的環境，跑 host 的 bundle &amp; yarn，讓兩邊一致</p>

<blockquote><p>The reason you need to run bundle and yarn after building is because your docker-compose file mounts your host volumes into the containers so you need to install the packages into the host volumes as well as the images that are used to create the containers</p></blockquote>

<h3>編輯 database.yml &amp; package.json</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'> default: &amp;default
</span><span class='line'>   adapter: postgresql
</span><span class='line'>   encoding: unicode
</span><span class='line'><span class="gi">+  host: db</span>
</span><span class='line'><span class="gi">+  username: postgres</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>   &quot;private&quot;: true,
</span><span class='line'>   &quot;scripts&quot;: {
</span><span class='line'><span class="gd">-    &quot;dev&quot;: &quot;nuxt&quot;,</span>
</span><span class='line'><span class="gi">+    &quot;dev&quot;: &quot;HOST=0.0.0.0 nuxt&quot;,</span>
</span><span class='line'>     &quot;build&quot;: &quot;nuxt build&quot;,
</span><span class='line'>     &quot;start&quot;: &quot;nuxt start&quot;,
</span><span class='line'>     &quot;generate&quot;: &quot;nuxt generate&quot;,
</span></code></pre></td></tr></table></div></figure>


<p><code>HOST=0.0.0.0 nuxt</code> so it’s visible on your host machine</p>

<p>再啟動一個 container 用來建立新資料庫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>docker-compose run backend bin/rails db:create
</span></code></pre></td></tr></table></div></figure>


<p>此時 db 會 create 在，一開始設定的 db container <code>autheg_db_1</code> 裡面，可以</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span> <span class="nb">exec</span> <span class="o">-</span><span class="n">it</span> <span class="n">autheg_db_1</span> <span class="n">bash</span>
</span><span class='line'><span class="n">su</span> <span class="o">-</span> <span class="n">postgres</span>
</span><span class='line'><span class="n">psql</span> <span class="o">-</span><span class="n">ls</span>
</span><span class='line'><span class="c1"># 就會看到 create 好的 database</span>
</span></code></pre></td></tr></table></div></figure>


<p>看一下目前產生的 container</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker ps -a</span>
</span><span class='line'><span class="no">CONTAINER</span> <span class="no">ID</span>        <span class="no">IMAGE</span>               <span class="no">COMMAND</span>                  <span class="no">CREATED</span>             <span class="no">STATUS</span>                     <span class="no">PORTS</span>                     <span class="no">NAMES</span>
</span><span class='line'><span class="mi">85</span><span class="n">d3ec81e943</span>        <span class="n">autheg_backend</span>      <span class="s2">&quot;bin/rails db:create&quot;</span>    <span class="mi">6</span> <span class="n">minutes</span> <span class="n">ago</span>       <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">6</span> <span class="n">minutes</span> <span class="n">ago</span>                             <span class="n">autheg_backend_run_2</span>
</span><span class='line'><span class="mi">6</span><span class="n">e1f7b406a70</span>        <span class="n">autheg_frontend</span>     <span class="s2">&quot;yarn&quot;</span>                   <span class="mi">7</span> <span class="n">minutes</span> <span class="n">ago</span>       <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">7</span> <span class="n">minutes</span> <span class="n">ago</span>                             <span class="n">autheg_frontend_run_1</span>
</span><span class='line'><span class="mi">55</span><span class="n">ff63bb46e9</span>        <span class="n">autheg_backend</span>      <span class="s2">&quot;bundle&quot;</span>                 <span class="mi">25</span> <span class="n">minutes</span> <span class="n">ago</span>      <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">8</span> <span class="n">minutes</span> <span class="n">ago</span>                             <span class="n">autheg_backend_run_1</span>
</span><span class='line'><span class="n">e889c2e713d0</span>        <span class="n">postgres</span>            <span class="s2">&quot;docker-entrypoint.s…&quot;</span>   <span class="mi">25</span> <span class="n">minutes</span> <span class="n">ago</span>      <span class="no">Up</span> <span class="mi">25</span> <span class="n">minutes</span>              <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">:</span><span class="mi">32770</span><span class="o">-&gt;</span><span class="mi">5432</span><span class="o">/</span><span class="n">tcp</span>   <span class="n">autheg_db_1</span>
</span></code></pre></td></tr></table></div></figure>


<p>將所有 container 啟動</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span><span class='line'><span class="c1"># docker-compose stop</span>
</span><span class='line'><span class="c1"># docker-compose down</span>
</span></code></pre></td></tr></table></div></figure>


<p>就能看到</p>

<ul>
<li>rails : <code>http://localhost:8080/</code></li>
<li>nuxt : <code>http://localhost:3000/</code></li>
</ul>


<p><img src="https://cdn-images-1.medium.com/max/1600/1*hoai7Zion_e9-0uZQGr1Sw.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<h1><span id="part2">Part 2: Getting them talking to each other</span></h1>

<p>新增 table, model, controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">backend</span> <span class="n">bash</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">example</span> <span class="nb">name</span><span class="ss">:string</span> <span class="ss">colour</span><span class="p">:</span><span class="n">string</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">c</span>
</span><span class='line'><span class="o">&gt;</span> <span class="o">&gt;</span> <span class="p">{</span><span class="s2">&quot;foo&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;green&quot;</span><span class="p">,</span> <span class="s2">&quot;bar&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;red&quot;</span><span class="p">,</span> <span class="s2">&quot;baz&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;purple&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="p">,</span><span class="n">c</span><span class="o">|</span> <span class="no">Example</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="n">n</span><span class="p">,</span> <span class="ss">colour</span><span class="p">:</span> <span class="n">c</span><span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編輯 controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/examples_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ExamplesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">examples</span> <span class="o">=</span> <span class="no">Example</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:colour</span><span class="p">)</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="n">examples</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/routes.rb</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:api</span><span class="p">,</span> <span class="ss">defaults</span><span class="p">:</span> <span class="p">{</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:examples</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>這個步驟目前先不做，要等後面安裝 <code>devise</code> 才需要</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/application_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">MimeResponds</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="ss">:json</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在打 <code>http://localhost:8080/api/examples</code> 就會看到</p>

<p><img src="https://cdn-images-1.medium.com/max/1600/1*76hf6XcYJM_xLdpbd0jZGw.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p>接著安裝 <a href="https://github.com/axios/axios">axios</a> &amp; <a href="https://vuetifyjs.com/en/">vuetify</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">frontend</span> <span class="n">yarn</span> <span class="n">add</span> <span class="vi">@nuxtjs</span><span class="o">/</span><span class="n">axios</span> <span class="vi">@nuxtjs</span><span class="o">/</span><span class="n">vuetify</span>
</span></code></pre></td></tr></table></div></figure>


<p>這邊是 hardcode 在上面，正式機不應該這樣寫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/nuxt.config.js</span>
</span><span class='line'>  <span class="nx">modules</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;@nuxtjs/vuetify&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;@nuxtjs/axios&#39;</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="nx">axios</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">port</span><span class="o">:</span> <span class="mi">8080</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">prefix</span><span class="o">:</span> <span class="s1">&#39;/api&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>更改畫面</p>

<p>The <code>nuxt</code> option to the link tells it to use Nuxt’s router to handle the link, rather than doing it in the browser.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/layouts/default.vue</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;app&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">app</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">toolbar</span> <span class="nx">app</span> <span class="nx">dark</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">toolbar</span><span class="o">-</span><span class="nx">title</span><span class="o">&gt;</span><span class="nx">Auth</span> <span class="nx">example</span><span class="o">&lt;</span><span class="err">/v-toolbar-title&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">spacer</span> <span class="o">/&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">btn</span> <span class="nx">icon</span> <span class="nx">nuxt</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;/&quot;</span><span class="o">&gt;&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">icon</span><span class="o">&gt;</span><span class="nx">home</span><span class="o">&lt;</span><span class="err">/v-icon&gt;&lt;/v-btn&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-toolbar&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">content</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">container</span> <span class="nx">fluid</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">nuxt</span><span class="o">/&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-container&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-content&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/v-app&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/template&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>mounted()</code> 會在 template 初始化的時候呼叫，並且會 call <code>updateExamples()</code> method，去 call <code>/examples</code> API 拿資料回來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/pages/index.vue</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">layout</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">flex</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">-</span><span class="nx">tile</span> <span class="nx">v</span><span class="o">-</span><span class="k">for</span><span class="o">=</span><span class="s2">&quot;example in examples&quot;</span> <span class="o">:</span><span class="nx">key</span><span class="o">=</span><span class="s2">&quot;example.id&quot;</span> <span class="o">:</span><span class="kr">class</span><span class="o">=</span><span class="s2">&quot;example.colour&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">-</span><span class="nx">tile</span><span class="o">-</span><span class="nx">content</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="err">/v-list-tile-content&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-list-tile&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-list&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/v-flex&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/v-layout&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/template&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">examples</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">async</span> <span class="nx">updateExamples</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">examples</span> <span class="o">=</span> <span class="nx">await</span> <span class="k">this</span><span class="p">.</span><span class="nx">$axios</span><span class="p">.</span><span class="nx">$get</span><span class="p">(</span><span class="s1">&#39;/examples&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">mounted</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">updateExamples</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著會看到 browser console 會 error，主要是因為 <a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">CROS</a> 的原因</p>

<blockquote><p>JavaScript isn’t allowed to query endpoints on other domains unless those domains set the CORS headers appropriately</p></blockquote>

<p><img src="https://cdn-images-1.medium.com/max/1600/1*5PhACGlQd7cfjiA-DqksuA.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p>接著要去 <code>backend</code> 新增 <code>cros</code> 的設定，讓 <code>frontend</code> 可以 call</p>

<p>先將 Gemfile 的 comment 打開</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rack-cors&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># autheg-backend/config/initializers/cors.rb</span>
</span><span class='line'>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">middleware</span><span class="o">.</span><span class="n">insert_before</span> <span class="mi">0</span><span class="p">,</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Cors</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">allow</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">origins</span> <span class="s1">&#39;localhost:3000&#39;</span> <span class="c1"># 也可以 * 就是所有 domain 都可以打進來</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">resource</span> <span class="s1">&#39;*&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">headers</span><span class="p">:</span> <span class="ss">:any</span><span class="p">,</span>
</span><span class='line'>      <span class="nb">methods</span><span class="p">:</span> <span class="o">[</span><span class="ss">:get</span><span class="p">,</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:put</span><span class="p">,</span> <span class="ss">:patch</span><span class="p">,</span> <span class="ss">:delete</span><span class="p">,</span> <span class="ss">:options</span><span class="p">,</span> <span class="ss">:head</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著跑</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後重新起動 container</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ctrl</span> <span class="o">+</span> <span class="n">c</span>
</span><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://cdn-images-1.medium.com/max/1600/1*LUreZEc1i0c5WfhoDCLxSQ.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<h1><span id="part3">Part 3: Authentication with Devise-JWT</span></h1>

<p>這次要加上 devise 加上 JWT</p>

<ul>
<li><a href="https://jwt.io/">JWT</a></li>
<li><a href="https://github.com/plataformatec/devise">devise</a></li>
<li><a href="https://github.com/waiting-for-dev/devise-jwt">devise-jwt</a></li>
</ul>


<p>先在 Gemfile 新增</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;devise&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;devise-jwt&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>bundle</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著先安裝 devise 參考 <a href="https://github.com/plataformatec/devise#getting-started">getting-started</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 開新的 container 安裝 devise</span>
</span><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">backend</span> <span class="n">bash</span>
</span><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">g</span> <span class="ss">devise</span><span class="p">:</span><span class="n">install</span>
</span><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">g</span> <span class="n">devise</span> <span class="n">user</span>
</span><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>到這個步驟都還沒用到 <a href="https://jwt.io/">JWT</a>，接下來要要決定如何使令牌無效，原文選擇用 <code>黑名單</code> 的方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="n">jwt_blacklist</span> <span class="ss">jti</span><span class="p">:</span><span class="ss">string</span><span class="p">:</span><span class="n">index</span> <span class="ss">exp</span><span class="p">:</span><span class="n">datetime</span>
</span></code></pre></td></tr></table></div></figure>


<p>並將欄位加上 <code>null: false</code> 和移除 <code>t.timestamps</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>  <span class="n">create_table</span> <span class="ss">:jwt_blacklists</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>    <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:jti</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">t</span><span class="o">.</span><span class="n">datetime</span> <span class="ss">:exp</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">add_index</span> <span class="ss">:jwt_blacklists</span><span class="p">,</span> <span class="ss">:jti</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 model 加上 <code>include Devise::JWT::RevocationStrategies::Blacklist</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/models/jwt_blacklist.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">JwtBlacklist</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Devise</span><span class="o">::</span><span class="no">JWT</span><span class="o">::</span><span class="no">RevocationStrategies</span><span class="o">::</span><span class="no">Blacklist</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>secret setting</h3>

<blockquote><p>在這裡遇到個問題 <a href="https://github.com/waiting-for-dev/devise-jwt/issues/56">No implicit conversion of nil into String</a>，主要是用的 rails 版本，與原文章的 ralis(5.1) 不同，導致遇到在 5.2 版本時已經沒有 <code>secrets.yml</code>&hellip; 轉而改用 <code>credentials.yml.enc</code>，所以在這裡記錄一下兩個版本的設定</p></blockquote>

<h3>Before rails 5.2</h3>

<p>接著產生一組 secret，做設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">secret</span>
</span><span class='line'><span class="c1"># 9dd044df628a496e83c668f..</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/secrets.yml</span>
</span><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="n">xxx</span>
</span><span class='line'>  <span class="ss">jwt_secret</span><span class="p">:</span> <span class="mi">9</span><span class="n">dd044df628a496e83c668f</span><span class="o">.</span><span class="n">.</span>
</span><span class='line'>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="n">xxx</span>
</span><span class='line'>  <span class="ss">jwt_secret</span><span class="p">:</span> <span class="mi">9</span><span class="n">dd044df628a496e83c668f</span><span class="o">.</span><span class="n">.</span>
</span><span class='line'>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="o">&lt;</span><span class="sx">%= ENV[&quot;SECRET_KEY_BASE&quot;] %&gt;</span>
</span><span class='line'><span class="sx">  jwt_secret: &lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;JWT_SECRET&quot;</span><span class="o">]</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/initializers/devise.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">jwt</span> <span class="k">do</span> <span class="o">|</span><span class="n">jwt</span><span class="o">|</span>
</span><span class='line'>  <span class="n">jwt</span><span class="o">.</span><span class="n">secret</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">secrets</span><span class="o">.</span><span class="n">jwt_secret</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>After rails 5.2</h3>

<ul>
<li><a href="https://medium.com/cedarcode/rails-5-2-credentials-9b3324851336">Rails 5.2 credentials</a></li>
<li><a href="https://www.viget.com/articles/storing-secret-credentials-in-rails-5-2-and-up/">Storing Secret Credentials in Rails 5.2 and Up</a></li>
<li><a href="https://keithpblog.org/post/encrypted-secrets/">Rails 5.2: encrypted secrets</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">secret</span>
</span><span class='line'><span class="c1"># 9dd044df628a496e83c668f..</span>
</span></code></pre></td></tr></table></div></figure>


<p>這時必須在 console執行 <code>EDITOR="vim" rails credentials:edit</code>，但是在 container 並沒有 <code>vim</code> 和 <code>sudo</code> 這個指令，因此要先切換成 root 去安裝 <code>vim</code> 才有辦法執行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bash</span>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">vim</span> <span class="o">-</span><span class="n">y</span> <span class="c1"># 安裝 vim </span>
</span><span class='line'><span class="no">EDITOR</span><span class="o">=</span><span class="s2">&quot;vim&quot;</span> <span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="ss">credentials</span><span class="p">:</span><span class="n">edit</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 接著編輯</span>
</span><span class='line'><span class="ss">secret_key_base</span><span class="p">:</span> <span class="n">xxx</span>
</span><span class='line'><span class="ss">jwt_secret</span><span class="p">:</span> <span class="mi">9</span><span class="n">dd044df628a496e83c668f</span><span class="o">.</span><span class="n">.</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/initializers/devise.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">jwt</span> <span class="k">do</span> <span class="o">|</span><span class="n">jwt</span><span class="o">|</span>
</span><span class='line'>  <span class="n">jwt</span><span class="o">.</span><span class="n">secret</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">[</span><span class="ss">:jwt_secret</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面 secret 設定好就可以繼續</p>

<p>設定 <code>response format</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/application_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">MimeResponds</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="ss">:json</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/models/user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="c1"># Include default devise modules. Others available are:</span>
</span><span class='line'>  <span class="c1"># :confirmable, :lockable, :timeoutable and :omniauthable</span>
</span><span class='line'>  <span class="n">devise</span> <span class="ss">:database_authenticatable</span><span class="p">,</span> <span class="ss">:registerable</span><span class="p">,</span>
</span><span class='line'>         <span class="ss">:recoverable</span><span class="p">,</span> <span class="ss">:rememberable</span><span class="p">,</span> <span class="ss">:trackable</span><span class="p">,</span> <span class="ss">:validatable</span><span class="p">,</span>
</span><span class='line'>         <span class="ss">:jwt_authenticatable</span><span class="p">,</span> <span class="ss">jwt_revocation_strategy</span><span class="p">:</span> <span class="no">JwtBlacklist</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定好跑</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>將 router 的 <code>devise_scope :user</code> 移到 api scope 裡面</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:api</span><span class="p">,</span> <span class="ss">defaults</span><span class="p">:</span> <span class="p">{</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:examples</span>
</span><span class='line'>    <span class="n">devise_for</span> <span class="ss">:users</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>restart containers</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ctrl</span> <span class="o">+</span> <span class="n">c</span>
</span><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span></code></pre></td></tr></table></div></figure>


<p>console 新增一個 User</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">c</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">email</span><span class="p">:</span> <span class="s1">&#39;test@example.com&#39;</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s1">&#39;password&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來就可以來測試 <code>user login</code> 原文推薦使用 <a href="http://yet-another-rest-client.com/">YARC</a> 不過個人偏好 <a href="https://www.getpostman.com/">Postman</a>，都可以</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">POST</span> <span class="sr">/api/use</span><span class="n">rs</span><span class="o">/</span><span class="n">sign_in</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s2">&quot;user&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="s2">&quot;email&quot;</span><span class="ss">:&quot;test@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;password&quot;</span><span class="ss">:&quot;password&quot;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://cdn-images-1.medium.com/max/1600/1*2cTvgN1s2-6VkCLknzuwXQ.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p>這裡可以看到 Response Headers 多了一個欄位</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 原本</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;x-runtime&quot;</span><span class="p">:</span> <span class="s2">&quot;0.496080&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;etag&quot;</span><span class="p">:</span> <span class="s2">&quot;W/</span><span class="se">\&quot;</span><span class="s2">9a9c93785c7d5e5890c3189efa33ca10</span><span class="se">\&quot;</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;vary&quot;</span><span class="p">:</span> <span class="s2">&quot;Origin&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;content-type&quot;</span><span class="p">:</span> <span class="s2">&quot;application/json; charset=utf-8&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;location&quot;</span><span class="p">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;cache-control&quot;</span><span class="p">:</span> <span class="s2">&quot;max-age=0, private, must-revalidate&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;transfer-encoding&quot;</span><span class="p">:</span> <span class="s2">&quot;chunked&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;x-request-id&quot;</span><span class="p">:</span> <span class="s2">&quot;c6a59d67-2551-496f-8f99-f69c5b79bd75&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="mi">201</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 加上 jwt</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;x-runtime&quot;</span><span class="p">:</span> <span class="s2">&quot;0.998534&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;etag&quot;</span><span class="p">:</span> <span class="s2">&quot;W/</span><span class="se">\&quot;</span><span class="s2">d2403cf91d814bea7a094efecd1e0ae9</span><span class="se">\&quot;</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;authorization&quot;</span><span class="p">:</span> <span class="s2">&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwic2NwIjoidXNlciIsImF1ZCI6bnVsbCwiaWF0IjoxNTMxNjY2NjA0LCJleHAiOjE1MzE2NzAyMDQsImp0aSI6ImYzMjkxMWViLTY0ZDEtNDU0NS1iNGJjLTQ5MjE2NjQwMDc1OCJ9.nP5vGhbiPfC5acnQOusY_bEZCAWF2TZ29vq28SMUX2U&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;vary&quot;</span><span class="p">:</span> <span class="s2">&quot;Origin&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;content-type&quot;</span><span class="p">:</span> <span class="s2">&quot;application/json; charset=utf-8&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;location&quot;</span><span class="p">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;cache-control&quot;</span><span class="p">:</span> <span class="s2">&quot;max-age=0, private, must-revalidate&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;transfer-encoding&quot;</span><span class="p">:</span> <span class="s2">&quot;chunked&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;x-request-id&quot;</span><span class="p">:</span> <span class="s2">&quot;4eec0e2f-5cb5-4c4d-9ed9-be9385c79a5d&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="mi">201</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著要來覆蓋掉 devise 原本的 session controller，讓我們可以將 jwt 加進去</p>

<p>先 generate devise 內建的 sessino controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">generate</span> <span class="ss">devise</span><span class="p">:</span><span class="n">controllers</span> <span class="n">users</span> <span class="o">-</span><span class="n">c</span><span class="o">=</span><span class="n">sessions</span>
</span></code></pre></td></tr></table></div></figure>


<p>並且新增一個 router，已便可以拿到 user 的 detail 資訊</p>

<blockquote><p>這裡跟原文章不太一樣，這邊是藉由 devise 內建的 generate 產生 session controller file，是放在 app/controller/users/sessions_controller.rb，原文章應該是自行建立的檔案放在 app/controller/sessions_controller.rb，因此底下的 router 設定也會有稍微不同</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/routes.rb</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:api</span><span class="p">,</span> <span class="ss">defaults</span><span class="p">:</span> <span class="p">{</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:examples</span>
</span><span class='line'>    <span class="n">devise_for</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">controllers</span><span class="p">:</span> <span class="p">{</span> <span class="ss">sessions</span><span class="p">:</span> <span class="s1">&#39;users/sessions&#39;</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">devise_scope</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">get</span> <span class="s1">&#39;users/current&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;users/sessions#show&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>將 Gemfile 裡的 <code>jbuilder</code> gem 打開</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;jbuilder&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.5&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bundle</span>
</span><span class='line'><span class="c1"># restart containers</span>
</span><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/users/sessions_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Users</span><span class="o">::</span><span class="no">SessionsController</span> <span class="o">&lt;</span> <span class="no">Devise</span><span class="o">::</span><span class="no">SessionsController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="k">super</span> <span class="p">{</span> <span class="vi">@token</span> <span class="o">=</span> <span class="n">current_token</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_token</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s1">&#39;warden-jwt_auth.token&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/views/users/create.json.jbuilder</span>
</span><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">token</span> <span class="vi">@token</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/views/users/show.json.jbuilder</span>
</span><span class='line'><span class="k">if</span> <span class="n">user_signed_in?</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">user</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">json</span><span class="o">.</span><span class="p">(</span><span class="n">current_user</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:email</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來可以測試 login 了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 登入拿 token</span>
</span><span class='line'><span class="no">POST</span> <span class="sr">/api/use</span><span class="n">rs</span><span class="o">/</span><span class="n">sign_in</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s2">&quot;user&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="s2">&quot;email&quot;</span><span class="ss">:&quot;test@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;password&quot;</span><span class="ss">:&quot;password&quot;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 在 Header 加上剛剛登入拿到的 token</span>
</span><span class='line'><span class="c1"># &quot;authorization&quot;: &quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdW ...&quot;</span>
</span><span class='line'><span class="no">GET</span> <span class="sr">/api/use</span><span class="n">rs</span><span class="o">/</span><span class="n">current</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 登出，記得也要帶 token 才知道誰要登出</span>
</span><span class='line'><span class="c1"># &quot;authorization&quot;: &quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdW ...&quot;</span>
</span><span class='line'><span class="no">DELETE</span> <span class="sr">/api/use</span><span class="n">rs</span><span class="o">/</span><span class="n">sign_out</span>
</span></code></pre></td></tr></table></div></figure>


<p>測試 ok 後，接下來在 <code>ExamplesController</code> 加上 <code>authentication</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/examples_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ExamplesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:authenticate_user!</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">examples</span> <span class="o">=</span> <span class="no">Example</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:colour</span><span class="p">)</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="n">examples</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>這時 <code>GET /api/examples</code> 就必須帶 <code>token</code> 否則會 <code>error</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">GET</span> <span class="sr">/api/ex</span><span class="n">amples</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;error&quot;</span><span class="p">:</span> <span class="s2">&quot;You need to sign in or sign up before continuing.&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來回到 frontend，會發現 <code>401 Unauthorized error</code> 所以要在 frontend 加上 <code>authentication</code></p>

<p>新增後端 <code>sign_in</code> <code>sign_out</code> <code>detail</code> API &amp; <code>@nuxtjs/auth</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">frontend</span> <span class="n">yarn</span> <span class="n">add</span> <span class="vi">@nuxtjs</span><span class="o">/</span><span class="n">auth</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/nuxt.config.js</span>
</span><span class='line'><span class="nx">modules</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="s1">&#39;@nuxtjs/vuetify&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;@nuxtjs/axios&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;@nuxtjs/auth&#39;</span>
</span><span class='line'><span class="p">],</span>
</span><span class='line'><span class="nx">auth</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">endpoints</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">login</span><span class="o">:</span>  <span class="p">{</span> <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/users/sign_in&#39;</span> <span class="p">},</span>
</span><span class='line'>    <span class="nx">logout</span><span class="o">:</span> <span class="p">{</span> <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/users/sign_out&#39;</span><span class="p">,</span> <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;delete&#39;</span> <span class="p">},</span>
</span><span class='line'>    <span class="nx">user</span><span class="o">:</span>   <span class="p">{</span> <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/users/current&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/store/index.js</span>
</span><span class='line'><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">state</span><span class="o">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">({</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>restart container 讓 frontend 吃到剛剛的設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/pages/login.vue</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">layout</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">flex</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span> <span class="nx">v</span><span class="o">-</span><span class="k">if</span><span class="o">=</span><span class="s2">&quot;$auth.state.loggedIn&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">alert</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;error&quot;</span> <span class="o">:</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;error&quot;</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="err">/v-alert&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span><span class="o">-</span><span class="nx">text</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="nx">Logged</span> <span class="k">in</span> <span class="nx">as</span> <span class="p"></span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-card-text&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span><span class="o">-</span><span class="nx">actions</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">btn</span> <span class="err">@</span><span class="nx">click</span><span class="o">=</span><span class="s2">&quot;logout&quot;</span><span class="o">&gt;</span><span class="nx">Log</span> <span class="nx">out</span><span class="o">&lt;</span><span class="err">/v-btn&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-card-actions&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-card&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span> <span class="nx">v</span><span class="o">-</span><span class="k">else</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">alert</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;error&quot;</span> <span class="o">:</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;error&quot;</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="err">/v-alert&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span><span class="o">-</span><span class="nx">text</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">form</span><span class="o">&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">text</span><span class="o">-</span><span class="nx">field</span> <span class="nx">v</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="s2">&quot;email&quot;</span> <span class="nx">label</span><span class="o">=</span><span class="s2">&quot;Email&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">text</span><span class="o">-</span><span class="nx">field</span> <span class="nx">v</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="nx">label</span><span class="o">=</span><span class="s2">&quot;Password&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">/v-form&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span><span class="o">-</span><span class="nx">actions</span><span class="o">&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">btn</span> <span class="err">@</span><span class="nx">click</span><span class="o">=</span><span class="s2">&quot;login&quot;</span><span class="o">&gt;</span><span class="nx">Log</span> <span class="k">in</span><span class="o">&lt;</span><span class="err">/v-btn&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">/v-card-actions&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-card-text&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-card&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/v-flex&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/v-layout&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/template&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">email</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">password</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">error</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">login</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$auth</span><span class="p">.</span><span class="nx">login</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">data</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">user</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">email</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">email</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">password</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">password</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}).</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">error</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">+</span> <span class="s1">&#39;&#39;</span><span class="p">})</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">logout</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$auth</span><span class="p">.</span><span class="nx">logout</span><span class="p">().</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">error</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">+</span> <span class="s1">&#39;&#39;</span><span class="p">})</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在可以到 <code>/login</code> 試試看登入了</p>

<p>如果想要讓 user 沒有 login 的狀態下都 redirect 到 <code>login page</code> 就加上</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/pages/index.vue</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">layout</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">flex</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">-</span><span class="nx">tile</span> <span class="nx">v</span><span class="o">-</span><span class="k">for</span><span class="o">=</span><span class="s2">&quot;example in examples&quot;</span> <span class="o">:</span><span class="nx">key</span><span class="o">=</span><span class="s2">&quot;example.id&quot;</span> <span class="o">:</span><span class="kr">class</span><span class="o">=</span><span class="s2">&quot;example.colour&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">-</span><span class="nx">tile</span><span class="o">-</span><span class="nx">content</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="err">/v-list-tile-content&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-list-tile&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-list&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/v-flex&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/v-layout&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/template&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">middleware</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;auth&#39;</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">examples</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">async</span> <span class="nx">updateExamples</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">examples</span> <span class="o">=</span> <span class="nx">await</span> <span class="k">this</span><span class="p">.</span><span class="nx">$axios</span><span class="p">.</span><span class="nx">$get</span><span class="p">(</span><span class="s1">&#39;/examples&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">mounted</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">updateExamples</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在可以 try 一下</p>

<p><img src="https://cdn-images-1.medium.com/max/1600/1*012-LUDxJttnF6Jtn0Cm7A.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p><img src="https://cdn-images-1.medium.com/max/1600/1*X7EYUzlYqfSEDGUlTaK7vQ.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p>參考文件</p>

<ul>
<li><a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></li>
<li><a href="https://medium.com/@fishpercolator/deploying-your-nuxt-rails-api-app-to-production-with-heroku-54efd09eec22">Deploying your Nuxt+Rails API app to production with Heroku</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSON Web Token(JWT) 簡單介紹]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/16/jwt/"/>
    <updated>2018-07-16T17:48:22+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/16/jwt</id>
    <content type="html"><![CDATA[<p>之前常常聽到 jwt，但沒有很了解，就來研究一下吧</p>

<!-- more -->


<h1>什麼是 JWT</h1>

<ul>
<li>JWT 是基於 JSON 的開放標準 (RFC 7519)</li>
<li>一般被用來在 身份提供者 和 服務提供者 間傳遞被 認證 的用戶身份訊息，以便於從資源伺服器獲取資源</li>
<li>同時也可以增加一些額外的聲明訊息，該 token 也可直接被用於認證，也可被加密</li>
<li>特別適用於分佈式站點的單點登錄（SSO）場景</li>
</ul>


<p>先來瞭解一般 session 和 jwt 的差別</p>

<h2>Session</h2>

<p>Http 協議本身是無狀態的，所以無法知道每個 request 來的是誰? 因此用戶每次 request 就必須提供帳號密碼，以便證明身份，但每次都要另外輸入帳號密碼，豈不是很麻煩?</p>

<p>所以當用戶第一次發 request 過來後，就會產生一組 token 紀錄在 db 和 session，並且將這組 token 給用戶，告訴其保存在 cookie，當下次發 request 的時候，就直接帶這組 token 以便證明身份。</p>

<h2>JWT</h2>

<p>JWT 的組成內容有三個部分，由 <code>.</code> 做區隔，最後透過這三個部分，串成一個 Jwt 字串</p>

<h3>1. Header 頭部</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;typ&#39;</span><span class="p">:</span> <span class="s1">&#39;JWT&#39;</span><span class="p">,</span> <span class="c1"># 聲明類型</span>
</span><span class='line'>  <span class="s1">&#39;alg&#39;</span><span class="p">:</span> <span class="s1">&#39;HS256&#39;</span> <span class="c1"># 加密的方法: HMAC、SHA256、RSA 進行 Base64 編碼</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>進行 base64 加密（該加密是可以對稱解密的)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. Payload 載荷</h3>

<p>這裡放聲明內容，可以說就是存放溝通訊息的地方，在定義上有 3 種聲明 (Claims)</p>

<ul>
<li>Reserved (註冊聲明)</li>
<li>Public (公開聲明)</li>
<li>Private (私有聲明)</li>
</ul>


<p>註冊聲明參數 (建議但不強制使用)</p>

<ul>
<li>iss (Issuer) - jwt簽發者</li>
<li>sub (Subject) -  jwt所面向的用戶</li>
<li>aud (Audience) - 接收jwt的一方</li>
<li>exp (Expiration Time) - jwt的過期時間，這個過期時間必須要大於簽發時間</li>
<li>nbf (Not Before) - 定義在什麼時間之前，該jwt都是不可用的</li>
<li>iat (Issued At) - jwt的簽發時間</li>
<li>jti (JWT ID) - jwt的唯一身份標識，主要用來作為一次性token,從而迴避重放攻擊</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;sub&quot;</span><span class="p">:</span> <span class="s2">&quot;1234567890&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;John Doe&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;iat&quot;</span><span class="p">:</span> <span class="mi">1516239022</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>進行 base64 加密（該加密是可以對稱解密的)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. Signature</h3>

<p>由三個部分組成</p>

<ul>
<li>header (base64後的)</li>
<li>payload (base64後的)</li>
<li>secret</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">HMACSHA256</span><span class="p">(</span><span class="n">base64UrlEncode</span><span class="p">(</span><span class="n">header</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span> <span class="o">+</span> <span class="n">base64UrlEncode</span><span class="p">(</span><span class="n">payload</span><span class="p">),</span> <span class="s1">&#39;secret&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>secret 要保存在 server 端，jwt 的 簽發驗證都必須使用這個 secret，當其他人得知這個 secret，那就意味著客戶端是可以自我簽發 jwt ，因此在任何場景都不應該外流</p></blockquote>

<p>進行 base64 加密</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span>
</span></code></pre></td></tr></table></div></figure>


<p>最後由三個部分由 <code>.</code> 組成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span><span class="o">.</span><span class="n">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</span><span class="o">.</span><span class="n">SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span>
</span></code></pre></td></tr></table></div></figure>


<h1>使用方法</h1>

<p>在發 request 的時候在 header 加入 <code>Authorization: Bearer &lt;token&gt;</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">post</span><span class="p">(</span><span class="s1">&#39;api/user/1&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">headers</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s1">&#39;Authorization&#39;</span><span class="p">:</span> <span class="s1">&#39;Bearer &#39;</span> <span class="o">+</span> <span class="n">token</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://cdn.auth0.com/content/jwt/jwt-diagram.png" alt="" /></p>

<h1>優點</h1>

<ul>
<li>跨語言，因為 json 格式大部分語言都可使用</li>
<li>可儲存一些簡單但非敏感的商業邏輯 - role ..</li>
<li>構成內容簡單，佔用 Size 小方便傳輸</li>
<li>不需在 server 保存 session，所以它易於應用的擴展</li>
</ul>


<h1>安全相關 Security</h1>

<ul>
<li>Base64 是可逆的加密方式，不適合存放敏感訊息，因為該部分是客戶端可解密的部分</li>
<li>用來加密的 Secret 要保護好，存在 server 端</li>
<li>使用 Https 協議 - 避免敏感訊息被嗅探</li>
<li>使用 HttpOnly 來防止 Cookie 被 JavaScript 讀取，從而避免跨站腳本攻擊（XSS攻擊）</li>
</ul>


<h1>JWT的適用場景</h1>

<ul>
<li>一次性驗證  ex: 信件中的連結</li>
<li>restful api 的無狀態認證</li>
<li>單點登錄+會話管理(不推薦，絕大多數情況下，傳統的 cookie-session 機制工作得更好)</li>
</ul>


<p>參考文件:</p>

<ul>
<li><a href="https://jwt.io/">JWT</a></li>
<li><a href="https://www.jianshu.com/p/576dbf44b2ae">什麼是 JWT &ndash; JSON WEB TOKEN</a></li>
<li><a href="https://hk.saowen.com/a/e86e2d932aa9b5dc3d11d639e9940eb55812f030029fac54245f6d1f9eef6f23">不要用JWT替代session管理（上）：全面瞭解Token,JWT,OAuth,SAML,SSO</a></li>
<li><a href="https://blog.leapoahead.com/2015/09/06/understanding-jwt/">JSON Web Token - 在Web應用間安全地傳遞訊息</a></li>
<li><a href="http://blog.leapoahead.com/2015/09/07/user-authentication-with-jwt/">八幅漫畫理解使用JSON Web Token設計單點登錄系統</a></li>
<li><a href="https://hk.saowen.com/a/afdc2b0fb445a973bed63330596f8588ad8f86da0faf6b5af5211ff3e29c2da8">理解JWT的使用場景和優劣</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 5.2 Credentials]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/14/rails-credentials/"/>
    <updated>2018-07-14T00:22:53+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/14/rails-credentials</id>
    <content type="html"><![CDATA[<p>rails5.2 開始 <code>config/secrets.yml</code> 已經被移除了，取而代之的是 <code>credentials</code></p>

<!-- more -->


<p>rails5.2 會新增兩個檔案</p>

<ul>
<li><p><code>config/credentials.yml.enc</code> is an encrypted file that will contain all your secret credentials，因為加密過可以很放新的推到 github</p></li>
<li><p><code>config/master.key</code> is a file containing your encryption key</p></li>
</ul>


<p><code>mater.key</code> 是用來加解密 <code>credentials.yml.enc</code>，記得不要上到 github，要放到 <code>.gitignore</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># .gitignore</span>
</span><span class='line'><span class="c1"># Ignore master key for decrypting credentials and more.</span>
</span><span class='line'><span class="sr">/config/m</span><span class="n">aster</span><span class="o">.</span><span class="n">key</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 可以看說明</span>
</span><span class='line'><span class="n">rails</span> <span class="ss">credentials</span><span class="p">:</span><span class="n">help</span>
</span></code></pre></td></tr></table></div></figure>


<p>因為經過加密，所以打開 <code>credentials.yml.enc</code> 會發現一串亂碼</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># credentials.yml.enc</span>
</span><span class='line'><span class="mi">17</span><span class="no">NEkGq</span><span class="o">/</span><span class="n">xkDO</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果要編輯檔案需要另外執行解密，才能夠進行編輯</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># EDITOR 可以改用其他編輯器 subl code 都可以</span>
</span><span class='line'><span class="no">EDITOR</span><span class="o">=</span><span class="n">vim</span> <span class="n">rails</span> <span class="ss">credentials</span><span class="p">:</span><span class="n">edit</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># aws:</span>
</span><span class='line'><span class="c1">#   access_key_id: 123</span>
</span><span class='line'><span class="c1">#   secret_access_key: 345</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Used as the base secret for all MessageVerifiers in Rails, including the one protecting cookies.</span>
</span><span class='line'><span class="ss">secret_key_base</span><span class="p">:</span> <span class="mo">00</span><span class="mi">8174812</span><span class="n">dc5a309a0de</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>離開後就會自動儲存</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 這時候就會用 master.key 進行加密</span>
</span><span class='line'><span class="no">New</span> <span class="n">credentials</span> <span class="n">encrypted</span> <span class="ow">and</span> <span class="n">saved</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>讀取檔案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">.</span><span class="n">dig</span><span class="p">(</span><span class="ss">:secret_key_base</span><span class="p">)</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">[</span><span class="ss">:secret_key_base</span><span class="o">]</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">.</span><span class="n">aws</span><span class="o">[</span><span class="ss">:access_key_id</span><span class="o">]</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">.</span><span class="n">aws</span><span class="o">[</span><span class="ss">:secret_access_key</span><span class="o">]</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">.</span><span class="n">secret_key_base</span>
</span></code></pre></td></tr></table></div></figure>


<p>並且向其他 <code>yml</code> 檔案一樣，建立一在 <code>share</code> 的資料夾中，或是新增一個環境變數 <code>RAILS_MASTER_KEY</code></p>

<h3>Environments</h3>

<p>如果想像之前一樣，不同環境有不同的 key，可以設定成跟之前的 <code>secret.yml</code> 一樣</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">aws</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">access_key_id</span><span class="p">:</span> <span class="mi">123</span>
</span><span class='line'>    <span class="ss">secret_access_key</span><span class="p">:</span> <span class="mi">345</span>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">aws</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">access_key_id</span><span class="p">:</span> <span class="mi">321</span>
</span><span class='line'>    <span class="ss">secret_access_key</span><span class="p">:</span> <span class="mi">543</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">[</span><span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="ss">:aws</span><span class="o">][</span><span class="ss">:access_key_id</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Production</h3>

<p>如果在 <code>production</code> 環境，要做以下設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/environments/production.rb</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">require_master_key</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://medium.com/cedarcode/rails-5-2-credentials-9b3324851336">Rails 5.2 credentials</a></li>
<li><a href="https://www.viget.com/articles/storing-secret-credentials-in-rails-5-2-and-up/">Storing Secret Credentials in Rails 5.2 and Up</a></li>
<li><a href="https://keithpblog.org/post/encrypted-secrets/">Rails 5.2: encrypted secrets</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 中的 Attr_accessor, Has_many, Scope 怎麼來?]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/04/rails-class/"/>
    <updated>2018-07-04T21:56:05+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/04/rails-class</id>
    <content type="html"><![CDATA[<p>相信學 rails 的一定對 <code>attr_accessor</code>, <code>has_many</code>, <code>scope</code> 這些不陌生</p>

<!-- more -->


<p>但是到底是為什麼可以在 model 裡面直接下這些 method?</p>

<p>先看一下 rails 的 model，可以這樣定義</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 5.x.x</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Klass</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 4.x.x</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Klass</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以知道 model 裡的是 <code>class</code> 並且是繼承 <code>ApplicationRecord</code> 因此判斷可能是屬於 <code>ApplicationRecord</code> 或者是更上層的某一個物件</p>

<p>在 ruby 中，所有類別的類別都是 class 類別</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Object</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># =&gt; Class</span>
</span><span class='line'><span class="no">Kernel</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># =&gt; Module</span>
</span><span class='line'><span class="no">Module</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># =&gt; Class</span>
</span><span class='line'><span class="no">Class</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># =&gt; Class</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Class 的寫法</h3>

<p>一般看到的 class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Klass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;hi&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>相當於</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 所有類別的名字都是一個常數(大寫開頭)，如果不是大寫就不會有自己的名字</span>
</span><span class='line'><span class="no">Klass</span> <span class="o">=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;hi&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>既然知道了 model 裡的 class 實際上是 <code>Class.new</code> 接下來看一下 doc <a href="https://ruby-doc.org/core-2.2.0/Class.html#method-c-new">Class new</a></p>

<blockquote><p>If a block is given, it is passed the class object, and the block is evaluated in the context of this class using class_eval.</p></blockquote>

<p>意思是指，中間那段 Block 都會用 <code>class_eval</code> 來執行，</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Klass</span> <span class="o">=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">meth1</span>
</span><span class='line'>    <span class="s2">&quot;hello&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">meth2</span>
</span><span class='line'>    <span class="s2">&quot;bye&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Klass</span><span class="o">.</span><span class="n">new</span>     <span class="c1">#=&gt; #&lt;Klass:0x007f916006aa60&gt;</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">meth1</span>          <span class="c1">#=&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">meth2</span>          <span class="c1">#=&gt; &quot;bye&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>由此推斷以下相等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Klass</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Klass</span> <span class="o">=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Klass</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'><span class="no">Klass</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>由此可知，<code>attr_accessor</code>, <code>has_many</code>, <code>scope</code> 都是由上層物件所定義好的 method</p>

<p>看一下原始碼其中一段，可看到 <code>has_many</code>，是在一個 module 裡面，應該是透過 <code>include</code> 或是 <code>extend</code> 的方式，變成了 class 的 methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails/activerecord/lib/active_record/associations.rb</span>
</span><span class='line'><span class="c1"># ...</span>
</span><span class='line'><span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'><span class="c1"># ...</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">has_many</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">scope</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">**</span><span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">extension</span><span class="p">)</span>
</span><span class='line'>    <span class="n">reflection</span> <span class="o">=</span> <span class="no">Builder</span><span class="o">::</span><span class="no">HasMany</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">extension</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Reflection</span><span class="o">.</span><span class="n">add_reflection</span> <span class="nb">self</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># ...</span>
</span></code></pre></td></tr></table></div></figure>


<p>主要是研究一下看 rails 一些特別的功能是怎麼來的，要仔細的話就要去挖原始碼才能知道了</p>

<p>參考文件</p>

<ul>
<li><a href="http://mgleon08.github.io/blog/2016/03/08/instance-eval-class-eval/">用 Instance_eval &amp; Class_eval 自己加 Method!</a></li>
<li><a href="http://mgleon08.github.io/blog/2016/02/24/include-extend-require/">Ruby 中的 Include Extend Require Load</a></li>
<li><a href="https://blog.frost.tw/posts/2017/10/22/The-ruby-s-class-is-free-Part-1/">自由的 Ruby 類別（一）</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCP BigQuery With API]]></title>
    <link href="http://mgleon08.github.com/blog/2018/06/27/gcp-bigquery-with-api/"/>
    <updated>2018-06-27T21:18:35+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/06/27/gcp-bigquery-with-api</id>
    <content type="html"><![CDATA[<p>最近剛好碰到 BigQuery，可以直接透過 API 帶 sql 指令去拉資料!</p>

<!-- more -->


<h3>安裝</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;google-cloud-bigquery&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>裝 <a href="https://cloud.google.com/sdk/docs/downloads-interactive">安 gcp SDK</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 安裝</span>
</span><span class='line'><span class="n">curl</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//s</span><span class="n">dk</span><span class="o">.</span><span class="n">cloud</span><span class="o">.</span><span class="n">google</span><span class="o">.</span><span class="n">com</span> <span class="o">|</span> <span class="n">bash</span>
</span><span class='line'><span class="c1"># Restart your shell</span>
</span><span class='line'><span class="nb">exec</span> <span class="o">-</span><span class="n">l</span> <span class="vg">$SHELL</span>
</span><span class='line'><span class="c1"># 記得在 google 那邊要先開權限，才可以指定到自己要的 project</span>
</span><span class='line'><span class="n">gcloud</span> <span class="n">init</span>
</span><span class='line'><span class="c1"># auth，但最好的話是要申請一個 憑證，並設定在環境變數(environmentvalue)</span>
</span><span class='line'><span class="n">gcloud</span> <span class="n">auth</span> <span class="n">application</span><span class="o">-</span><span class="n">default</span> <span class="n">login</span>
</span><span class='line'><span class="c1"># 取得憑證</span>
</span><span class='line'><span class="n">gcloud</span> <span class="n">auth</span> <span class="n">application</span><span class="o">-</span><span class="n">default</span> <span class="nb">print</span><span class="o">-</span><span class="n">access</span><span class="o">-</span><span class="n">token</span>
</span></code></pre></td></tr></table></div></figure>


<h3>執行</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;google/cloud/bigquery&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># This uses Application Default Credentials to authenticate.</span>
</span><span class='line'><span class="c1"># @see https://cloud.google.com/bigquery/docs/authentication/getting-started</span>
</span><span class='line'><span class="n">bigquery</span> <span class="o">=</span> <span class="no">Google</span><span class="o">::</span><span class="no">Cloud</span><span class="o">::</span><span class="no">Bigquery</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">project</span><span class="p">:</span> <span class="s2">&quot;project_id&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sql</span>     <span class="o">=</span> <span class="s2">&quot;SELECT &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;CONCAT(&#39;https://stackoverflow.com/questions/&#39;, &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;       CAST(id as STRING)) as url, view_count &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;FROM `bigquery-public-data.stackoverflow.posts_questions` &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;WHERE tags like &#39;%google-bigquery%&#39; &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;ORDER BY view_count DESC LIMIT 10&quot;</span>
</span><span class='line'><span class="n">results</span> <span class="o">=</span> <span class="n">bigquery</span><span class="o">.</span><span class="n">query</span> <span class="n">sql</span>
</span><span class='line'>
</span><span class='line'><span class="n">results</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">row</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">row</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">row</span><span class="o">[</span><span class="ss">:view_count</span><span class="o">]</span><span class="si">}</span><span class="s2"> views&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>問題</h3>

<p>在執行上有遇到一些問題，ruby 用 query 第一次去打的時候，回來的值卻會是空 Array，第二次就會有值</p>

<p>可以看到下面 <code>job_complete</code> 也是 <code>false</code>，第二次打就會是 true</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bigquery</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Sending HTTP post https://www.googleapis.com/bigquery/v2/projects/project_id/queries?</span>
</span><span class='line'><span class="c1"># 200</span>
</span><span class='line'><span class="c1"># #&lt;Hurley::Response POST https://www.googleapis.com/bigquery/v2/projects/project_id/queries == 200 (184 bytes) 11197ms&gt;</span>
</span><span class='line'><span class="c1"># Success - #&lt;Google::Apis::BigqueryV2::QueryResponse:0x007fa1021033f8</span>
</span><span class='line'><span class="c1">#  @job_complete=false,</span>
</span><span class='line'><span class="c1">#  @job_reference=</span>
</span><span class='line'><span class="c1">#   #&lt;Google::Apis::BigqueryV2::JobReference:0x007fa102102318</span>
</span><span class='line'><span class="c1">#    @job_id=&quot;job_0HlGAo3KB4WrAGz20MypIHluup9B&quot;,</span>
</span><span class='line'><span class="c1">#    @project_id=&quot;project_id&quot;&gt;,</span>
</span><span class='line'><span class="c1">#  @kind=&quot;bigquery#queryResponse&quot;&gt;</span>
</span><span class='line'><span class="c1">#  =&gt; []</span>
</span></code></pre></td></tr></table></div></figure>


<h3>原因</h3>

<p>Google 回覆</p>

<p><code>job_complete=false</code> 代表這個 bigquery job 還沒跑完.</p>

<p>在 bigquery 下 query 的時候, 執行 query 的 API call 會有一個 timeout, 當 API call 執行的時間超過這個 timeout 但是 query 還沒跑完的時候, API call 會 return HTTP code 200, 但是 query result 是空的, 並且 <code>job_complete = false.</code></p>

<p>詳細可以參考文件[1]一開頭 &ldquo;Runs a BigQuery SQL query and returns results if the query completes within a specified timeout.&rdquo; 以及同一份文件下方的 timeoutMs 以及 jobComplete 這些參數.</p>

<p>如前所述, 如果收到 job_complete = false 的 HTTP code 200 response, 表示 job 還在執行. 這時候的標準做法是去 poll GetQueryResults 這個 API (參考文件[2]) 直到 job_complete = true 再拿取結果.</p>

<ul>
<li><a href="https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query">1. query</a></li>
<li><a href="https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/getQueryResults">2. getQueryResults</a></li>
</ul>


<h3>解決方式</h3>

<p>在 new 的時候，新增 timeout 時間(也可以設定 retries)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Google</span><span class="o">::</span><span class="no">Cloud</span><span class="o">::</span><span class="no">Bigquery</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">project</span><span class="p">:</span> <span class="n">project_id</span><span class="p">,</span> <span class="ss">timeout</span><span class="p">:</span> <span class="mi">120</span><span class="p">,</span> <span class="ss">retries</span><span class="p">:</span> <span class="mi">10</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>但實際測試加上 <code>timeout</code> 卻好像沒有用..</p></blockquote>

<p>在試的時候，有用另外的方式去解決，自己去處理 job 就可以確保 job 跑完，再拿資料回來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 先設定 job</span>
</span><span class='line'><span class="n">bigquery</span><span class="o">.</span><span class="n">query_job</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 再讓它去執行 wait_until_done!</span>
</span><span class='line'><span class="n">job</span><span class="o">.</span><span class="n">wait_until_done!</span>
</span><span class='line'><span class="c1"># 最後再將結果回傳，這樣就可以確保第一次可以拉到值</span>
</span><span class='line'><span class="n">job</span><span class="o">.</span><span class="n">query_results</span>
</span></code></pre></td></tr></table></div></figure>


<p>但去看原始碼，實際上也是做一樣的動作..</p>

<blockquote><p>因該是內建的 <code>query</code> 有設定 10 秒就會 response，因此改直接去執行裡面的動作，就沒有這個限制</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">query</span> <span class="n">query</span><span class="p">,</span> <span class="ss">params</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">external</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">max</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">cache</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">standard_sql</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">legacy_sql</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>  <span class="n">job</span> <span class="o">=</span> <span class="n">query_job</span> <span class="n">query</span><span class="p">,</span> <span class="ss">params</span><span class="p">:</span> <span class="n">params</span><span class="p">,</span> <span class="ss">external</span><span class="p">:</span> <span class="n">external</span><span class="p">,</span>
</span><span class='line'>                  <span class="ss">cache</span><span class="p">:</span> <span class="n">cache</span><span class="p">,</span> <span class="ss">standard_sql</span><span class="p">:</span> <span class="n">standard_sql</span><span class="p">,</span>
</span><span class='line'>                  <span class="ss">legacy_sql</span><span class="p">:</span> <span class="n">legacy_sql</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>  <span class="n">job</span><span class="o">.</span><span class="n">wait_until_done!</span>
</span><span class='line'>  <span class="n">ensure_job_succeeded!</span> <span class="n">job</span>
</span><span class='line'>  <span class="n">job</span><span class="o">.</span><span class="n">data</span> <span class="ss">max</span><span class="p">:</span> <span class="n">max</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://cloud.google.com/bigquery/create-simple-app-api">Create A Simple Application With the API</a></li>
<li><a href="https://github.com/GoogleCloudPlatform/google-cloud-ruby/tree/master/google-cloud-bigquery">google-cloud-bigquery</a></li>
<li><a href="https://cloud.google.com/sdk/docs/downloads-interactive">安裝 gcp SDK</a></li>
<li><a href="https://cloud.google.com/bigquery/docs/bq-command-line-tool">Command Line</a></li>
<li><a href="https://cloud.google.com/docs/authentication/production">Auth</a></li>
<li><a href="https://cloud.google.com/ruby/">在 GOOGLE CLOUD PLATFORM 上執行 RUBY</a></li>
</ul>


<p>Auth</p>

<ul>
<li><a href="https://stackoverflow.com/questions/13212991/how-to-query-bigquery-programmatically-from-python-without-end-user-interaction">How to query BigQuery programmatically from Python without end-user interaction?</a></li>
<li><a href="https://cloud.google.com/sdk/gcloud/reference/auth/application-default/login">gcloud auth application-default login</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
