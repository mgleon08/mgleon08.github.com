<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leon's Blogging]]></title>
  <link href="http://mgleon08.github.com/atom.xml" rel="self"/>
  <link href="http://mgleon08.github.com/"/>
  <updated>2016-05-17T20:22:26+08:00</updated>
  <id>http://mgleon08.github.com/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby 中的數字 & BigDecimal]]></title>
    <link href="http://mgleon08.github.com/blog/2016/05/07/ruby-math/"/>
    <updated>2016-05-07T10:42:25+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/05/07/ruby-math</id>
    <content type="html"><![CDATA[<p>在程式中的運算可能跟我們平常接觸的會不一樣，ruby 也是!因此來瞭解一下吧!</p>

<!-- more -->


<p><img src="http://ithelp.ithome.com.tw/upload/images/20141005/20141005190053543124e558797_resize_600.png" alt="" /></p>

<h1>integer</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; Fixnum</span>
</span><span class='line'><span class="p">(</span><span class="mi">2</span><span class="o">/</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; Fixnum</span>
</span><span class='line'><span class="c1">#20 位數會開始變成 Bignum</span>
</span><span class='line'><span class="p">(</span><span class="s1">&#39;1&#39;</span><span class="o">+</span><span class="s1">&#39;0&#39;</span><span class="o">*</span><span class="mi">18</span><span class="p">)</span><span class="o">.</span><span class="n">to_i</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; Fixnum</span>
</span><span class='line'><span class="p">(</span><span class="s1">&#39;1&#39;</span><span class="o">+</span><span class="s1">&#39;0&#39;</span><span class="o">*</span><span class="mi">19</span><span class="p">)</span><span class="o">.</span><span class="n">to_i</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; Bignum</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="c1">#=&gt; 1</span>
</span></code></pre></td></tr></table></div></figure>


<h1>float</h1>

<p>只要分子或分母出現浮點數，結果才會是 float</p>

<blockquote><p>兩個運算元皆為整數，則會進行截尾整數除法(truncating integer division)運算</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">3</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; Float</span>
</span><span class='line'><span class="mi">1</span><span class="o">/</span><span class="mi">2</span>
</span><span class='line'><span class="c1">#=&gt; 0</span>
</span><span class='line'><span class="mi">1</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'><span class="c1">#=&gt; 0.5</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="mi">2</span>
</span><span class='line'><span class="c1">#=&gt; 0.5</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'><span class="c1">#=&gt; 1.0</span>
</span></code></pre></td></tr></table></div></figure>


<h1>運算</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">餘數</span>
</span><span class='line'><span class="mi">10</span><span class="o">%</span><span class="mi">3</span>
</span><span class='line'><span class="c1">#=&gt; 1</span>
</span><span class='line'>
</span><span class='line'><span class="err">次方</span>
</span><span class='line'><span class="mi">2</span><span class="o">**</span><span class="mi">10</span>
</span><span class='line'><span class="c1">#=&gt; 1024</span>
</span><span class='line'><span class="mi">2</span><span class="o">**-</span><span class="mi">1</span>
</span><span class='line'><span class="c1">#=&gt; (1/2)</span>
</span><span class='line'>
</span><span class='line'><span class="err">絕對值</span>
</span><span class='line'><span class="o">-</span><span class="mi">1234</span><span class="o">.</span><span class="n">abs</span>
</span><span class='line'><span class="c1">#=&gt; 1234</span>
</span><span class='line'>
</span><span class='line'><span class="err">四捨五入</span>
</span><span class='line'><span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">round</span>
</span><span class='line'><span class="c1">#=&gt; 3</span>
</span><span class='line'><span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">round</span>
</span><span class='line'><span class="c1">#=&gt; 5</span>
</span><span class='line'>
</span><span class='line'><span class="err">回傳小於該數學的最大整數</span>
</span><span class='line'><span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">floor</span>
</span><span class='line'><span class="c1">#=&gt; 2</span>
</span><span class='line'><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">floor</span>
</span><span class='line'><span class="c1">#=&gt; -3</span>
</span><span class='line'>
</span><span class='line'><span class="err">回傳大於該數學的最小整數</span>
</span><span class='line'><span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">ceil</span>
</span><span class='line'><span class="c1">#=&gt; 3</span>
</span><span class='line'><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">ceil</span>
</span><span class='line'><span class="c1">#=&gt; -2</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#只適用於Fixnum</span>
</span><span class='line'><span class="mi">2</span><span class="o">.</span><span class="n">zero?</span>
</span><span class='line'><span class="c1">#=&gt; false</span>
</span><span class='line'><span class="mi">0</span><span class="o">.</span><span class="n">zero?</span>
</span><span class='line'><span class="c1">#=&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">0</span> <span class="o">/</span> <span class="mi">0</span>    <span class="c1"># Infinity</span>
</span><span class='line'><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span> <span class="o">/</span> <span class="mi">0</span>   <span class="c1"># -Infinity</span>
</span><span class='line'><span class="mi">0</span><span class="o">.</span><span class="mi">0</span> <span class="o">/</span> <span class="mi">0</span><span class="o">.</span><span class="mi">0</span>  <span class="c1"># NaN</span>
</span></code></pre></td></tr></table></div></figure>


<h1>BigDecimal</h1>

<p>主要是用來做精確的數字</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sum</span> <span class="o">=</span> <span class="n">sum</span> <span class="o">+</span> <span class="mi">0</span><span class="o">.</span><span class="mo">0001</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">print</span> <span class="n">sum</span>
</span><span class='line'><span class="c1">#=&gt; 0.9999999999999062</span>
</span><span class='line'><span class="c1">#因為在電腦中的浮點數其實只是近似值，浮點數中的整數可能只是精確度到達一定程度而已</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;bigdecimal&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="no">BigDecimal</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;0&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sum</span> <span class="o">=</span> <span class="n">sum</span> <span class="o">+</span> <span class="no">BigDecimal</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;0.0001&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">print</span> <span class="n">sum</span>
</span><span class='line'><span class="c1">#=&gt; 0.1E1</span>
</span><span class='line'>
</span><span class='line'><span class="n">E</span><span class="err">代表後面有幾個</span><span class="mi">10</span><span class="err">的次方</span>
</span><span class='line'><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="no">E1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">1</span> <span class="o">*</span> <span class="p">(</span><span class="mi">10</span><span class="o">**</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; 1.0</span>
</span><span class='line'><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="no">E1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="mi">10</span><span class="o">**</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; 2.0</span>
</span><span class='line'><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="no">E2</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="mi">10</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; 20.0</span>
</span><span class='line'><span class="mi">2</span><span class="no">E3</span>   <span class="o">=</span>   <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="mi">10</span><span class="o">**</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; 2000.0</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://ruby-doc.org/stdlib-1.9.3/libdoc/bigdecimal/rdoc/BigDecimal.html">BigDecimal</a></p>

<p>參考文件：<br/>
<a href="http://blog.annideas.com/2014/10/05/ruby-girl-5-ruby-math-intro/">Ruby的數學跟老師教的數學都不一樣？</a><br/>
<a href="https://gradyli.wordpress.com/2007/11/16/numeric-class/">[Ruby教學]Numeric Class</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Includes Preload Joins Eager_load References]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/21/includes-preload-joins-eager-load-references/"/>
    <updated>2016-04-21T00:41:09+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/21/includes-preload-joins-eager-load-references</id>
    <content type="html"><![CDATA[<p>rails 當中有很多方便可以做資料查詢的功能，可以好好研究一下。</p>

<!-- more -->


<h1>modle</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Blog</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:posts</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># t.string   &quot;name&quot;</span>
</span><span class='line'>  <span class="c1"># t.string   &quot;author&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:blog</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># t.string   &quot;title&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>includes</h1>

<ul>
<li><code>includes</code> 主要用於可以直接將相關連的資料，在同一筆查詢，一起撈出來</li>
<li>two separate queries</li>
<li>跟 preload 類似，加上 <code>reference</code> 則和 <code>eager_load</code> 類似</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'><span class="no">Blog</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span>
</span><span class='line'><span class="no">Post</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;posts&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 3, name: &quot;Blog 3&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;]&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 回傳所有 User 和 關聯的 posts</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到後面有 <code>IN (1, 2, 3)</code>，就是將上面一筆一筆查詢，變成這種方式一次撈出來。這樣在 <code>view</code> 中執行 <code>user.posts</code> 就不會再去資料庫查詢，因為已經都先撈出來了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#也可以一次 includes 多個關聯</span>
</span><span class='line'>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">posts</span><span class="p">:</span> <span class="ss">:profile</span><span class="p">)</span>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">posts</span><span class="p">:</span> <span class="o">[</span><span class="ss">:foo</span><span class="p">,</span> <span class="ss">:bar</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="c1">#blog 關聯到 posts，posts 關聯到 foo, bar</span>
</span><span class='line'>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">comments</span><span class="p">:</span> <span class="o">[</span><span class="ss">:user</span><span class="p">,</span> <span class="p">{</span> <span class="ss">replies</span><span class="p">:</span> <span class="o">[</span><span class="ss">:user</span><span class="o">]</span> <span class="p">}</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="c1">#更複雜的關聯</span>
</span></code></pre></td></tr></table></div></figure>


<h1>preload</h1>

<ul>
<li>跟 includes 類似，主要差別在於無法用 where 條件去查關聯到的 table 欄位</li>
<li>two separate queries</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">preload</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Blog</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span>
</span><span class='line'>  <span class="no">Post</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;posts&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 3, name: &quot;Blog 3&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;]&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#無法透過關聯的欄位做搜尋</span>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">preload</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">posts</span><span class="p">:</span> <span class="p">{</span> <span class="ss">title</span><span class="p">:</span><span class="s2">&quot;Post 1-1&quot;</span> <span class="p">}</span> <span class="p">)</span>
</span><span class='line'>  <span class="no">Blog</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;title&quot;</span><span class="p">,</span> <span class="s2">&quot;Post 1-1&quot;</span><span class="o">]]</span>
</span><span class='line'><span class="o">=&gt;</span><span class="c1"># ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: posts.title: SELECT &quot;blogs&quot;.* FROM &quot;blogs&quot; WHERE &quot;posts&quot;.&quot;title&quot; = ?</span>
</span><span class='line'>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">preload</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;posts.title = &#39;Post 1-1&#39;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">references</span><span class="p">(</span><span class="ss">:post</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Blog</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">WHERE</span> <span class="p">(</span><span class="n">posts</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">&#39;Post 1-1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span><span class="c1"># ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: posts.title: SELECT &quot;blogs&quot;.* FROM &quot;blogs&quot; WHERE (posts.title = &#39;Post 1-1&#39;)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#用 includes 就沒問題，不過這就是 eager_load</span>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">posts</span><span class="p">:</span> <span class="p">{</span> <span class="ss">title</span><span class="p">:</span><span class="s2">&quot;Post 1-1&quot;</span> <span class="p">}</span> <span class="p">)</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t0_r0</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="no">AS</span> <span class="n">t0_r1</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;author&quot;</span> <span class="no">AS</span> <span class="n">t0_r2</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r3</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t1_r0</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="no">AS</span> <span class="n">t1_r1</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r2</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r3</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r5</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;title&quot;</span><span class="p">,</span> <span class="s2">&quot;Post 1-1&quot;</span><span class="o">]]</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;]&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#另一種寫法 </span>
</span><span class='line'> <span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;posts.title = &#39;Post 1-1&#39;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">references</span><span class="p">(</span><span class="ss">:post</span><span class="p">)</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t0_r0</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="no">AS</span> <span class="n">t0_r1</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;author&quot;</span> <span class="no">AS</span> <span class="n">t0_r2</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r3</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t1_r0</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="no">AS</span> <span class="n">t1_r1</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r2</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r3</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r5</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">WHERE</span> <span class="p">(</span><span class="n">posts</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s1">&#39;Post 1-1&#39;</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;]&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>joins (inner join)</h1>

<p><code>joins</code> 則是關聯其他資料庫，可以進行查詢，但並不會將關聯的資料拉出來。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Blog</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">INNER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, ...]&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">count</span>
</span><span class='line'>   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="no">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">INNER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">15</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#因為資料庫裡面總共有四個，但只有三個室有關聯到 posts，因此 joins 會回傳有關聯的，blog</span>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="no">DISTINCT</span> <span class="no">COUNT</span><span class="p">(</span><span class="no">DISTINCT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span><span class="p">)</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">INNER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#回傳所有，有 post 的 blog</span>
</span><span class='line'><span class="c1">#因為同一個 blog 可能有多個 post ，這樣就會撈出重複的 blog 出來 ， 一個 post 一個 blog，因此可以用 .uniq 來去除重複的資料。</span>
</span><span class='line'><span class="c1">#如果是一對一就不會有這個問題了</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#eager_load 則是透過 rails filter 後的</span>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">eager_load</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t0_r0</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="no">AS</span> <span class="n">t0_r1</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;author&quot;</span> <span class="no">AS</span> <span class="n">t0_r2</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r3</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t1_r0</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="no">AS</span> <span class="n">t1_r1</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r2</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r3</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r5</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 3, name: &quot;Blog 3&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 4, name: &quot;Blog 2&quot;, author: nil, created_at: &quot;2016-04-20 16:01:54&quot;, updated_at: &quot;2016-04-20 16:01:54&quot;&gt;]&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#因為是 LEFT OUTER JOINed 所以沒有關聯的也會抓進來</span>
</span><span class='line'> <span class="no">Blog</span><span class="o">.</span><span class="n">eager_load</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">count</span>
</span><span class='line'>   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="no">COUNT</span><span class="p">(</span><span class="no">DISTINCT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span><span class="p">)</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">4</span>
</span></code></pre></td></tr></table></div></figure>


<p>回傳的是所有有 <code>post</code> 的 <code>blog</code>，但並不會將 <code>post</code> 資料撈出來，只是去做比對，因此再用 <code>blog.posts</code> ，一樣會去資料庫中撈出資料。</p>

<h1>joins和include的區別</h1>

<ul>
<li>include 主要是將其他關聯的 table 一起拉進來，後續查詢時，就不會再去查</li>
<li>joins 則是將兩張表合成一張（必須id有對到），再透過欄位去做塞選</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'><span class="c1">#回傳所有的 Blog，並將相關聯的 post 一併做查詢</span>
</span><span class='line'><span class="c1">#後續再去關聯的話就不會去 query</span>
</span><span class='line'>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'><span class="c1">#查詢所有包含 user_id 的 posts ，並回傳該 post 所屬的 blog</span>
</span><span class='line'><span class="c1">#因此 has_many 若有很多 posts 屬於同一個 blog 就會回傳很多次重複的( 或是用 `distinct` User.joins(:posts).select(&#39;distinct users.*&#39;))，可用 uniq 去掉，belong_to &amp; has_one 則不會</span>
</span><span class='line'><span class="c1">#後續再去關聯的話，還是會去 query</span>
</span></code></pre></td></tr></table></div></figure>


<h1>eager_load</h1>

<ul>
<li>One query, LEFT OUTER JOINed in any query rather than loaded separately.</li>
<li>Works just the same as <code>includes</code> + <code>references</code></li>
<li>因此要小心，includers 後在接上 references 就會變成 eager_load</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">eager_load</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t0_r0</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="no">AS</span> <span class="n">t0_r1</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;author&quot;</span> <span class="no">AS</span> <span class="n">t0_r2</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r3</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t1_r0</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="no">AS</span> <span class="n">t1_r1</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r2</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r3</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r5</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 2, name: &quot;Blog 2&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 3, name: &quot;Blog 3&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;, #&lt;Blog id: 4, name: &quot;Blog 2&quot;, author: nil, created_at: &quot;2016-04-20 16:01:54&quot;, updated_at: &quot;2016-04-20 16:01:54&quot;&gt;]&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">eager_load</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Blog 1&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t0_r0</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="no">AS</span> <span class="n">t0_r1</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;author&quot;</span> <span class="no">AS</span> <span class="n">t0_r2</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r3</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t1_r0</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="no">AS</span> <span class="n">t1_r1</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r2</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r3</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r5</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;Blog 1&quot;</span><span class="o">]]</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;]&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">eager_load</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Blog 1&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">posts</span><span class="p">:</span> <span class="p">{</span><span class="ss">title</span><span class="p">:</span> <span class="s1">&#39;Post 1-1&#39;</span><span class="p">})</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t0_r0</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="no">AS</span> <span class="n">t0_r1</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;author&quot;</span> <span class="no">AS</span> <span class="n">t0_r2</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r3</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t1_r0</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="no">AS</span> <span class="n">t1_r1</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r2</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r3</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r5</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="o">=</span> <span class="p">?</span> <span class="no">AND</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;Blog 1&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;title&quot;</span><span class="p">,</span> <span class="s2">&quot;Post 1-1&quot;</span><span class="o">]]</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;]&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># includes + references </span>
</span><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Blog 1&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">posts</span><span class="p">:</span> <span class="p">{</span><span class="ss">title</span><span class="p">:</span> <span class="s1">&#39;Post 1-1&#39;</span><span class="p">})</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t0_r0</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="no">AS</span> <span class="n">t0_r1</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;author&quot;</span> <span class="no">AS</span> <span class="n">t0_r2</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r3</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t1_r0</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="no">AS</span> <span class="n">t1_r1</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r2</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r3</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r5</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="o">=</span> <span class="p">?</span> <span class="no">AND</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;Blog 1&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;title&quot;</span><span class="p">,</span> <span class="s2">&quot;Post 1-1&quot;</span><span class="o">]]</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;]&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>references</h1>

<ul>
<li>只有在 includes 可以使用，主要是讓 includes 像 eager_load</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Blog</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Blog 1&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">references</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t0_r0</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="no">AS</span> <span class="n">t0_r1</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;author&quot;</span> <span class="no">AS</span> <span class="n">t0_r2</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r3</span><span class="p">,</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t0_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">AS</span> <span class="n">t1_r0</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;title&quot;</span> <span class="no">AS</span> <span class="n">t1_r1</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r2</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">AS</span> <span class="n">t1_r3</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;created_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r4</span><span class="p">,</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;updated_at&quot;</span> <span class="no">AS</span> <span class="n">t1_r5</span> <span class="no">FROM</span> <span class="s2">&quot;blogs&quot;</span> <span class="no">LEFT</span> <span class="no">OUTER</span> <span class="no">JOIN</span> <span class="s2">&quot;posts&quot;</span> <span class="no">ON</span> <span class="s2">&quot;posts&quot;</span><span class="o">.</span><span class="s2">&quot;blog_id&quot;</span> <span class="o">=</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;blogs&quot;</span><span class="o">.</span><span class="s2">&quot;name&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;Blog 1&quot;</span><span class="o">]]</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::Relation [#&lt;Blog id: 1, name: &quot;Blog 1&quot;, author: &quot;someone&quot;, created_at: &quot;2016-04-20 14:26:01&quot;, updated_at: &quot;2016-04-20 14:26:01&quot;&gt;]&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://jbcdn2.b0.upaiyun.com/2013/05/SQL-Joins.jpg" alt="" /></p>

<p>官方資料：<br/>
<a href="http://guides.rubyonrails.org/active_record_querying.html">Active Record Query Interface</a><br/>
<a href="http://rails.ruby.tw/active_record_querying.html">Active Record 查詢</a></p>

<p>參考資料：<br/>
<a href="https://ihower.tw/rails4/performance.html">網站效能</a><br/>
<a href="https://ihower.tw/rails4/activerecord-relationships.html">ActiveRecord - 資料表關聯</a><br/>
<a href="http://motion-express.com/blog/20141028-rails-include-join-avoid-n-1-query">Rails使用 include 和 join 避免 N+1 query</a><br/>
<a href="http://blog.ifyouseewendy.com/blog/2015/11/11/preload-eager_load-includes-references-joins/">preload, eager_load, includes, references, and joins in Rails</a><br/>
<a href="http://blog.bigbinary.com/2013/07/01/preload-vs-eager-load-vs-joins-vs-includes.html">Preload, Eagerload, Includes and Joins</a><br/>
<a href="http://blog.arkency.com/2013/12/rails4-preloading/">3 ways to do eager loading (preloading) in Rails 3 &amp; 4</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[淺談 Backend 課程筆記 3]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/backend-lesson-notes-3/"/>
    <updated>2016-04-19T22:29:24+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/backend-lesson-notes-3</id>
    <content type="html"><![CDATA[<p>課程筆記3</p>

<!-- more -->


<h1>理想的 Backend 系統</h1>

<h3>越少模組越好</h3>

<ul>
<li>需要監控和管理的模組變越少</li>
<li>團隊要掌握的語言/技術變越少</li>
</ul>


<h3>通用 vs 專精</h3>

<p>ex : 是否使用ElasticSearch?</p>

<ul>
<li>需要 tokenization 嗎？(和民居食屋，若打民居是否要顯示出來?)</li>
<li>能不能先在 RDBMS 做 search?</li>
</ul>


<h3>安全 vs 快速開發</h3>

<p>ex : 應該把呼叫 GCM 放到獨立的 worker?</p>

<ul>
<li>多一個 worker，多一個 worker 要管，也要建立 MQ server</li>
</ul>


<h3>沒有 Single Point of Failure</h3>

<p>所謂「SPOF」是指當某個零件故障會造成整個系統無法正當運作，那麼這個零件就是整個系統中
的 Single Points Of Failure。</p>

<ul>
<li>每一系統模組(System Component)，都應該要有 standby instance (備用實例)

<ul>
<li>但 standby instance 只能保護單一隨機性的災難</li>
</ul>
</li>
<li>一旦監控系統發現某一模組當掉，就把它停掉，並用 standby instance 取代</li>
<li>一旦某模組當掉，你的設計應該讓系統停在 Consistent 狀態

<ul>
<li>除非為了效能，而故意犧牲 Consistency</li>
</ul>
</li>
</ul>


<p>/ping/ 回傳的是 204 無法發現有什麼問題，正確是回傳 200</p>

<h3>對 Surge 有抵抗性</h3>

<ul>
<li>動態加開 AS 會有幫助，但加開的速度不一定能追上流量</li>
<li>READ 可以用 Cache 支撐，但 Write 不行</li>
<li>吃大量資源的 end point 可以考慮轉用 async 模式</li>
<li>別再 AS 上執行 async API 的工作，會害 AS 當掉</li>
</ul>


<h3>不需要即時人員支援</h3>

<ul>
<li>停用 Load Balancer 下，一台 AS 當掉便自動停用，只讓系統損失 1/n 的運算能力</li>
<li>監察系統發現 Master RDBMS 當掉後，應該懂得自動把 Slave DB 提升成 Master 並進行運算</li>
<li>交給 Job Farm 的工作，在本來的 Worker Instance 當掉後，會自動由其他 Worker 重做</li>
</ul>


<h1>Backend 架構</h1>

<h3>DNS</h3>

<ul>
<li>對大型網站，會有多個 data center 的，DNS 會回答該地區最近的 data center 的 IP</li>
<li>對大型網站，一個 domain name 可能對應多個 IP

<ul>
<li>單一 load balancer 有其物理極限的(頻寬/CPU)，因此要多個 load balancer</li>
</ul>
</li>
</ul>


<h3>Load Balancer</h3>

<ul>
<li>通常 LB 會把 HTTPS 轉成 HTTP ，然後才把 Request 轉給 AS</li>
<li>高階的 LB 能根據 url(甚至是 Request body) 做 routing

<ul>
<li> AWS 沒有(陽春的LoadBalance)，HAproxy 有，所以可以在 EC2 上架 HAproxy，就能依 url、request body 做 routing，但是AWS ELB的網路流量比EC2好很多</li>
</ul>
</li>
<li>AS 架構沒問題的話，round robin （輪詢） 跟 least conn （最少連線數） 沒什麼差別</li>
<li>如果 AS 不是 Stateless

<ul>
<li>source 只能在非流動用戶上(手機ip會改)</li>
<li>sticky 需要 LB 解讀 Request 並抽取像 SessionId 的變數，然後根據之前歷史派到特定 AS 上。對 LB 有極高性能要求。</li>
</ul>
</li>
</ul>


<blockquote><p>Stateless（Client與Server的溝通不需依賴狀態，每一個 Request 必須包含所有需要的資訊，而不需依賴其他 Request 的狀態。）</p></blockquote>

<p>參考文件：<br/>
<a href="https://dotblogs.com.tw/jimmyyu/2010/10/16/difference-between-stateful-and-stateless">Stateful與Stateless</a><br/>
<a href="http://caryhsu.blogspot.tw/2011/03/sql-server-load-balancing.htmll">SQL Server 負載平衡架構介紹(Load Balancing)</a></p>

<h3>Application Server</h3>

<ul>
<li>好的 AS 應該是 Stateless

<ul>
<li> 這樣可以是流量加開 AS</li>
<li> LB 便不用昂貴的 sticky mode 了</li>
</ul>
</li>
<li>AS中 ，不應跑會吃大量資源的工作

<ul>
<li> LB才能使用 round robin / random 模式</li>
<li> AS 才不會凍結掉</li>
</ul>
</li>
</ul>


<h3>Long Polling Server (LPS)</h3>

<ul>
<li>如果要將 message 推送到手機，請使用 GCM/APNS ，別自行架 Server</li>
<li>除非系統流量很大，用 AS 來處理 Long Polling 變好</li>
<li>使用獨立 LPS 的好處

<ul>
<li>你能專精負責 long polling 語言</li>
<li>不用擔心 AS execution worker pool 被用光</li>
</ul>
</li>
</ul>


<p>參考文件：<br/>
<a href="http://blogger.gtwang.org/2014/01/websocket-protocol.html">WebSocket 通訊協定簡介：比較 Polling、Long-Polling 與 Streaming 的運作原理</a></p>

<h3>Main DB</h3>

<ul>
<li>別輕易使用 noSQL （noSQL 沒有 transation）</li>
<li>RAID 只能保護單一 SSD 故障</li>
<li>Master/Slave Replication 保護不了壞人刪除數據</li>
<li>只有離線儲存的備份數據，才真正安全</li>
<li>效能，數據安全性，低成本 三者最多只能要兩種</li>
</ul>


<h3>Cache cluster</h3>

<ul>
<li>對小型系統，單獨一台大記憶體的機器做 Caching 也許比較方便</li>
<li>對大型系統，單獨一台機器做 Caching 不合成本效益，所以要用多台機器</li>
<li>要知道物件放在哪台機器上，最簡單方法 MD5(key) mod n</li>
<li>為 Cache cluster 增加/刪減機器時，小心別引發 total cache miss</li>
</ul>


<h3>Hot Data DB</h3>

<ul>
<li>跟 cache 是不同的</li>
<li>暫時性的，丟失了也死不了的數據</li>
<li>在為了效能犧牲 Consistency 的情況下，要延後寫入 main DB 的數據</li>
<li>一般來說 Hot Data 數據量不會太多，所以不需要 Clustering</li>
<li>建議做 Replication 去保護資料</li>
</ul>


<h3>Search DB</h3>

<ul>
<li>沒錢別額外架 Search DB</li>
<li>數據儲存結構有特別為搜尋做特化</li>
<li>有 tokenization 和 auto correction 等等幫助搜尋的重要功能</li>
<li>很多時候 Search DB 的數據和 Main DB 的數據會有時間差</li>
</ul>


<h3>Report DB</h3>

<ul>
<li>專門的 Report DB，很可能採用 denormalized schema

<ul>
<li>需要高度專業性</li>
<li>需要很多很多的錢</li>
</ul>
</li>
<li>Random Sampling 是否能解決問題</li>
</ul>


<h3>File DB</h3>

<ul>
<li>有人說 File 應該以 BLOB 物件被放到 Main DB，但是..

<ul>
<li>一般建立後極少被改動</li>
<li>RDBMS 一般用上系統中最高級的 SSD，而 File 一般不需要這種效能</li>
</ul>
</li>
<li>延伸思考，在檔案名字中額外加上 MD5，能解決很多 File caching 問題</li>
</ul>


<h3>Message Queue</h3>

<ul>
<li>Message

<ul>
<li>會裝有 Json/XML 格式的工作內容</li>
<li>會有 MessageId</li>
</ul>
</li>
<li>Producer

<ul>
<li>訊息生產者，一般來說是 AS 要建立工作</li>
<li>一個 Queue 能有多於一個 Producer</li>
</ul>
</li>
<li>Consumer

<ul>
<li>訊息消耗者，一般來說是 Worker 要執行工作</li>
<li>Queue 中沒有 Message 時，Consumer 會被 blocking，不佔用 CPU</li>
<li>一個 Queue 能有多於一個 Consumer</li>
<li>一份訊息，在同一時間內只會讓一個 Consumer 收到</li>
</ul>
</li>
<li>有些 MQ 不保證絕對性的 FIFO 和 no-duplicate，使用上請注意(ex:Amazon SQS)</li>
<li>如果應用較簡單，Redia 某程度上也能當做 MQ 使用</li>
<li>沒有人和 message 佔用 CPU 為 0，因為 worker 都被 blocked</li>
</ul>


<h3>Worker Farm</h3>

<ul>
<li>一個 Message 同一時間只會一個 worker 收到</li>
<li>可以視 Queue 中的剩餘 Message 量，動態決定增減 Worker Server</li>
</ul>


<h3>Cron job worker</h3>

<ul>
<li>跟async task worker 有點不同，只在預定時間睡醒，把工作做完便死亡</li>
<li>為了不要深夜撲火，應該在多於一台機器上執行

<ul>
<li>為了一份工作不被多個 worker 執行，需要 execution control 機制</li>
<li>Database-as-IPC 是很嚴重的 anti-pattren，但如果有很少量的 data exchange 還算可以接受</li>
</ul>
</li>
<li>理想的 Cron job 即使當掉，也無需 data cleanup，單純重跑即可</li>
<li>同時間多個 Worker 執行時，也懂的自動分工，不會出錯</li>
</ul>


<p>簡報：<br/>
<a href="https://github.com/TritonHo/slides">TritonHo/slides</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[淺談 Backend 課程筆記 2]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/backend-lesson-notes-2/"/>
    <updated>2016-04-19T22:29:22+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/backend-lesson-notes-2</id>
    <content type="html"><![CDATA[<p>課程筆記2</p>

<!-- more -->


<h1>淺談系統安全</h1>

<ul>
<li>所謂的安全，都是基於 <code>Design Flaw（設計錯誤）</code> 導致的</li>
<li>大多都是網路上看別人範例，指理解一半然後再自行創作，導致嚴重安全問題

<ul>
<li>前人的架構大都經過充分論證，相對上不易有漏洞（ex:https）</li>
</ul>
</li>
<li>Denfense-in-depth

<ul>
<li>多種的安全措施，即使一種安全措施被攻陷，還是有其他安全措施能夠將傷害減到最低</li>
<li>心理戰，讓 hacker 需要一直花時間來破解讓他不耐煩</li>
</ul>
</li>
<li>沒人會花時間去 hack 系統，除非有錢!!（氣象局 vs 銀行）</li>
</ul>


<h1>淺談 HTTPS</h1>

<ul>
<li>HTTPS = HTTP + TLS（前身 SSL）</li>
<li>2016年標準，所有網站都應該使用 HTTPS

<ul>
<li>Google 搜尋也會加分</li>
</ul>
</li>
<li>能有效防止各式各樣的攻擊，但不要..

<ul>
<li>使用太舊的加密方法，ex：DES</li>
<li>CNNIC</li>
</ul>
</li>
</ul>


<p>參考文件：<br/>
<a href="https://zh.wikipedia.org/wiki/%E5%82%B3%E8%BC%B8%E5%B1%A4%E5%AE%89%E5%85%A8%E5%8D%94%E8%AD%B0">傳輸層安全協議TLS</a></p>

<h3>HTTPS流程</h3>

<ul>
<li>在TCP handshake 後 server 把證書(公開)傳給 client</li>
<li>Client 收到證書後，根據發行者資訊，再拿出存於 Client 的發行者 public key 對證書驗證</li>
<li>Client 產生對稱鑰匙，並且以證書中的 public key 進行加密，傳給 Server

<ul>
<li>對稱式比非對稱式所使用的 CPU 還小</li>
</ul>
</li>
<li>Server 使用證書中的 private key 進行解密，拿到 Client 傳來的對稱鑰匙</li>
<li>指此 TLS handshaking 已經完成。之後通訊權使用對稱鑰匙加密。其他人則無法。</li>
</ul>


<blockquote><p>現在 https 不安全是因為中國的 CNNIC，所以要將中國的 CNNIC 憑證都刪除!! 中國的銀行也都是用美國的憑證</p></blockquote>

<h1>Load Balancing</h1>

<ul>
<li>有用 Load Balancing 會將 HTTPS 放在 LB，在用 HTTP 和 Application Server 連線</li>
</ul>


<p>參考文件：<br/>
<a href="http://www.ithome.com.tw/node/81790">負載平衡是分散式資源串連之鑰</a></p>

<h1>MITM 中間人攻擊</h1>

<p>參考文件：<br/>
<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB">MITM</a><br/>
<a href="http://mmdays.com/2008/11/10/mitm/">神不知，鬼不覺，你的帳號密碼是如何被竊聽的？─中間人攻擊〈Man-in-the-middle Attack〉初探</a></p>

<h1>One way hashing （H）</h1>

<ul>
<li>hash 接受任意長度的資料，然後輸出固定長度結果的東西</li>
<li>One way 的特性，只看 <code>function output</code> 和 <code>function</code> 本身，不能輕易找出 <code>funciton input</code></li>
<li>將用戶密碼進行 H 然後將結果存到資料庫，之後用戶登入，把用戶的password 進行一次 hashing 跟資料庫的 password 比對即可</li>
</ul>


<h3>Rainbow attack</h3>

<ul>
<li>將大量的 string 進行 H，只要這個表夠大，就能夠去比對</li>
</ul>


<p><a href="https://zh.wikipedia.org/wiki/%E5%BD%A9%E8%99%B9%E8%A1%A8">彩虹表Rainbow Table</a> 是壞人建立表時，大幅節省空間的手法</p>

<p>參考文件：<br/>
<a href="http://recover.pixnet.net/blog/post/4535917-rainbow-hash-table-%E8%88%87%E5%AF%86%E7%A2%BC%E7%A0%B4%E8%A7%A3">Rainbow Hash Table 與密碼破解</a><br/>
<a href="http://www.ha97.com/4009.html">（總結）密碼破解之王：Ophcrack彩虹表(Rainbow Tables)原理詳解（附：120G彩虹表下載）</a></p>

<h3>防止Rainbow attack</h3>

<ul>
<li>建立新用戶識，先產生一個隨機（最好使用線上的 random funciton 不要自己來弄）的 string（salt），然後把 H（salt+password） 和 salt 存到資料庫</li>
<li>用戶登入，系統就先將 salt 拿出來，再來比對 H（salt+password）和資料庫的值</li>
<li>這樣壞人就需要為每一個 salt 建立獨立的一張表，所以 CPU 和 Memory 成本變成本來的 N 倍</li>
</ul>


<h1>預防 SQL injection</h1>

<ul>
<li>記住 parameter escaping 不是絕對安全的方式</li>
<li>只有 Parameterization(使用參數或參數標記代替常量值的操作) 才是真正安全

<ul>
<li>請善用其底層是用 Parameterization 來工作的 ORM，輕鬆又安全</li>
</ul>
</li>
</ul>


<h1>多層資料庫權限</h1>

<ul>
<li>一個好的資料庫，至少有這三種用戶，admin_user, normal_user, readonly_user</li>
<li>admin_user

<ul>
<li>資料庫的擁有者，有所有權限</li>
<li>除了要更動 database schema，或是新減資料庫，否則絕不使用</li>
<li>最信任的人員持有</li>
</ul>
</li>
<li>normal_user

<ul>
<li>給 Application server 使用</li>
<li>沒有建立刪除資料庫權限</li>
<li>沒有 truncate table 權限</li>
<li>只有 select/insert/update/delete 權限</li>
<li>只有對 stored procedure 執行權限</li>
</ul>
</li>
<li>readonly_user

<ul>
<li>一般不應輕易連上 production database 來除錯，除非是最後手段</li>
<li>別拿 admin_user &amp; normal_user 來除錯</li>
</ul>
</li>
</ul>


<h1>Audit table</h1>

<ul>
<li>對於敏感資料，我們會想記錄其所有的改動

<ul>
<li>例如想紀錄 user_balances 的改動，便會建立 user_balances_audit 來紀錄</li>
<li>然後在 user_balances 建立 on insert, on update, on delete 的 trigger 把改動自動抄到 user_balances_audit</li>
<li>normal_user 不應對 audit tables 有任何權限</li>
<li>trigger 擁有者是 admin_user</li>
<li>trigger 權限要基於建立者而不是執行者

<ul>
<li>不同的 RDBMS 具體指令會有分別，但理念相同</li>
<li>ex: PostgreSQL 建立 trigger function 時需要 <code>SECURITY DEFINER</code> 關鍵字</li>
</ul>
</li>
</ul>
</li>
</ul>


<h1>SessionId</h1>

<ul>
<li>用戶登入流程

<ul>
<li>產生一組SessionId</li>
<li>把 SessionId->(UserId) 存到 Redis，並且 TTL 設定為 30 分鐘</li>
<li>把 SessionId 傳回用戶</li>
</ul>
</li>
<li>之後用戶所有的 request 都會把 SessionId 放在 http authorization header

<ul>
<li>伺服器利用 SessionId 從 Redis 中找回 Userid 便能知道發出 request 的用戶</li>
<li>然後伺服器再把 Redis 中該 SessionId 重新設定 TTL 為 30 分鐘</li>
</ul>
</li>
<li>缺點

<ul>
<li>所有的 Request 都要先檢查 Redis 去查 SessionId 是否正確</li>
<li>萬一 Redis 當掉，所有用戶都需登入</li>
<li>一旦壞人突破防火牆接觸到 Redis 便能建立受害用戶的 Session，並偽裝成用戶</li>
</ul>
</li>
</ul>


<h1>JWT</h1>

<p><a href="https://jwt.io/">jwt</a></p>

<ul>
<li>Header

<ul>
<li>alg : 說明 jwt signature 所使用的演算法（建議 RS256/RS512）</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "alg": "HS256",
</span><span class='line'>  "typ": "JWT"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Payload

<ul>
<li>放什麼都可以，一般至少放上 userid 和 exp(到期時間)</li>
<li>jwt 到期時間</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "sub": "1234567890",
</span><span class='line'>  "name": "John Doe",
</span><span class='line'>  "admin": true
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Signature

<ul>
<li>把 header, payload 和 secret(HMAC)/private key(RSA) 一起計算出的 SHA256/SHA512</li>
<li>因為 secret(HMAC)/private key(RSA) 只會放在 server, 所以用戶沒法自行產生，用戶偷改 header, payload 其 Signature 也不會吻合</li>
</ul>
</li>
</ul>


<h3>jwt 流程</h3>

<ul>
<li>用戶登入系統，伺服器會檢查用戶密碼是否正確

<ul>
<li>建立jwt</li>
<li>將 jwt 傳給用戶</li>
</ul>
</li>
<li>之後用戶的所有 request，都會將 jwt 放在 http authorization header

<ul>
<li>伺服器利用 public key 驗證 jwt 是否正確，並檢查 exp 是否過期，在從 payload 中找回 UserId，便能知道發出 request 的用戶</li>
</ul>
</li>
<li>jwt 快到期前，client side 會發出 renew jwt request，像 server 拿新的 jwt （exp 現在為 30分鐘）

<ul>
<li>不建議在每個 response 都傳回新的 jwt</li>
</ul>
</li>
</ul>


<h3>jwt 好壞</h3>

<ul>
<li>好

<ul>
<li>沒有了 Redis，不用當心 redis 當掉，Session 流失問題</li>
</ul>
</li>
<li>壞

<ul>
<li>Client side 要定期更新 jwt</li>
<li>一旦壞人拿到 secret(HMAC)/private key(RSA) 便能偽裝用戶</li>
<li>建議用 RS 演算法，並把 jwt 發行放在獨立機器</li>
</ul>
</li>
</ul>


<p>參考文件：<br/>
<a href="http://blog.rainy.im/2015/06/10/react-jwt-pretty-good-practice/">JWT 在前後端分離中的應用與實踐</a><br/>
<a href="http://obeyo-blog.logdown.com/posts/208001">OBeyTech JWT - JSON Web Token</a></p>

<h1>進階API設計概念</h1>

<h3>API 版本控制</h3>

<ul>
<li>API = 規格，定下來就不要一直更改</li>
<li>要進行更改可以利用 v1/v2/v3 版本來去做新的更動，才不會導致錯誤，即使原本的版本有 bug，但對方可能已經自行解決或將 bug 當作 feature</li>
<li>因此要先新舊版本 API 並行，確定轉到新版 API 在刪除舊版本的</li>
</ul>


<h3>middleware</h3>

<ul>
<li>用戶丟 <code>/v1/emailAuth?token={token}</code></li>
<li>我們可以在用戶和 Application Server 建立一層 middleware ，將 <code>/v1/emailAuth?token={token}</code>（GET）轉乘 <code>/v1/emailAuth</code> 並且把 token 放進 HTTP header，然後再把 Request 丟給 Application Server</li>
<li>一版來說企業客戶會有很多保安要求，為每個客戶在主城市增加額外的 API 只會讓程式越來越亂，這時就應該交給 middleware 解決</li>
</ul>


<h3>違反 RESTful</h3>

<ul>
<li>用 uniform interface 的 API 便會有 <code>/v1/cats</code> 和 <code>/v1/cats/{catId}/catFoods/{catFoolId}</code></li>
<li>這就會有很多 POST request 造成大量的 network over head</li>
<li>改成 <code>/v1/catAndCatFoods</code>(post)

<ul>
<li>雖然違反 uniform interface，但更關鍵的 Stateless protocol 並沒有違反</li>
</ul>
</li>
<li>正常系統設計流程

<ul>
<li>用戶使用流程</li>
<li>討論</li>
<li>API 設計</li>
</ul>
</li>
<li>完整的 request 是基於 商業邏輯和用戶體驗的</li>
</ul>


<h1>Idempotent</h1>

<ul>
<li>不管多少次的 resquest ， response 都是一樣的</li>
<li>POST 是 non-Idempotent

<ul>
<li>要改成 Idempotent 就將 response 透過 Redis 來處理，後續 response 都會先去 redis 看有沒有相同，有相同就回覆一樣的 response</li>
</ul>
</li>
</ul>


<h1>Optimistic lock</h1>

<p><a href="http://openhome.cc/Gossip/HibernateGossip/OptimisticLocking.html">樂觀鎖定（Optimistic Locking</a></p>

<h1>Stateless protocol</h1>

<h1>Long polling</h1>

<p><a href="http://blogger.gtwang.org/2014/01/websocket-protocol.html">WebSocket 通訊協定簡介：比較 Polling、Long-Polling 與 Streaming 的運作原理</a></p>

<h1>Asynchronous API</h1>

<h1>2PC(Two-phase Commit)</h1>

<p><a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4">Two-phase Commit</a></p>

<p>簡報：<br/>
<a href="https://github.com/TritonHo/slides">TritonHo/slides</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[淺談 Backend 課程筆記 1]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/backend-lesson-notes-1/"/>
    <updated>2016-04-19T22:29:19+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/backend-lesson-notes-1</id>
    <content type="html"><![CDATA[<p>課程筆記1</p>

<!-- more -->


<h1>淺談MVC</h1>

<ul>
<li>M - 系統中各種抽象物件，一改動會主動告知view</li>
<li>V - 把 model 顯示給用戶看，有控制項，可將用戶行動傳送給 controller</li>
<li>C - 根據用戶的行動，去改變model</li>
<li><h1>M+V+C!= MVC</h1></li>
<li>在MVC中，model 改動後需要以 Observer Pattern 去主動告知 view 更新; 但在HTTP中，極少進行 Server Push，而是由 Controller 回應給 View</li>
<li>MVC 針對的是單機軟體溝通（不需網路，用 function call 即可），而現今都是以 HTTP  RESTful來去溝通</li>
<li>而且每家 framework 的 MVC 都不盡相同</li>
</ul>


<blockquote><p>不要提自己是用MVC，只要說有架構分開</p></blockquote>

<h1>淺談 Backend 基本概念</h1>

<ul>
<li>backend 目前最注重 <code>throughput(系統總容量，處理能力)</code>，每一個 request 處理速度相對的比較不重要

<blockquote><p>當 <code>execution time</code> 壓到某一個程度，<code>network latency</code> 會變成主因</p></blockquote></li>
<li><code>throughput(系統總容量)</code> = <code>concurrent execution</code> / <code>execution time per task</code></li>
<li>對 Application Server 來說，增加機台便能無痛增加 <code>throughput</code></li>
<li>而 <code>RDBMS</code> 只有單一的 <code>Master</code> 通常會成為系統效能瓶頸</li>
</ul>


<blockquote><p>所以不要說什麼語言慢，而是要去增加機台!!</p></blockquote>

<h1>Strong Type vs Weakly Type</h1>

<ul>
<li>ST 多花時間在 <code>coding</code>，但是少花時間在 <code>testing</code></li>
<li>對老手說 WT 可能會比較快一點點</li>
</ul>


<blockquote><p>所以看要多花時間在 <code>coding</code> 還是在 <code>testing</code><br/>
真正吐血的是在 Race Condition/Design Flaw</p></blockquote>

<h1>Good Code</h1>

<ul>
<li>降低 <code>bug rate</code></li>
<li>主動將有危險的 code 做註記</li>
</ul>


<h1>CRUD 到 backend framework</h1>

<p><a href="https://github.com/TritonHo/demo">backdemo</a></p>

<h3>問題</h3>

<ul>
<li>密碼放在程式碼中</li>
<li><code>URL Routing</code>資訊雜亂
  *要知道 /v1/cats/(GET)，必須知道 <code>main.go</code>，再細看 <code>cat.go</code></li>
<li>要自己編寫簡單的SQL</li>
<li>輸入處理和商業邏輯混在一起</li>
<li>Partial Update 的輸入處理冗長</li>
<li>輸入檢查散落在 <code>Create</code> 和 <code>Update</code></li>
<li>輸出時，大量的重複的程式碼</li>
<li>Handler 共用 <code>global variable</code></li>
</ul>


<blockquote><p>總結 DRY 將同樣邏輯的封裝在一起</p></blockquote>

<h3>精簡程式</h3>

<ul>
<li>引入 <code>mux library</code> 支援以 Regular Expression 做 routing</li>
<li>建立 <code>lib/config</code> 用來讀取環境變數，把密碼，用戶名稱都放到環境變數中</li>
<li>20/80 80% automate ，集中精力解決剩下的 20%</li>
<li>使用 ORM 也好，還是要好好學 SQL（用 ORM 解決簡單的，用 SQL 來解決複雜的)</li>
<li>使用了 ORM 之後改動 table schema ，只要改動 Model Class</li>
<li>建立 <code>lib/httputil</code> 來做處理輸入</li>
<li>使用 reflection 來支持 Partial Update 並且跟 ORM 整合</li>
<li>簡單的 single attribute checking 能放到 struct tag，然後在 input binding 檢查</li>
<li>理想的 handler 應該只有 business login，輸入輸出都跟它沒關係

<ul>
<li>只會返回 statusCode, error/output object</li>
<li>middleware 接受以上資料在做 HTTP Response</li>
</ul>
</li>
<li>handler 需要的是 transaction 不是 db</li>
<li>乾脆將 db 丟到 middleware，然後以 parameter 方式將 transaction 丟給 Handler，即使 Handler 遇上問題，也不用自己Rollback，因為在 middleware 那層解決</li>
<li>將每個 endpoint，應該要抽出來變成 procedure</li>
</ul>


<h3>authorization</h3>

<ul>
<li>除非有特殊原因，auth token 請放在 <code>Http Authorization Header</code></li>
<li>別把 user password 存到資料庫</li>
</ul>


<h3>Application Server 中主要的模組</h3>

<ul>
<li>Router</li>
<li>Middleware</li>
<li>Auth</li>
<li>Input Binder</li>
<li>Basic Validater</li>
<li>Transaction Manager</li>
<li>Database connector/ORM</li>
<li>Output Utlity</li>
<li>MQ connector</li>
<li>Logger</li>
<li>File Manager</li>
</ul>


<h1>others</h1>

<h3>Connection Pool</h3>

<p>Connection Pool(連線池) 是一種資料庫連線管理的機制，它介於應用程式與資料庫之間；
集中管理資料庫的連線，能有效提升應用程式存取資料庫的效能及減少連線的錯誤。</p>

<ul>
<li>get 到 tomcat，後會先去檢查已經建好的 Connection Pool 有哪個 Connection 是有空的，就將 request 丟過去</li>
<li>為什麼 Connection Pool 要用 <code>global variable</code>

<ul>
<li>生長週期是整個server</li>
</ul>
</li>
<li>一個 application 都有一個 Connection Pool</li>
</ul>


<p>使用Connection Pool的好處有:</p>

<ol>
<li>Pool會keep住與DB的連線。程式需要使用時跟pool要即可。
不用再重複地跟DB建立連線然後又釋放掉。</li>
<li>可設定與DB最大的連線數，避免超過DB所能負擔的連線數。</li>
<li>Pool可幫忙驗證Connectin是否還正常，若不正常時，便再與DB建立好的正常連線，
確保程式取得的Connection都是正常可使用的。</li>
<li>額外功能的提供。如幫忙檢查Connection State或幫忙關閉Statement等。
不同的Connection Pool其額外提供的功能當然也會有所不同。</li>
</ol>


<p>參考文件：<br/>
<a href="http://peggg327.blogspot.tw/2014/11/connection-pool.html">連接池(Connection Pool)介紹</a></p>

<h3>reflection</h3>

<ul>
<li>Reflection的作用：得知自己的外觀，甚至自我修改與複製</li>
<li>簡單的來說，能讓程式在 runtime 時知道一個 <code>structure object</code> 資訊

<ul>
<li>例如連帶有什麼 methods 和 attributes</li>
</ul>
</li>
<li>雖然會讓效能變慢，但很多 library 都不能不用</li>
<li>除非有特殊原因，一般不會在 handler 中使用 reflection (如果不是在寫 library 不該使用 reflection)</li>
</ul>


<p>參考文件：<br/>
<a href="http://www.ithome.com.tw/node/57227">Reflection增加了程式的彈性</a><br/>
<a href="https://github.com/JustinSDK/JavaSE6Tutorial/blob/master/docs/CH16.md">第 16 章 反射（Reflection）</a></p>

<p>簡報：<br/>
<a href="https://github.com/TritonHo/slides">TritonHo/slides</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTTP HEADER]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/http-header/"/>
    <updated>2016-04-19T22:22:30+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/http-header</id>
    <content type="html"><![CDATA[<p>透過 HTTP HEADER 有很多資訊可以做傳遞</p>

<!-- more -->


<h1>mime_types</h1>

<p>MIME(Multipurpose Internet Mail Extensions) 格式</p>

<p>主要用在 HTTP 通訊協定中的請求標頭 Accept 和回應標頭 Content-Type 中，來說明此文件的格式。</p>

<p>Rails 會在 Controller 的 respond_to 方法中辨識並回應所請求的格式樣板，例如瀏覽器請求 application/json 就會回應 json 格式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mime</span><span class="o">::</span><span class="no">SET</span><span class="o">.</span><span class="n">collect</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;text/html&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;text/plain&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;text/javascript&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;text/css&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;text/calendar&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;text/csv&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;text/vcard&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;image/png&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;image/jpeg&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;image/gif&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;image/bmp&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;image/tiff&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;video/mpeg&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;application/xml&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;application/rss+xml&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;application/atom+xml&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;application/x-yaml&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;multipart/form-data&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;application/x-www-form-urlencoded&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;application/json&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;application/pdf&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s2">&quot;application/zip&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Accept-Language</h1>

<p>可以根據瀏覽器的語言，來切換網站的語言</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="err">￼</span>  <span class="n">protect_from_forgery</span> <span class="ss">with</span><span class="p">:</span> <span class="ss">:exception</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:set_locale</span>
</span><span class='line'><span class="err">￼</span>
</span><span class='line'>  <span class="kp">protected</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">set_locale</span>
</span><span class='line'>    <span class="no">I18n</span><span class="o">.</span><span class="n">locale</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s1">&#39;Accept-Language&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>搭配 <code>http_accept_language</code> gem</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">protect_from_forgery</span> <span class="ss">with</span><span class="p">:</span> <span class="ss">:exception</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:set_locale</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">￼</span><span class="kp">protected</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">set_locale</span>
</span><span class='line'><span class="err">￼￼￼</span>    <span class="n">locales</span> <span class="o">=</span> <span class="no">I18n</span><span class="o">.</span><span class="n">available_locales</span>
</span><span class='line'>    <span class="no">I18n</span><span class="o">.</span><span class="n">locale</span> <span class="o">=</span> <span class="n">http_accept_language</span><span class="o">.</span><span class="n">compatible_language_from</span><span class="p">(</span><span class="n">locales</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>USING THE ACCEPT HEADER</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/routes.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;api_version&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">scope</span> <span class="ss">defaults</span><span class="p">:</span> <span class="p">{</span> <span class="nb">format</span><span class="p">:</span> <span class="s1">&#39;json&#39;</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">module</span><span class="p">:</span> <span class="ss">:v1</span><span class="p">,</span> <span class="ss">constraints</span><span class="p">:</span> <span class="no">ApiVersion</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;v1&#39;</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'><span class="err">￼￼￼</span>    <span class="n">resources</span> <span class="ss">:zombies</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">￼￼￼￼</span>  <span class="n">scope</span> <span class="ss">module</span><span class="p">:</span> <span class="ss">:v2</span><span class="p">,</span> <span class="ss">constraints</span><span class="p">:</span> <span class="no">ApiVersion</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;v2&#39;</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:zombies</span>
</span><span class='line'><span class="err">￼￼￼</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#lib/api_version.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ApiVersion</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">version</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@version</span><span class="p">,</span> <span class="vi">@default</span> <span class="o">=</span> <span class="n">version</span><span class="p">,</span> <span class="n">default</span>
</span><span class='line'><span class="err">￼￼￼￼￼￼</span>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">check_headers</span><span class="p">(</span><span class="n">headers</span><span class="p">)</span>
</span><span class='line'>    <span class="n">accept</span> <span class="o">=</span> <span class="n">headers</span><span class="o">[</span><span class="s1">&#39;Accept&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="err">￼</span>  <span class="k">def</span> <span class="nf">matches?</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@default</span> <span class="o">||</span> <span class="n">check_headers</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="p">)</span>
</span><span class='line'>    <span class="n">accept</span> <span class="o">&amp;&amp;</span> <span class="n">accept</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;application/vnd.apocalypse.</span><span class="si">#{</span><span class="vi">@version</span><span class="si">}</span><span class="s2">+json&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">application</span>
</span><span class='line'><span class="c1">#payload is application-specific</span>
</span><span class='line'><span class="n">vnd</span><span class="o">.</span><span class="n">apocalypse</span>
</span><span class='line'><span class="c1">#media type is vendor-specific</span>
</span><span class='line'><span class="o">[.</span><span class="n">version</span><span class="o">]</span>
</span><span class='line'><span class="c1">#API version</span>
</span><span class='line'><span class="o">+</span><span class="n">json</span>
</span><span class='line'><span class="c1">#response format should be JSON</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Token</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/models/user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">before_create</span> <span class="ss">:set_auth_token</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="err">￼</span><span class="k">def</span> <span class="nf">set_auth_token</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">if</span> <span class="n">auth_token</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">auth_token</span> <span class="o">=</span> <span class="n">generate_auth_token</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">generate_auth_token</span>
</span><span class='line'>    <span class="kp">loop</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">token</span> <span class="o">=</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">hex</span>
</span><span class='line'>      <span class="k">break</span> <span class="n">token</span> <span class="k">unless</span> <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">exists?</span><span class="p">(</span><span class="ss">auth_token</span><span class="p">:</span> <span class="n">token</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="err">￼</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/controllers/posts_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">EpisodesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>   <span class="n">before_action</span> <span class="ss">:authenticate</span>
</span><span class='line'>
</span><span class='line'>   <span class="err">￼</span><span class="kp">protected</span>
</span><span class='line'>   <span class="k">def</span> <span class="nf">authenticate</span>
</span><span class='line'>     <span class="n">authenticate_token</span> <span class="o">||</span> <span class="n">render_unauthorized</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>   <span class="err">￼</span><span class="k">def</span> <span class="nf">authenticate_token</span>
</span><span class='line'>     <span class="n">authenticate_with_http_token</span> <span class="k">do</span> <span class="o">|</span><span class="n">token</span><span class="p">,</span> <span class="n">options</span><span class="o">|</span>
</span><span class='line'>       <span class="no">User</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">auth_token</span><span class="p">:</span> <span class="n">token</span><span class="p">)</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>gem：<br/>
<a href="https://github.com/iain/http_accept_language">http_accept_language</a></p>

<p>參考文件：<br/>
<a href="https://ihower.tw/rails4/environments-and-bundler.html">mime types</a><br/>
<a href="http://www.rails365.net/articles/gem-jie-shao-yuan-ma-fen-xi-http-accept-language-si">gem介紹及源碼分析之http_accept_language(四)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Foreman 管理進程]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/foreman/"/>
    <updated>2016-04-19T22:20:41+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/foreman</id>
    <content type="html"><![CDATA[<p>若專案依賴各種外部的進程使用 foreman 來管理它們。</p>

<!-- more -->


<h1>設定</h1>

<p>在根目錄底下新增 Procfile 檔案</p>

<p>設定所有要跑的指令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#Procfile</span>
</span><span class='line'><span class="ss">web</span><span class="p">:</span>    <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rails</span> <span class="n">s</span> <span class="o">-</span><span class="nb">p</span> <span class="vg">$PORT</span>
</span><span class='line'><span class="ss">worker</span><span class="p">:</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">worker</span>
</span><span class='line'><span class="ss">urgentworker</span><span class="p">:</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">urgent_worker</span>
</span><span class='line'><span class="ss">scheduler</span><span class="p">:</span>  <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">scheduler</span>
</span></code></pre></td></tr></table></div></figure>


<h1>安裝gem foreman</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">foreman</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">foreman</span> <span class="n">start</span>
</span><span class='line'><span class="mi">13</span><span class="p">:</span><span class="mi">44</span><span class="p">:</span><span class="mi">20</span> <span class="n">web</span><span class="o">.</span><span class="mi">1</span>          <span class="o">|</span> <span class="n">started</span> <span class="n">with</span> <span class="n">pid</span> <span class="mi">82891</span>
</span><span class='line'><span class="mi">13</span><span class="p">:</span><span class="mi">44</span><span class="p">:</span><span class="mi">20</span> <span class="n">worker</span><span class="o">.</span><span class="mi">1</span>       <span class="o">|</span> <span class="n">started</span> <span class="n">with</span> <span class="n">pid</span> <span class="mi">82892</span>
</span><span class='line'><span class="mi">13</span><span class="p">:</span><span class="mi">44</span><span class="p">:</span><span class="mi">20</span> <span class="n">urgentworker</span><span class="o">.</span><span class="mi">1</span> <span class="o">|</span> <span class="n">started</span> <span class="n">with</span> <span class="n">pid</span> <span class="mi">82893</span>
</span><span class='line'><span class="err">￼</span><span class="mi">13</span><span class="p">:</span><span class="mi">44</span><span class="p">:</span><span class="mi">20</span> <span class="n">scheduler</span><span class="o">.</span><span class="mi">1</span>    <span class="o">|</span> <span class="n">started</span> <span class="n">with</span> <span class="n">pid</span> <span class="mi">82894</span>
</span></code></pre></td></tr></table></div></figure>


<p>gem：<br/>
<a href="https://github.com/ddollar/foreman">foreman</a></p>

<p>參考文件：<br/>
<a href="http://arthurpai.logdown.com/posts/2014/07/09/heroku-worker-processes-setting">Heroku Worker Processes setting</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Method Missing]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/method-missing/"/>
    <updated>2016-04-19T22:18:09+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/method-missing</id>
    <content type="html"><![CDATA[<p>當 ruby 找不到 method 就會 call 這個 method</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="c1">#自己建立 method_missing 呼叫</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You tried to call </span><span class="si">#{</span><span class="n">method_name</span><span class="si">}</span><span class="s2"> with these arguments: </span><span class="si">#{</span><span class="n">args</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">super</span> <span class="c1">#default method_missing handling raises a NoMethodError</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">submit</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;Here&#39;s a post.&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>用找不到 method 會 call <code>method_missing</code> 的特性，直接自己定義 method_missing 去定義呼叫其他的 method</p>

<blockquote><p>它的執行效率並不好，所以只適合用在沒辦法預先知道方法名稱的情況下</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="no">DELEGATED_METHODS</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:username</span><span class="p">,</span> <span class="ss">:avatar</span><span class="o">]</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">DELEGATED_METHODS</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@user</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">super</span> <span class="c1">#沒有在設定的 DELEGATED_METHODS 裡面，就呼叫 default method_missing handling raises a NoMethodError</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@text</span> <span class="o">=</span> <span class="n">text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="vi">@text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^hash_(\w+)/</span><span class="p">)</span> <span class="c1">#找前面是 hash_</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span>
</span><span class='line'>      <span class="vi">@text</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; #&quot;</span> <span class="o">+</span> <span class="n">match</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="err">￼</span><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;HI&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">hash_ruby</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">hash_metaprogramming</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">post</span>
</span><span class='line'><span class="c1">#=&gt; HI #ruby #metaprogramming</span>
</span></code></pre></td></tr></table></div></figure>


<h3>respond_to?</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:to_s</span><span class="p">)</span> <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">hash_ruby</span> <span class="c1">#再 method_missing 有定義所以呼叫得到</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:hash_ruby</span><span class="p">)</span> <span class="c1"># =&gt; false #但在 respond_to 卻回傳 false</span>
</span></code></pre></td></tr></table></div></figure>


<p>因此必須自己定義 respond_to?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">respond_to?</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span>
</span><span class='line'>    <span class="n">method_name</span> <span class="o">=~</span> <span class="sr">/^hash_\w+/</span> <span class="o">||</span> <span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是 <code>post.method(:hash_ruby)</code> 還是會出現 <code>NameError: undefined method</code></p>

<p>所以要改成另一個 <code>respond_to_missing?</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">respond_to_missing?</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span>
</span><span class='line'>    <span class="n">method_name</span> <span class="o">=~</span> <span class="sr">/^hash_\w+/</span> <span class="o">||</span><span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>￼DEFINE_METHOD REVISITED</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@text</span> <span class="o">=</span> <span class="n">text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="vi">@text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^hash_(\w+)/</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span> <span class="c1">#有 match 到 hash_ 就建立出新的 method</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">define_method</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>          <span class="vi">@text</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; #&quot;</span> <span class="o">+</span> <span class="n">match</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="nb">send</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span> <span class="c1">#並且呼叫 method</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">super</span> <span class="c1">#沒有就 raises a NoMethodError</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#當 call post.hash_codeschool 就會定義出下面的 method </span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">hash_codeschool</span>
</span><span class='line'>  <span class="vi">@text</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; #&quot;</span> <span class="o">+</span> <span class="s2">&quot;codeschool&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://apidock.com/ruby/BasicObject/method_missing">method_missing</a><br/>
<a href="http://ruby-doc.org/core-2.2.0/MatchData.html">MatchData</a><br/>
<a href="http://ruby-doc.org/core-2.1.1/Regexp.html">Regexp</a></p>

<p>參考文件：  <br/>
<a href="https://ihower.tw/blog/archives/4797">如何設計出漂亮的 Ruby APIs</a><br/>
<a href="https://ruby-china.org/topics/3434">method_missing，一個Ruby 程序員的夢中情人</a><br/>
<a href="http://stackoverflow.com/questions/13793060/respond-to-vs-respond-to-missing">respond_to? vs. respond_to_missing?</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic Classes & Methods (Struct, Send(), Alias_method, Alias_attribute, Define_method)]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/dynamic-classes-and-methods/"/>
    <updated>2016-04-19T22:16:35+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/dynamic-classes-and-methods</id>
    <content type="html"><![CDATA[<p>ruby 可以很方便的動態產生 Classes 和 Methods</p>

<!-- more -->


<h1>Struct</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:status</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">status</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span><span class="p">,</span> <span class="vi">@status</span> <span class="o">=</span> <span class="n">user</span><span class="p">,</span> <span class="n">status</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">status</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#上下相等</span>
</span><span class='line'>
</span><span class='line'><span class="no">Post</span> <span class="o">=</span> <span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:status</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">status</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>send()</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">say</span>
</span><span class='line'><span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:say</span><span class="p">)</span>
</span><span class='line'><span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;say&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#也可以 call 到 private 的 method</span>
</span></code></pre></td></tr></table></div></figure>


<h1>alias_method</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:foo</span> <span class="c1">#=&gt; return @foo</span>
</span><span class='line'>  <span class="c1">#一定要在定義好的 method 後面還 call 得到</span>
</span><span class='line'>  <span class="n">alias_method</span> <span class="ss">:bar</span><span class="p">,</span> <span class="ss">:foo</span> <span class="c1">#=&gt; the same method 別名/原名</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">foo</span> <span class="o">=</span> <span class="o">[]</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@foo</span> <span class="o">=</span> <span class="n">foo</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>alias_attribute</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Content</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="c1"># has a title attribute</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Email</span> <span class="o">&lt;</span> <span class="no">Content</span>
</span><span class='line'>  <span class="n">alias_attribute</span> <span class="ss">:subject</span><span class="p">,</span> <span class="ss">:title</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">e</span> <span class="o">=</span> <span class="no">Email</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">e</span><span class="o">.</span><span class="n">title</span>    <span class="c1"># =&gt; &quot;Superstars&quot;</span>
</span><span class='line'><span class="n">e</span><span class="o">.</span><span class="n">subject</span>  <span class="c1"># =&gt; &quot;Superstars&quot;</span>
</span><span class='line'><span class="n">e</span><span class="o">.</span><span class="n">subject?</span> <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="n">e</span><span class="o">.</span><span class="n">subject</span> <span class="o">=</span> <span class="s2">&quot;Megastars&quot;</span>
</span><span class='line'><span class="n">e</span><span class="o">.</span><span class="n">title</span>    <span class="c1"># =&gt; &quot;Megastars&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>define_method</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">draft</span>
</span><span class='line'>    <span class="vi">@status</span> <span class="o">=</span> <span class="ss">:draft</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">posted</span>
</span><span class='line'>    <span class="vi">@status</span> <span class="o">=</span> <span class="ss">:posted</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">deleted</span>
</span><span class='line'>    <span class="vi">@status</span> <span class="o">=</span> <span class="ss">:deleted</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#上下相等</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="n">states</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:draft</span><span class="p">,</span> <span class="ss">:posted</span><span class="p">,</span> <span class="ss">:deleted</span><span class="o">]</span>
</span><span class='line'>  <span class="n">states</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">status</span><span class="o">|</span>
</span><span class='line'>    <span class="n">define_method</span> <span class="n">status</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@status</span> <span class="o">=</span> <span class="n">status</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>method()</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">foo</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="n">posts</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">contents</span>
</span><span class='line'>    <span class="vi">@foo</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show_tweet</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="vi">@foo</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">foo</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;Compiling!&#39;</span><span class="p">,</span> <span class="s1">&#39;Bundling...&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">foo</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">content_method</span> <span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:contents</span><span class="p">)</span>
</span><span class='line'><span class="n">content_method</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="c1">#=&gt; [&quot;Compiling!&quot;, &quot;Bundling...&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">show_method</span> <span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:show_tweet</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="err">￼</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">show_method</span><span class="p">)</span>
</span><span class='line'><span class="err">￼</span><span class="c1">#上下相等</span>
</span><span class='line'><span class="n">show_method</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">show_method</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>EX: log_method</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">MethodLogger</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">log_method</span><span class="p">(</span><span class="n">klass</span><span class="p">,</span> <span class="n">method_name</span><span class="p">)</span>
</span><span class='line'>    <span class="n">klass</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">alias_method</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">method_name</span><span class="si">}</span><span class="s2">_original&quot;</span><span class="p">,</span> <span class="n">method_name</span>
</span><span class='line'>      <span class="n">define_method</span> <span class="n">method_name</span> <span class="k">do</span> <span class="o">|*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">: Called </span><span class="si">#{</span><span class="n">method_name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="nb">send</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">method_name</span><span class="si">}</span><span class="s2">_original&quot;</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Hi&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">logger</span> <span class="o">=</span> <span class="no">MethodLogger</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">logger</span><span class="o">.</span><span class="n">log_method</span><span class="p">(</span><span class="no">Post</span><span class="p">,</span> <span class="ss">:say_hi</span><span class="p">)</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">say_hi</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#=&gt; 2016-04-05 12:14:01 +0800: Called say_hi</span>
</span><span class='line'><span class="c1">#=&gt; Hi</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://ruby-doc.org/core-2.2.0/Struct.html">Struct</a><br/>
<a href="http://apidock.com/ruby/Object/__send__">send()</a><br/>
<a href="http://apidock.com/ruby/Module/alias_method">alias_method()</a><br/>
<a href="http://apidock.com/ruby/Module/define_method">method define_method</a></p>

<p>參考文件：<br/>
<a href="http://stackoverflow.com/questions/3337285/what-does-send-do-in-ruby">What does send() do in Ruby?</a><br/>
<a href="https://gist.github.com/plusor/6104625">alias vs alias_method</a>  <br/>
<a href="https://ihower.tw/blog/archives/4797">如何設計出漂亮的 Ruby APIs</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript 筆記]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/javascript-notes/"/>
    <updated>2016-04-19T22:12:34+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/javascript-notes</id>
    <content type="html"><![CDATA[<p>javascript 的一些紀錄!</p>

<!-- more -->


<h1>Closure</h1>

<p>Closure 閉包</p>

<p>一般來說每個變數都會生存在自己的 scope 裡面， function 裡面只能用到裡面定義好的 <code>Local Variable</code>，但在 javascript 卻能夠動用到外部的 variable</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'><span class="nx">funtion</span> <span class="nx">closure1</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">closure1</span><span class="p">();</span>
</span><span class='line'><span class="c1">//=&gt; 8</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 closure1 雖然 function 裡並沒有 var x 但卻輸出外面的 8<br/>
主要是因為在 javascript 當中，在 local 中找不到 x 值的話，就會繼續往上一層去找</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'><span class="nx">funtion</span> <span class="nx">closure2</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">closure2</span><span class="p">();</span>
</span><span class='line'><span class="c1">//=&gt; 5</span>
</span></code></pre></td></tr></table></div></figure>


<p>closure2 則是在 local 就找到了 x 所以輸出的就是 5。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">closure1</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">x</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="nx">number</span> <span class="o">=</span> <span class="nx">closure1</span><span class="p">();</span>
</span><span class='line'><span class="nx">number</span><span class="p">();</span> <span class="c1">//1</span>
</span><span class='line'><span class="nx">number</span><span class="p">();</span> <span class="c1">//2</span>
</span><span class='line'><span class="nx">number</span><span class="p">();</span> <span class="c1">//3</span>
</span><span class='line'><span class="nx">number</span><span class="p">();</span> <span class="c1">//4</span>
</span></code></pre></td></tr></table></div></figure>


<p>x 會存活在，number 的 function 裡面</p>

<p><a href="http://www.codedata.com.tw/javascript/using-nodejs-to-learn-javascript-3-function-parameter-closure">用 Node.js 學 JavaScript 語言（3）函數、參數與閉包</a><br/>
<a href="http://openhome.cc/Gossip/JavaScript/Closure.html">閉包（Closure）</a></p>

<h1>Hoisting</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">test</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">){</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">x</span> <span class="o">==</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">foo</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span><span class="p">{</span>
</span><span class='line'>    <span class="nx">bar</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="kd">var</span> <span class="kd">function</span> <span class="nx">foo</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;FOO&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="kd">var</span> <span class="kd">function</span> <span class="nx">bar</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;BAR&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">hoisting1</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">hoisting1</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//=&gt; undefined</span>
</span></code></pre></td></tr></table></div></figure>


<p>照上面的 <code>closure</code> 特性，應該輸出的要是 8 才對，因為裡面的宣告是放在下面<br/>
可是卻輸出的是 <code>undefined</code></p>

<p>這就是另一個 <code>hoisting</code> 的特性<br/>
<code>hoisting</code> 會將宣告提升到 scope 的頂端，因此上面的程式應該是</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">hoisting2</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x</span><span class="p">;</span>   
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">hoisting2</span><span class="p">()</span>
</span><span class='line'><span class="c1">//=&gt; undefined</span>
</span></code></pre></td></tr></table></div></figure>


<p>看到上面多出一個 <code>var x;</code> 就是 <code>hoisting</code> 提升的，因此下面的 <code>console.log(x)</code> 才會出現 <code>undefined</code></p>

<p>要解決有兩種方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">hoisting3</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">hoisting3</span><span class="p">()</span>
</span><span class='line'><span class="c1">//=&gt; 5</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">//var x = 8; 要拿掉這行否則會 call 到它 </span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">hoisting4</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">hoisting4</span><span class="p">()</span>
</span><span class='line'><span class="c1">//=&gt; 5</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.puritys.me/docs-blog/article-242-Javascript-Hoisting-%E8%88%87-Closure.html">Javascript Hoisting 與 Closure</a></p>

<h1>callback</h1>

<p><a href="http://dreamerslab.com/blog/tw/javascript-callbacks/">Javascript callbacks</a><br/>
<a href="http://fireqqtw.logdown.com/posts/258823-javascript-function-notes">【javascript】了解函式(function)很重要的筆記</a><br/>
<a href="http://mao.li/javascript/javascript-callback-function/">JavaScript callback function 理解</a><br/>
<a href="http://www.victsao.com/blog/81-javascript/292-javascript-function-callback">回呼函式(callback function)</a></p>

<h1>JavaScript Memory_leaks</h1>

<p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/%E9%87%8D%E6%96%B0%E4%BB%8B%E7%B4%B9_JavaScript#Memory_leaks">Mozilla - Memory_leaks</a><br/>
<a href="http://blogger.gtwang.org/2014/01/javascript-memory-leak-patterns.html">JavaScript 記憶體洩漏（Memory Leak）問題</a><br/>
<a href="http://blog.smlsun.com/2013/12/javascript-memory-leaks_3701.html">javascript: Memory Leaks 的情況以及如何解決與偵測</a><br/>
<a href="http://javascript.info/tutorial/memory-leaks#memory-management-in-javascript">Memory management in JavaScript</a></p>

<hr />

<h1>PROTOTYPE</h1>

<h1>￼OBJECT! PROTOTYPE</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">constructor</span><span class="p">()</span>
</span><span class='line'><span class="nx">valueOf</span><span class="p">()</span>
</span><span class='line'><span class="nx">toLocaleString</span><span class="p">()</span>
</span><span class='line'><span class="nx">isPrototypeOf</span><span class="p">()</span>
</span><span class='line'><span class="err">￼￼</span><span class="nx">toString</span><span class="p">()</span>
</span><span class='line'><span class="nx">propertyIsEnumerable</span><span class="p">()</span>
</span><span class='line'><span class="nx">hasOwnProperty</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h1>ARRAY! Prototype</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">length</span>
</span><span class='line'><span class="nx">pop</span><span class="p">()</span>
</span><span class='line'><span class="nx">push</span><span class="p">()</span>
</span><span class='line'><span class="nx">shift</span><span class="p">()</span>
</span><span class='line'><span class="nx">reverse</span><span class="p">()</span>
</span><span class='line'><span class="nx">sort</span><span class="p">()</span>
</span><span class='line'><span class="nx">join</span><span class="p">()</span>
</span><span class='line'><span class="nx">reduce</span><span class="p">()</span>
</span><span class='line'><span class="nx">slice</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h1>STRING! Prototype</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">length</span>
</span><span class='line'><span class="nx">chartAt</span><span class="p">()</span>
</span><span class='line'><span class="nx">trim</span><span class="p">()</span>
</span><span class='line'><span class="nx">concat</span><span class="p">()</span>
</span><span class='line'><span class="nx">indexOf</span><span class="p">()</span>
</span><span class='line'><span class="nx">replace</span><span class="p">()</span>
</span><span class='line'><span class="nx">toUpperCase</span><span class="p">()</span>
</span><span class='line'><span class="nx">toLowerCase</span><span class="p">()</span>
</span><span class='line'><span class="err">￼￼￼￼￼￼￼￼</span><span class="nx">substring</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h1>NUMBER! Prototype</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">toFixed</span><span class="p">()</span>
</span><span class='line'><span class="nx">toExponential</span>
</span><span class='line'><span class="nx">toPrecision</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h1>FUNCTION! Prototype</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">name</span>
</span><span class='line'><span class="nx">call</span><span class="p">()</span>
</span><span class='line'><span class="nx">bind</span><span class="p">()</span>
</span><span class='line'><span class="nx">apply</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://fireqqtw.logdown.com/posts/258035-javascriptcall-and-apply">【javascript】call 和 apply</a></p>

<h1>Custom function in Prototype</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">countAll</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span> <span class="nx">letter</span> <span class="p">){</span> <span class="kd">var</span> <span class="nx">letterCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">==</span> <span class="nx">letter</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>           <span class="nx">letterCount</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">letterCount</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="err">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h1>build objects</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="err">￼</span><span class="kd">var</span> <span class="nx">myBox</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">height</span><span class="o">:</span> <span class="mi">6</span><span class="p">,</span> <span class="nx">width</span><span class="o">:</span> <span class="mi">8</span><span class="p">,</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nx">volume</span><span class="o">:</span> <span class="mi">480</span><span class="p">,</span> <span class="nx">material</span><span class="o">:</span> <span class="s2">&quot;cardboard&quot;</span><span class="p">,</span> <span class="nx">contents</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;Great Expectations&quot;</span><span class="p">,</span> <span class="s2">&quot;The Remains of the Day&quot;</span><span class="p">,</span> <span class="s2">&quot;Peter Pan&quot;</span><span class="p">]</span>
</span><span class='line'>            <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">shoe</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">6</span><span class="p">,</span> <span class="nx">gender</span><span class="o">:</span> <span class="s2">&quot;women&quot;</span><span class="p">,</span> <span class="nx">construction</span><span class="o">:</span> <span class="s2">&quot;slipper&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="err">￼</span><span class="kd">var</span> <span class="nx">magicShoe</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span> <span class="nx">shoe</span> <span class="p">);</span>
</span><span class='line'><span class="err">￼￼￼￼</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span> <span class="nx">magicShoe</span> <span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; Object { size: 6, gender: &quot;women&quot;, construction: &quot;slipper&quot; }</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="err">￼</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isPrototypeOf</span><span class="p">(</span><span class="nx">show</span><span class="p">)</span>
</span><span class='line'><span class="c1">//=&gt;true</span>
</span><span class='line'><span class="nx">shoe</span><span class="p">.</span><span class="nx">isPrototypeOf</span><span class="p">(</span><span class="nx">magicShoe</span><span class="p">)</span>
</span><span class='line'><span class="err">￼￼￼￼￼</span><span class="c1">//=&gt;true</span>
</span></code></pre></td></tr></table></div></figure>


<p>constructor function for a shoe Object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="err">￼</span><span class="kd">function</span> <span class="nx">Shoe</span> <span class="p">(</span><span class="nx">shoeSize</span><span class="p">,</span> <span class="nx">shoeColor</span><span class="p">,</span> <span class="nx">forGender</span><span class="p">,</span> <span class="nx">constructStyle</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">this</span><span class="p">.</span><span class="nx">size</span> <span class="o">=</span> <span class="nx">shoeSize</span><span class="p">;</span>
</span><span class='line'>   <span class="k">this</span><span class="p">.</span><span class="nx">color</span> <span class="o">=</span> <span class="nx">shoeColor</span><span class="p">;</span>
</span><span class='line'>   <span class="k">this</span><span class="p">.</span><span class="nx">gender</span> <span class="o">=</span> <span class="nx">forGender</span><span class="p">;</span>
</span><span class='line'>   <span class="k">this</span><span class="p">.</span><span class="nx">construction</span> <span class="o">=</span> <span class="nx">constructStyle</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Shoe</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">putOn</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="nx">alert</span> <span class="p">(</span><span class="s2">&quot;Your &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">construction</span> <span class="o">+</span> <span class="s2">&quot;’s&quot;</span> <span class="o">+</span> <span class="s2">&quot;on!&quot;</span><span class="p">);</span> <span class="p">},</span>
</span><span class='line'>  <span class="nx">takeOff</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="nx">alert</span> <span class="p">(</span><span class="s2">&quot;Phew! Somebody’s size &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">size</span> <span class="o">+</span> <span class="s2">&quot;’s&quot;</span> <span class="o">+</span><span class="s2">&quot; are fragrant! &quot;</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">beachShoe</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Shoe</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="s2">&quot;blue&quot;</span><span class="p">,</span> <span class="s2">&quot;women&quot;</span><span class="p">,</span> <span class="s2">&quot;flipflop&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular 筆記2]]></title>
    <link href="http://mgleon08.github.com/blog/2016/04/19/angular-notes2/"/>
    <updated>2016-04-19T22:12:20+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/04/19/angular-notes2</id>
    <content type="html"><![CDATA[<p>一些 angular 的紀錄!</p>

<!-- more -->


<h1>vaildation</h1>

<p><code>novalidate</code> <code>required</code> Turn Off Default HTML Validation</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="err">￼</span><span class="o">&lt;</span><span class="nx">form</span> <span class="nx">name</span><span class="o">=</span><span class="s2">&quot;reviewForm&quot;</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">controller</span><span class="o">=</span><span class="s2">&quot;ReviewController as reviewCtrl&quot;</span>
</span><span class='line'>                        <span class="nx">ng</span><span class="o">-</span><span class="nx">submit</span><span class="o">=</span><span class="s2">&quot;reviewForm.$valid &amp;&amp; reviewCtrl.addReview(product)&quot;</span> <span class="nx">novalidate</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">select</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="s2">&quot;reviewCtrl.review.stars&quot;</span> <span class="nx">required</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="nx">option</span> <span class="nx">value</span><span class="o">=</span><span class="s2">&quot;1&quot;</span><span class="o">&gt;</span><span class="mi">1</span> <span class="nx">star</span><span class="o">&lt;</span><span class="err">/option&gt; </span>
</span><span class='line'><span class="err">￼￼</span><span class="p">...</span><span class="err"> </span> <span class="o">&lt;</span><span class="err">/select&gt;</span>
</span><span class='line'><span class="nx">Mark</span> <span class="nx">Required</span> <span class="nx">Fields</span>
</span><span class='line'><span class="err">￼￼</span><span class="o">&lt;</span><span class="nx">textarea</span> <span class="nx">name</span><span class="o">=</span><span class="s2">&quot;body&quot;</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="s2">&quot;reviewCtrl.review.body&quot;</span> <span class="nx">required</span><span class="o">&gt;&lt;</span><span class="err">/textarea&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">by</span><span class="o">:&lt;</span><span class="err">/label&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">name</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="s2">&quot;reviewCtrl.review.author&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;email&quot;</span> <span class="nx">required</span><span class="o">/&gt;</span>
</span><span class='line'><span class="err">￼</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span> <span class="nx">reviewForm</span> <span class="nx">is</span> <span class="p"></span> <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;submit&quot;</span> <span class="nx">value</span><span class="o">=</span><span class="s2">&quot;Submit&quot;</span> <span class="o">/&gt;</span><span class="err"> </span> <span class="o">&lt;</span><span class="err">/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h1>AngularJS q deferred 和 promise</h1>

<p><a href="http://roxannera.blogspot.tw/2014/03/angularjs-q-deferred-promise.html">AngularJS q deferred 和 promise</a>  <br/>
<a href="https://checkcheckzz.gitbooks.io/angularjs-learning-notes/content/chapter11/11-2.html">廣義回調管理</a></p>

<hr />

<h1>Factory Service Provider</h1>

<p><code>$factory</code> <code>$service</code> <code>$provider</code>
這三個都能夠做到同樣的事情，有點像是 rails 裡的 service object</p>

<p>差別在於</p>

<h3>factory 方法</h3>

<p>必須提供一個工廠方法，並自己建立一個 Service Object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;app&quot;</span><span class="p">,</span> <span class="p">[]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">service</span><span class="p">(</span><span class="s2">&quot;helloService&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>     <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">foo</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Hi&#39;</span> <span class="o">+</span> <span class="nx">name</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>service 方法</h3>

<p>必須提供一個建構子，由 AngularJS 會利用 new，建立 Service Object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;app&quot;</span><span class="p">,</span> <span class="p">[]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">service</span><span class="p">(</span><span class="s2">&quot;helloService&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">foo</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Hi&#39;</span> <span class="o">+</span> <span class="nx">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Provider 方法</h3>

<p>與其他兩個最大的不同在於它能夠對 Service Object 做額外的設定(Configured)，且必須包含一個 <code>$get</code> 的函式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;app&quot;</span><span class="p">,</span> <span class="p">[]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;helloService&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'><span class="k">return</span> <span class="p">{</span>  <span class="c1">//It&#39;s Provider Object</span>
</span><span class='line'>    <span class="nx">$get</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">{</span>  <span class="c1">//It&#39;s Service Object</span>
</span><span class='line'>               <span class="nx">foo</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>                   <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Hi&#39;</span> <span class="o">+</span> <span class="nx">name</span><span class="p">);</span>
</span><span class='line'>               <span class="p">}</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Decorator</h3>

<p>可以攔截並且去做客製化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;app&#39;</span><span class="p">,</span> <span class="p">[]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;app&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">value</span><span class="p">(</span><span class="s1">&#39;version&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;app&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">config</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$provide</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$provide</span><span class="p">.</span><span class="nx">decorator</span><span class="p">(</span><span class="s1">&#39;version&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$delegate</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s1">&#39;Version - &#39;</span> <span class="o">+</span> <span class="nx">$delegate</span><span class="p">;</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;app&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MainCtrl&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">version</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">version</span> <span class="o">=</span> <span class="nx">version</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//=&gt; Version - 1</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Constant</h3>

<p>常數，無法透過 decorator 去攔截<br/>
無法修改<br/>
可被注入到 Config</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">angualr</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;app&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">constant</span><span class="p">(</span><span class="s1">&#39;version&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Value</h3>

<p>可透過 decorator 去攔截<br/>
可修改 <br/>
可被注入到 Config</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;app&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">value</span><span class="p">(</span><span class="s1">&#39;version&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="https://docs.angularjs.org/api/auto/service/$provide">provide</a></p>

<p>參考文件：<br/>
<a href="http://programer-learn.blogspot.tw/p/angularjs.html">AngularJS 系列</a><br/>
<a href="http://kirkchen.logdown.com/posts/245678-angularjs-talking-about-the-angularjs-provider-mechanisms">淺談Angular.js的Provider機制</a><br/>
<a href="http://hellobug.github.io/blog/angularjs-providers/">[AngularJS系列(4)] 那傷不起的provider們啊~ (Provider, Value, Constant, Service, Factory, Decorator)</a><br/>
<a href="http://blog.xebia.com/differences-between-providers-in-angularjs/">Differences Between Providers In AngularJS</a></p>

<hr />

<h1>$rootScope $emit $broadcast $on</h1>

<p><code>$rootScope</code> 是 AngularJS app 中最上層的 scope，一個 app(ng-app) 只會有一個 <code>$rootScope</code>，也就是說同一個 app 可以共用同一個 <code>$rootScope</code> 的值</p>

<p>可以看作</p>

<ul>
<li><code>$scope</code> 區域變數。</li>
<li><code>$rootScope</code> 全域變數。</li>
</ul>


<p>可以搭配 <code>$emit</code>(向父級) , <code>$broadcast</code>(向子級) and <code>$on</code>(接收) ，跟別的 controller 溝通</p>

<p>參考文件：<br/>
<a href="http://www.angularjs.cn/A08c">angularjs的事件$broadcast and $emit and $on</a><br/>
<a href="http://www.cnblogs.com/CraryPrimitiveMan/p/3679552.html">AngularJS的學習&ndash;on、emit和broadcast的使用</a><br/>
<a href="http://hamisme.blogspot.tw/2013/07/emit-broadcast-and-on.html">$emit , $broadcast and $on的用途 &ndash; AngularJS</a></p>

<hr />

<h1>ngResource</h1>

<p><a href="http://jasonlamswatow.com/angularjs-restful/">AngularJS 取用外部伺服之：取用 RESTful APIs</a></p>

<hr />

<h1>理解watch ，apply 和digest</h1>

<p><a href="http://www.angularjs.cn/A0a6">理解watch ，apply 和digest &mdash; 理解數據綁定過程</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpec & Capybara 整合測試(Selenium and Poltergeist Driver)]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/30/rspec-capybara-selenium-poltergeist-driver/"/>
    <updated>2016-03-30T00:04:46+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/30/rspec-capybara-selenium-poltergeist-driver</id>
    <content type="html"><![CDATA[<p>capybara 是一個可以模擬瀏覽器行為的測試，還蠻好玩的~<br/>
搭配不同 driver，用不同的方式來跑</p>

<!-- more -->


<p>因為是要模擬人真正在使用網頁的狀態，因次每一動，都要定義出來。</p>

<h1>設定</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#spec/rails_help.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capybara/rspec&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capybara/rails&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capybara/poltergeist&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="c1">#要設定為 false ，就會實際存在 database，因此需要 database_cleaner 來清</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">use_transactional_fixtures</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#devise controller 設定</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">include</span> <span class="no">Devise</span><span class="o">::</span><span class="no">TestHelpers</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="ss">:controller</span>
</span><span class='line'>  <span class="c1">#devise capybara 設定</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">include</span> <span class="no">Warden</span><span class="o">::</span><span class="no">Test</span><span class="o">::</span><span class="no">Helpers</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#database_clean 設定 suite -&gt; 整個 rspec</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">before</span><span class="p">(</span><span class="ss">:suite</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">clean_with</span> <span class="ss">:truncation</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">before</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">example</span><span class="o">|</span>
</span><span class='line'>    <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">strategy</span> <span class="o">=</span> <span class="n">example</span><span class="o">.</span><span class="n">metadata</span><span class="o">[</span><span class="ss">:js</span><span class="o">]</span> <span class="p">?</span> <span class="ss">:truncation</span> <span class="p">:</span> <span class="ss">:transaction</span>
</span><span class='line'>    <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">start</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">after</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">example</span><span class="o">|</span>
</span><span class='line'>    <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">clean</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#可以設定環境變數，再跑指令時，下 DRIVER=selenium rspec spec/features 才會使用預設 :rack_test 跑，但沒有支援 js 因此才需要用到 selenium(跑瀏覽器)，poltergeist(跑console)</span>
</span><span class='line'>  <span class="k">unless</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;DRIVER&quot;</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;selenium&quot;</span>
</span><span class='line'>    <span class="no">Capybara</span><span class="o">.</span><span class="n">javascript_driver</span> <span class="o">=</span> <span class="ss">:poltergeist</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">Capybara</span><span class="o">.</span><span class="n">register_driver</span> <span class="ss">:poltergeist</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>
</span><span class='line'>    <span class="no">Capybara</span><span class="o">::</span><span class="no">Poltergeist</span><span class="o">::</span><span class="no">Driver</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">app</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">js_errors</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">timeout</span><span class="p">:</span> <span class="mi">15</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">phantomjs_logger</span><span class="p">:</span> <span class="no">File</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/log/temp.log&quot;</span><span class="p">,</span><span class="s2">&quot;w&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>spec</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#spec/features/user_spec.rb</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;home page&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@user</span>  <span class="o">=</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:admin</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># mock CSRF </span>
</span><span class='line'>    <span class="n">allow_any_instance_of</span><span class="p">(</span><span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:protect_against_forgery?</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;User is admin can login and see data&#39;</span><span class="p">,</span> <span class="ss">:js</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">visit</span> <span class="s1">&#39;/backend&#39;</span><span class="c1">#後台首頁</span>
</span><span class='line'>    <span class="n">fill_in</span> <span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;admin@gmail.com&#39;</span> <span class="c1">#輸入email</span>
</span><span class='line'>    <span class="n">fill_in</span> <span class="s1">&#39;password&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;password&#39;</span> <span class="c1">#輸入密碼</span>
</span><span class='line'>    <span class="n">click_button</span> <span class="s1">&#39;submit&#39;</span> <span class="c1">#點擊登入</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;後台&#39;</span><span class="p">)</span> <span class="c1">#到後台看到後台的字</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;logout&#39;</span><span class="p">,</span> <span class="ss">:js</span><span class="o">=&gt;</span> <span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">login_as</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="c1">#登入</span>
</span><span class='line'>    <span class="n">visit</span> <span class="s1">&#39;/backend/posts&#39;</span>  <span class="c1">#在內頁</span>
</span><span class='line'>    <span class="n">find</span><span class="p">(</span><span class="s2">&quot;#logout&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span> <span class="c1">#點擊登出，記得要下 id</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">current_path</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span> <span class="c1">#回到首頁</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_content</span><span class="p">(</span><span class="s1">&#39;首頁&#39;</span><span class="p">)</span> <span class="c1">#頁面上也首頁的字</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>gem：<br/>
<a href="https://github.com/jnicklas/capybara">capybara</a> <br/>
<a href="https://github.com/SeleniumHQ/selenium">selenium</a><br/>
<a href="https://github.com/teampoltergeist/poltergeist">poltergeist</a><br/>
<a href="https://github.com/DatabaseCleaner/database_cleaner">database_cleaner</a></p>

<p>參考文件：<br/>
<a href="http://blog.tomoyukikashiro.me/post/test-csrf-in-feature-test-using-capybara/">Test CSRF in feature test using Capybara</a>      <br/>
<a href="http://www.opinionatedprogrammer.com/2011/02/capybara-and-selenium-with-rspec-and-rails-3/">Capybara (and Selenium) with RSpec &amp; Rails 3: quick tutorial</a><br/>
<a href="https://github.com/plataformatec/devise/wiki/How-To:-Test-with-Capybara">Devise: How To: Test with Capybara</a><br/>
<a href="http://stackoverflow.com/questions/10904996/difference-between-truncation-transaction-and-deletion-database-strategies">Difference between truncation, transaction and deletion database strategies</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular Custom Directive]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/27/angular-custom-directive/"/>
    <updated>2016-03-27T21:07:16+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/27/angular-custom-directive</id>
    <content type="html"><![CDATA[<p>在 angular 當中可以自己客製 Directive，讓 code 變得更乾淨。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;productTitle&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="k">return</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;E&#39;</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;product-title.html&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">product</span><span class="o">-</span><span class="nx">title</span><span class="o">&gt;&lt;</span><span class="err">/product-title&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;productTitle&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="k">return</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;A&#39;</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;product-title.html&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//js 的 productTitle 名稱在 html 就會變成 product-title</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">h3</span> <span class="nx">product</span><span class="o">-</span><span class="nx">title</span><span class="o">&gt;&lt;</span><span class="err">/h3&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">‘</span><span class="nx">A</span><span class="err">’</span> <span class="err">–</span> <span class="nx">Attribute</span> <span class="p">(</span><span class="nx">You</span> <span class="nx">want</span> <span class="nx">to</span> <span class="nx">use</span> <span class="nx">your</span> <span class="nx">directive</span> <span class="nx">as</span> <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">rating</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="err">‘</span><span class="nx">E</span><span class="err">’</span> <span class="err">–</span> <span class="nx">Element</span> <span class="p">(</span><span class="nx">Use</span> <span class="nx">it</span> <span class="nx">as</span> <span class="o">&lt;</span><span class="nx">rating</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="err">‘</span><span class="nx">C</span><span class="err">’</span> <span class="err">–</span> <span class="nx">Class</span><span class="p">.</span> <span class="p">(</span><span class="nx">Use</span> <span class="nx">it</span> <span class="nx">like</span> <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="err">”</span><span class="nx">rating</span><span class="err">”</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="err">‘</span><span class="nx">M</span><span class="err">’</span> <span class="err">–</span> <span class="nx">Comment</span> <span class="p">(</span><span class="nx">Use</span> <span class="nx">it</span> <span class="nx">like</span> <span class="o">&lt;!</span><span class="err">–</span> <span class="nx">directive</span><span class="o">:</span> <span class="nx">rating</span> <span class="err">–</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>controller</code> 一起包在 <code>app.directive</code> 裡面</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;productTitle&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="k">return</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;A&#39;</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;product-title.html&#39;</span>
</span><span class='line'>      <span class="nx">controller</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="nx">tab</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>      <span class="nx">controllerAs</span><span class="o">:</span> <span class="s2">&quot;tab&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//js 的 productTitle 名稱在 html 就會變成 product-title</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">h3</span> <span class="nx">product</span><span class="o">-</span><span class="nx">title</span><span class="o">&gt;&lt;</span><span class="err">/h3&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="http://ithelp.ithome.com.tw/question/10140689">入門AngularJS筆記-directive
</a><br/>
<a href="http://exile1030-blog.logdown.com/posts/167848-custom-angularjs-directive-1">自訂 AngularJs Directive (1) :開始</a><br/>
<a href="http://exile1030-blog.logdown.com/posts/168283-customizing-the-angularjs-directive-2">自訂 AngularJs Directive (2): Hello World</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular File Upload]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/27/angular-file-upload/"/>
    <updated>2016-03-27T21:03:04+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/27/angular-file-upload</id>
    <content type="html"><![CDATA[<p>網站上有時候會用到上傳檔案功能。<br/>
透過 angular，可以使用<a href="https://github.com/nervgh/angular-file-upload">angular-file-upload</a> 很方便的就建立出來</p>

<!-- more -->


<p></p>

<p>這個 module 也有提供很多 API 可以使用 <a href="https://github.com/nervgh/angular-file-upload/wiki/Module-API">Module-API</a></p>

<h1>controller</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span>
</span><span class='line'><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;VideoShowCtrl&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span>        <span class="s1">&#39;$scope&#39;</span><span class="p">,</span> <span class="s1">&#39;$http&#39;</span><span class="p">,</span> <span class="s1">&#39;FileUploader&#39;</span><span class="p">,</span> <span class="s1">&#39;$stateParams&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span> <span class="nx">$scope</span> <span class="p">,</span>  <span class="nx">$http</span> <span class="p">,</span>  <span class="nx">FileUploader</span> <span class="p">,</span>  <span class="nx">$stateParams</span><span class="p">){</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//透過 $stateParams (ui-router) 可以得到 router 上的 id</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">postID</span> <span class="o">=</span> <span class="nx">$stateParams</span><span class="p">.</span><span class="nx">id</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">uploader</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FileUploader</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/posts/show&#39;</span> <span class="o">+</span> <span class="nx">postID</span><span class="s1">&#39;,</span>
</span><span class='line'><span class="s1">        formData: [],</span>
</span><span class='line'><span class="s1">        headers: {</span>
</span><span class='line'><span class="s1">            &#39;</span><span class="nx">X</span><span class="o">-</span><span class="nx">CSRF</span><span class="o">-</span><span class="nx">TOKEN</span><span class="s1">&#39; : document.querySelector(&quot;meta[name=csrf-token]&quot;).content</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    });</span>
</span><span class='line'><span class="s1"> </span>
</span><span class='line'><span class="s1"> //內建提供上傳檔案前可以做哪些事</span>
</span><span class='line'><span class="s1">    uploader.onBeforeUploadItem = function(item){</span>
</span><span class='line'><span class="s1">     //若是傳的是 array，接到的會變成 string，可能是放在 formData 的原因@@</span>
</span><span class='line'><span class="s1">        item.formData.push({ title: &#39;</span><span class="nx">hello</span><span class="err">&#39;</span> <span class="p">})</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//內建提供上傳檔案後做哪些事</span>
</span><span class='line'>    <span class="nx">uploader</span><span class="p">.</span><span class="nx">onAfterAddingFile</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">uploader</span><span class="p">.</span><span class="nx">queue</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">){</span> <span class="nx">item</span><span class="p">.</span><span class="nx">uploader</span><span class="p">.</span><span class="nx">queue</span><span class="p">.</span><span class="nx">shift</span><span class="p">()</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">uploader</span> <span class="o">=</span> <span class="nx">uploader</span>
</span><span class='line'>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure>


<h1>view</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;file&quot;</span> <span class="nx">nv</span><span class="o">-</span><span class="nx">file</span><span class="o">-</span><span class="nx">select</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="nx">uploader</span><span class="o">=</span><span class="s2">&quot;uploader&quot;</span> <span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="https://github.com/angular-ui/ui-router/wiki/URL-Routing">URL Routing</a></p>

<p>gem：<br/>
<a href="https://github.com/Marthyn/angularjs-file-upload-rails">angularjs-file-upload-rails</a><br/>
<a href="https://github.com/nervgh/angular-file-upload">angular-file-upload</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular 筆記]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/27/angular-notes/"/>
    <updated>2016-03-27T20:43:10+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/27/angular-notes</id>
    <content type="html"><![CDATA[<p>最近有幸在專案上用到 angular，不過卡在非常尷尬的點&hellip;<br/>
已經出 angular2 了，但專案是用 angular1..但還是來學習一下吧</p>

<!-- more -->


<p>AngularJS 跟 Rails 一樣是 MVC 框架，<br/>
可以透過 Controller 來處理 Model 和 View 的綁定。</p>

<p>Model 可以在 Controller 中進行處理<br/>
並且透過 <code>雙向資料繫結 (Two Way Data-Binding)</code>，可以即時的互動!</p>

<h1>Angular Setting</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">//app/asset/javascript/app.js</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//angular.module</span>
</span><span class='line'><span class="c1">//Where we write pieces of our Angular application.</span>
</span><span class='line'><span class="c1">//Makes our code more maintainable, testable, and readable. </span>
</span><span class='line'><span class="c1">//Where we define dependencies for our app.</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;app&#39;</span><span class="p">,</span> <span class="c1">//設定 module 名稱，只能有一個</span>
</span><span class='line'>  <span class="p">[</span> <span class="s1">&#39;ui.router&#39;</span><span class="p">,</span>                <span class="c1">//Dependency Injection 其他 module</span>
</span><span class='line'>    <span class="s1">&#39;angularFileUpload&#39;</span>
</span><span class='line'>  <span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<h1>ui-router config</h1>

<p>可藉由 <code>ui-router</code> module 來自定前端的 router，要再另外 inject，因為不是內建的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">//#字號前面為原本的 router，後面則為 ui-router，也可以透過 HTML5mode 來把 # 字號去除掉，但就要小心不要跟原本的 router 衝到。</span>
</span><span class='line'>
</span><span class='line'><span class="nx">http</span><span class="o">:</span><span class="c1">//localhost:3000/#/posts/list</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span>
</span><span class='line'><span class="p">.</span><span class="nx">config</span><span class="p">([</span><span class="s1">&#39;$httpProvider&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$httpProvider</span><span class="p">){</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//防止 CSRF，rails 預設都必須帶 token，才可以發 post，防止外來的攻擊</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="nx">$httpProvider</span><span class="p">.</span><span class="nx">defaults</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">common</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">token_tag</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;meta[name=csrf-token]&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span> <span class="nx">token_tag</span> <span class="p">){</span> <span class="nx">headers</span><span class="p">[</span><span class="s1">&#39;X-CSRF-TOKEN&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">token_tag</span><span class="p">.</span><span class="nx">content</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>      <span class="nx">headers</span><span class="p">[</span><span class="s1">&#39;X-Requested-With&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;XMLHttpRequest&#39;</span><span class="p">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//另一種方式</span>
</span><span class='line'>      <span class="c1">//$httpProvider.defaults.headers.common[&#39;X-CSRF-TOKEN&#39;] = $(&#39;meta[name=csrf-token]&#39;).attr(&#39;content&#39;);</span>
</span><span class='line'><span class="p">}])</span>
</span><span class='line'><span class="p">.</span><span class="nx">config</span><span class="p">(</span>
</span><span class='line'>  <span class="p">[</span>      <span class="s1">&#39;$stateProvider&#39;</span><span class="p">,</span> <span class="s1">&#39;$urlRouterProvider&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">$stateProvider</span><span class="p">,</span>  <span class="nx">$urlRouterProvider</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// For any unmatched url, redirect to /state1</span>
</span><span class='line'>  <span class="nx">$urlRouterProvider</span><span class="p">.</span><span class="nx">otherwise</span><span class="p">(</span><span class="s2">&quot;/home&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Now set up the states</span>
</span><span class='line'>  <span class="nx">$stateProvider</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="s1">&#39;posts&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="kr">abstract</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">url</span><span class="o">:</span><span class="s2">&quot;/posts&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">template</span><span class="o">:</span> <span class="s2">&quot;&lt;ui-view&gt;&lt;/ui-view&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="s1">&#39;posts.list&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">url</span><span class="o">:</span> <span class="s2">&quot;/list&quot;</span><span class="p">,</span> <span class="c1">//http://localhost:3000/#/posts/list</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s2">&quot;/posts/index.html&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">controller</span><span class="o">:</span> <span class="s1">&#39;PostIndexCrtl&#39;</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">state</span><span class="p">(</span><span class="s1">&#39;posts.show&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">url</span><span class="o">:</span> <span class="s2">&quot;/show/:id&quot;</span><span class="p">,</span> <span class="c1">//http://localhost:3000/#/posts/show/1</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s2">&quot;/posts/show.html&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">controller</span><span class="o">:</span> <span class="s1">&#39;PostShowCrtl&#39;</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'><span class="p">}])</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="https://github.com/angular-ui/ui-router">ui-router</a><br/>
<a href="https://angular-ui.github.io/ui-router/site/#/api/ui.router">ui-router github.io</a></p>

<h1>Angular Controller</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">//app/asset/javascript/Post/PostIndexCrtl.js</span>
</span><span class='line'><span class="nx">app</span>
</span><span class='line'><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;PostIndexCrtl&#39;</span><span class="p">,</span> <span class="c1">//設定 controller 名稱，只能有一個</span>
</span><span class='line'>  <span class="p">[</span>       <span class="s1">&#39;$scope&#39;</span><span class="p">,</span> <span class="s1">&#39;$http&#39;</span><span class="p">,</span> <span class="c1">//注入這個 controller 會用到的模組</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$http</span><span class="p">){</span>   <span class="c1">//這裏在要注入一次到這個 function 裡面</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//定義一個 function 可以透過 $http 發 get 拿回 json</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">getPost</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">$http</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/posts&#39;</span><span class="p">).</span><span class="nx">success</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
</span><span class='line'>              <span class="c1">//定義變數 post = 傳回來的dat</span>
</span><span class='line'>                <span class="nx">$scope</span><span class="p">.</span><span class="nx">posts</span> <span class="o">=</span> <span class="nx">data</span><span class="p">;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>     <span class="c1">//也可這樣寫</span>
</span><span class='line'>     <span class="c1">//$http({ method: &quot;GET&quot;,</span>
</span><span class='line'>             <span class="c1">//url: &quot;/posts&quot;,</span>
</span><span class='line'>             <span class="c1">//data: {</span>
</span><span class='line'>                <span class="c1">//name: foo</span>
</span><span class='line'>            <span class="c1">//}</span>
</span><span class='line'>      <span class="c1">//}).success(function(data){</span>
</span><span class='line'>            <span class="c1">//$scope.posts = data;</span>
</span><span class='line'>      <span class="c1">//});</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//這裏馬上執行，因為一定要有 data 才能做其他事</span>
</span><span class='line'>    <span class="nx">getPost</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>   <span class="c1">//排序</span>
</span><span class='line'>   <span class="nx">$scope</span><span class="p">.</span><span class="nx">sortKey</span> <span class="o">=</span> <span class="s1">&#39;id&#39;</span><span class="p">;</span>
</span><span class='line'>   <span class="nx">$scope</span><span class="p">.</span><span class="nx">sort</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">keyname</span><span class="p">){</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">sortKey</span> <span class="o">=</span> <span class="nx">keyname</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">reverse</span> <span class="o">=</span> <span class="o">!</span><span class="nx">$scope</span><span class="p">.</span><span class="nx">reverse</span><span class="p">;</span> <span class="c1">//加驚嘆號可以將值變成 boolean</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//checkboxs</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">selection</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">fruits</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="s1">&#39;蘋果&#39;</span><span class="p">,</span><span class="s1">&#39;西瓜&#39;</span><span class="p">,</span><span class="s1">&#39;香蕉&#39;</span>
</span><span class='line'>    <span class="p">];</span>
</span><span class='line'>
</span><span class='line'>   <span class="c1">//當點擊 checkbox 將值丟到 selection，取消則刪除</span>
</span><span class='line'>   <span class="kd">var</span> <span class="nx">toggleSelection</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">toggleSelection</span><span class="p">(</span><span class="nx">fruit</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">//indexOf()找出目前點擊的位置，若沒有則為 -1</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">idx</span> <span class="o">=</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">fruit</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">idx</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">//splice(位置，刪除第幾個，新增資料)</span>
</span><span class='line'>          <span class="nx">$scope</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">idx</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">$scope</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">fruit</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//也可以將所有變數定義在最後面，方便管理</span>
</span><span class='line'>   <span class="nx">$scope</span><span class="p">.</span><span class="nx">selection</span> <span class="o">=</span> <span class="nx">selection</span><span class="p">;</span>
</span><span class='line'>   <span class="nx">$scope</span><span class="p">.</span><span class="nx">fruits</span> <span class="o">=</span> <span class="nx">fruits</span>
</span><span class='line'>   <span class="nx">$scope</span><span class="p">.</span><span class="nx">toggleSelection</span> <span class="o">=</span> <span class="nx">toggleSelection</span>
</span><span class='line'><span class="p">}])</span>
</span></code></pre></td></tr></table></div></figure>


<h1>view</h1>

<p>在 <html ng-app="app"> ， ng-app 用來宣告 angular 的範圍<br/>
記得要載入 angular library才能使用<br/>
惱人的 turbolink 記得拿掉</p>

<p><code>&lt;ui-view&gt;&lt;/ui-view&gt;</code><br/>
ui.router 的語法，用來顯示透過 angular 拉回來的 view ，有點像是上面的 yield 是拉 rails 裡的 view 一樣
範例就是會拉下面 index 的 view 進來</p>

<h1>Angluar View</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!--public/posts/index.html--&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-header&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&#39;pull-right&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- ng-model 綁定 data 用來篩選--&gt;</span>
</span><span class='line'>      <span class="nt">&lt;label&gt;</span>Any: <span class="nt">&lt;input</span> <span class="na">ng-model=</span><span class="s">&quot;search.$&quot;</span><span class="nt">&gt;&lt;/label&gt;</span>
</span><span class='line'>      <span class="nt">&lt;label&gt;</span>ID: <span class="nt">&lt;input</span> <span class="na">ng-model=</span><span class="s">&quot;search.id&quot;</span><span class="nt">&gt;&lt;/label&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-body&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;table</span> <span class="na">class=</span><span class="s">&quot;table table-bordered table-hover&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;thead&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>          <span class="c">&lt;!-- ng-clik 觸發 controller 裡的 sort() function 並帶參數進去 --&gt;</span>
</span><span class='line'>          <span class="nt">&lt;th</span> <span class="na">ng-click=</span><span class="s">&quot;sort(&#39;id&#39;)&quot;</span> <span class="na">class=</span><span class="s">&#39;pointer&#39;</span><span class="nt">&gt;</span>ID
</span><span class='line'>          <span class="c">&lt;!-- ng-show true 顯示 flase 隱藏，相反為 ng-hide --&gt;</span>
</span><span class='line'>          <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon&quot;</span> <span class="na">ng-show=</span><span class="s">&quot;sortKey==&#39;id&#39;&quot;</span> <span class="na">ng-class=</span><span class="s">&quot;{&#39;glyphicon-chevron-up&#39;:reverse,&#39;glyphicon-chevron-down&#39;:!reverse}&quot;</span><span class="nt">&gt;&lt;/span&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/th&gt;</span>
</span><span class='line'>          <span class="nt">&lt;th&gt;</span>名稱<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>          <span class="nt">&lt;th&gt;</span>描述<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/thead&gt;</span>
</span><span class='line'>      <span class="nt">&lt;tbody&gt;</span>
</span><span class='line'>          <span class="c">&lt;!-- ng-repeat 展開取回來的 array data --&gt;</span>
</span><span class='line'>          <span class="c">&lt;!-- filter 篩選 --&gt;</span>
</span><span class='line'>          <span class="c">&lt;!-- orderBy 排序 --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tr</span> <span class="na">ng-repeat=</span><span class="s">&quot;video in videos | filter:search:strict | orderBy:sortKey:reverse&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;</span><span class="nt">&lt;/td&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;</span><span class="nt">&lt;/td&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;</span><span class="nt">&lt;/td&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tbody&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/table&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!--checkbox 多選項--&gt;</span>
</span><span class='line'><span class="nt">&lt;label</span> <span class="na">ng-repeat=</span><span class="s">&quot;fruit in fruits&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">name=</span><span class="s">&quot;selectedFruits[]&quot;</span> <span class="na">value=</span><span class="s">&quot;&quot;</span> <span class="na">ng-checked=</span><span class="s">&quot;selection.indexOf(fruit) &gt; -1&quot;</span>
</span><span class='line'>    <span class="na">ng-click=</span><span class="s">&quot;toggleSelection(fruit)&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    
</span><span class='line'><span class="nt">&lt;/label&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;</span><span class="nt">&lt;/pre&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>指令</h1>

<ul>
<li><code>ng-app</code> 用來宣告 angular 的範圍，也可放在 <code>body</code> 裡面。</li>
<li><code>ng-init</code> 可以直接在 view 中設定初始值，不過偏好管理還是直接設在 js 比較方便</li>
<li><code>ng-model</code> 設定綁定的變數</li>
<li><code>ng-click</code> 點下去觸發，設定好的function()</li>
<li><code>ng-show ng-hide</code> 搭配 ng-model 綁定資料，就可以來根據各種情況來顯示會隱藏</li>
<li><code>ng-repeat</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="nx">p</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">repeat</span><span class="o">=</span><span class="s2">&quot;post in posts&quot;</span><span class="o">&gt;</span><span class="p">.</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$index</span> <span class="err">–</span> <span class="err">取出陣列中的</span><span class="nx">index</span><span class="err">。</span><span class="p">(</span><span class="err">從</span><span class="mi">0</span><span class="err">開始</span><span class="p">)</span>
</span><span class='line'><span class="nx">$first</span> <span class="err">–</span> <span class="err">如果是第一個項目，就傳回</span><span class="kc">true</span><span class="err">、否則為</span><span class="kc">false</span><span class="err">。</span>
</span><span class='line'><span class="nx">$middle</span> <span class="err">–</span> <span class="err">如果不是第一個和最後一個項目，就傳回</span><span class="kc">true</span><span class="err">、否則為</span><span class="kc">false</span><span class="err">。</span>
</span><span class='line'><span class="nx">$last</span> <span class="err">–</span> <span class="err">如果是最後一個項目，就傳回</span><span class="kc">true</span><span class="err">、否則為</span><span class="kc">false</span><span class="err">。</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>ng-checkbox</code> 勾選框</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">ng</span><span class="o">-</span><span class="kc">true</span><span class="o">-</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;YES&quot;</span> <span class="nx">ng</span><span class="o">-</span><span class="kc">false</span><span class="o">-</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;NO&quot;</span>
</span><span class='line'><span class="err">可搭配這兩個設定</span> <span class="nx">ture</span> <span class="err">和</span> <span class="kc">false</span> <span class="err">時的值</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>ng-checked</code> 可以讓勾選框有 &lsquo;選擇全部&rsquo; 勾選或 &lsquo;取消全部&rsquo; 勾選的狀態</li>
<li><code>ng-options</code> 下拉式選單</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="nx">select</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="s2">&quot;Select1&quot;</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">options</span><span class="o">=</span><span class="s2">&quot;post.name for post in posts&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">option</span> <span class="nx">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">&gt;--</span> <span class="err">請選擇</span> <span class="o">--&lt;</span><span class="err">/option&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/select&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>ng-switch</code> 可以搭配 <code>ng-options</code> <a href="http://ithelp.ithome.com.tw/question/10136011">ng-switch</a></li>
<li><code>ng-change</code> 當資料改變會跟者執行</li>
<li><code>ng-include</code> 像是 partial 一樣可以 include 其他 view 進來</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="nx">ng</span><span class="o">-</span><span class="nx">include</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;&#39;/templates/search_bar.html&#39;&quot;</span><span class="o">&gt;&lt;</span><span class="err">/ng-include&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>ng-src</code> 用來取代 html 中 img 標籤裡的 src 屬性</li>
</ul>


<p>由於 AngularJS 是整個網站載完後才開始編譯，使用 ng-src 可以解決還沒載入完 html 發生的錯誤。</p>

<ul>
<li><code>ng-href</code>是用來取代html中 a 標籤裡的href屬性</li>
</ul>


<p>如果Angular還沒載入或載入失敗，會直接讓href讀取到的內容，
而a 標籤裡的href屬性無法辨識，就會連結到404的錯誤頁面。</p>

<ul>
<li><code>ng-bind</code> 綁定 model，避免 html 載入完畢，js 還沒載入導致畫面顯示  的狀態</li>
<li><code>ng-cloak</code> 跟 ng-bind 類似，需要另外增加css，用來解決跨瀏覽器顯示的問題</li>
<li><code>ng-bind-template</code> 可以一次綁定多個 model</li>
<li><code>ng-class</code> 用 angular 設定 class</li>
<li><code>ng-form</code> ng-form允許有巢狀表單(nest forms)，就是在表單內再增加一個或多個form，而form則無法達到此需求。</li>
<li><code>$scope</code> 用來宣告變數，有點像是 js 的 <code>var</code> 或著 rails 的 <code>@</code></li>
<li><code>$watch</code> <a href="http://jsbin.com/oHIXIqa/3/edit?html,js,output">範例</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$watch</span><span class="err">、</span><span class="nx">ng</span><span class="o">-</span><span class="nx">change</span><span class="err">、</span><span class="nx">ng</span><span class="o">-</span><span class="nx">click</span><span class="err">的比較</span>
</span><span class='line'>
</span><span class='line'><span class="err">範例中</span><span class="nx">$watch</span><span class="err">和</span><span class="nx">ng</span><span class="o">-</span><span class="nx">change</span><span class="err">的結果相同，</span>
</span><span class='line'><span class="err">但使用</span><span class="nx">$watch</span><span class="err">指令，</span><span class="nx">watch</span><span class="err">的值還會傳回</span><span class="nx">newValue</span><span class="p">,</span><span class="nx">oldValue</span><span class="err">，</span>
</span><span class='line'><span class="err">提供“改變的新數值”和“前一次改變的舊數值”。</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$watch</span><span class="err">和</span><span class="nx">ng</span><span class="o">-</span><span class="nx">change</span><span class="err">是在改變內容值的時候，觸發事件，</span><span class="nx">ng</span><span class="o">-</span><span class="nx">click</span><span class="err">則只會在點擊輸入框時被執行。</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>filter</code></p>

<p><code>test</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">currency</span>  <span class="err">貨幣符號</span>
</span><span class='line'><span class="nx">date</span>      <span class="err">將</span> <span class="nb">Date</span> <span class="err">轉成指定格式的日期</span>
</span><span class='line'><span class="nx">filter</span>    <span class="err">可以篩選陣列中的內容</span>
</span><span class='line'><span class="nx">json</span>      <span class="nx">json</span>
</span><span class='line'><span class="nx">limitTo</span>   <span class="err">限制陣列或字串裡面的字元個數</span>
</span><span class='line'><span class="nx">number</span>    <span class="err">可以為數值或指定小數以下位數</span>
</span><span class='line'><span class="nx">lowercase</span> <span class="err">將英文字串轉成英文小寫</span>
</span><span class='line'><span class="nx">uppercase</span> <span class="err">將英文字串轉成英文大寫</span>
</span><span class='line'><span class="nx">orderBy</span>   <span class="err">可以將資料作排序</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>官方文件：<br/>
<a href="https://angularjs.org/">AngularJs</a><br/>
<a href="https://angular-ui.github.io/bootstrap/">angular-ui</a><br/>
<a href="https://github.com/angular-ui/ui-router">ui-router</a>  <br/>
<a href="https://angular-ui.github.io/ui-router/site/#/api/ui.router">ui-router github.io</a></p>

<p>參考資料：<br/>
<a href="http://ithelp.ithome.com.tw/profile/share?id=20071512&amp;page=4">入門AngularJS筆記</a><br/>
<a href="http://programer-learn.blogspot.tw/p/angularjs.html">AngularJS 系列</a><br/>
<a href="http://sweeteason.pixnet.net/blog/post/40589830">AngularJS 學習筆記系列 </a><br/>
<a href="http://carolhsu.github.io/blog/2014/06/07/step-by-step-with-angularjs-and-rails/">給 Rails Developer 看的 Angular + Rails 起步走</a><br/>
<a href="http://code.ciphertrick.com/2015/06/01/search-sort-and-pagination-ngrepeat-angularjs/">Search Sort and Pagination in ng-repeat – AngularJS</a>  <br/>
<a href="http://www.angularjs.cn/T001">Angular 中文社區</a><br/>
<a href="http://kirkchen.logdown.com/posts/245678-angularjs-talking-about-the-angularjs-provider-mechanisms">[AngularJs]淺談Angular.js的Provider機制</a><br/>
<a href="http://blog.begin.com.tw/?p=30">ANGULARJS $Q DEFERRED 和 PROMISE</a><br/>
<a href="http://www.cnblogs.com/liulangmao/tag/angular/default.html?page=4">流浪貓の窩 - angular學習筆記</a><br/>
<a href="http://blog.darkthread.net/post-2014-06-11-angularjs-notes-1.aspx">NG筆記1-AngularJS學習資源與術語</a><br/>
<a href="https://github.com/jmcunningham/AngularJS-Learning/blob/master/ZH-TW.md">學習 AngularJS</a><br/>
<a href="http://ithelp.ithome.com.tw/profile/share?id=20091340&amp;page=2">初學 AngularJS 的路</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Pundit 來做權限管理]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/26/pundit-gem/"/>
    <updated>2016-03-26T09:47:16+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/26/pundit-gem</id>
    <content type="html"><![CDATA[<p>可以搭配 <a href="http://mgleon08.github.io/blog/2016/03/08/enum/">enum</a> 簡單快速地做出權限管理。</p>

<!--more-->


<h1>指令</h1>

<p>產生資料夾 <code>app/policies/</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="ss">pundit</span><span class="p">:</span><span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<p>接著就可以根據你的每個 controller action 去個別設定是否有這權限<br/>
通常會搭配 <a href="http://mgleon08.github.io/blog/2016/01/21/devise-rolify-cancan/">devise</a> 和 <a href="http://mgleon08.github.io/blog/2016/03/08/enum/">enum</a>  加上欄位 role 去做調整。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostPolicy</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:post</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">post</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>    <span class="vi">@post</span> <span class="o">=</span> <span class="n">post</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">update?</span>
</span><span class='line'>    <span class="n">user</span><span class="o">.</span><span class="n">admin?</span> <span class="ow">or</span> <span class="ow">not</span> <span class="n">post</span><span class="o">.</span><span class="n">published?</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Controller</h1>

<p>在 controller 就可以藉由 <code>authorize</code> 來設定要授權的是什麼</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">update</span>
</span><span class='line'>  <span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">authorize</span> <span class="vi">@post</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@post</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">post_params</span><span class="p">)</span>
</span><span class='line'>    <span class="n">redirect_to</span> <span class="vi">@post</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">:edit</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>記得要 <code>include Pundit</code><br/>
也可以加上 <code>verify_authorized</code> method 來確保每個 action 都有做好設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Pundit</span>
</span><span class='line'>  <span class="n">after_action</span> <span class="ss">:verify_authorized</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>錯誤處理 rescue</h1>

<p>可以在 <code>ApplicationController</code> 上面直接做處理，相當方便</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">protect_from_forgery</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Pundit</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rescue_from</span> <span class="no">Pundit</span><span class="o">::</span><span class="no">NotAuthorizedError</span><span class="p">,</span> <span class="ss">with</span><span class="p">:</span> <span class="ss">:user_not_authorized</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">user_not_authorized</span>
</span><span class='line'>    <span class="n">flash</span><span class="o">[</span><span class="ss">:alert</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;You are not authorized to perform this action.&quot;</span>
</span><span class='line'>    <span class="n">redirect_to</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">referrer</span> <span class="o">||</span> <span class="n">root_path</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>RSPEC</h1>

<p>基本上 github 上面就非常清楚了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#rails_helper.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;pundit/rspec&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#spec/policies</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="no">PostPolicy</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">subject</span> <span class="p">{</span> <span class="n">described_class</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">permissions</span> <span class="ss">:update?</span><span class="p">,</span> <span class="ss">:edit?</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;denies access if post is published&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">)</span><span class="o">.</span><span class="n">not_to</span> <span class="n">permit</span><span class="p">(</span><span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">admin</span><span class="p">:</span> <span class="kp">false</span><span class="p">),</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">published</span><span class="p">:</span> <span class="kp">true</span><span class="p">))</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;grants access if post is published and user is an admin&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">permit</span><span class="p">(</span><span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">admin</span><span class="p">:</span> <span class="kp">true</span><span class="p">),</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">published</span><span class="p">:</span> <span class="kp">true</span><span class="p">))</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;grants access if post is unpublished&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">permit</span><span class="p">(</span><span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">admin</span><span class="p">:</span> <span class="kp">false</span><span class="p">),</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">published</span><span class="p">:</span> <span class="kp">false</span><span class="p">))</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>gem：
<a href="https://github.com/elabs/pundit">pundit</a></p>

<p>參考資料：<br/>
<a href="http://voice.lawrencesun.info/posts/2014/12/13/rails-notes-authorization-using-pundit/">Rails Notes: Authorization Using Pundit</a><br/>
<a href="http://www.learning-rails.net/2015/09/rail-authorization-with-pundit-and.html">Rail Authorization with pundit and devise</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Routes設定]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/26/rails-routes/"/>
    <updated>2016-03-26T09:37:30+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/26/rails-routes</id>
    <content type="html"><![CDATA[<p>要如何設計網站的 router 是非常重要的一件事。<br/>
在 rails 當中也有許多方法可以做設定。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#直接設定</span>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/patients/:id&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;patients#show&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#REST</span>
</span><span class='line'><span class="c1">#設定 scope 有點像資料夾的概念，可用來區分後台可控制範圍</span>
</span><span class='line'><span class="n">namespace</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1">#也可用單數 resource (會少了 index，然後不用帶id)</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:articles</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:show</span><span class="o">]</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">member</span> <span class="k">do</span> <span class="c1">#Acts on a single resource</span>
</span><span class='line'>      <span class="n">post</span> <span class="ss">:follow</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">collection</span> <span class="k">do</span> <span class="c1">#Acts on a collection of resources</span>
</span><span class='line'>      <span class="n">get</span> <span class="ss">:follow</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>scope</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;foo/meetings/:id&#39;</span><span class="p">,</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s1">&#39;events#show&#39;</span>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;foo/meetings&#39;</span><span class="p">,</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s1">&#39;events#create&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="err">可以改寫成</span>
</span><span class='line'>
</span><span class='line'><span class="n">scope</span> <span class="ss">:controller</span> <span class="o">=&gt;</span> <span class="s2">&quot;events&quot;</span><span class="p">,</span> <span class="ss">:path</span> <span class="o">=&gt;</span> <span class="s2">&quot;/foo&quot;</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="s2">&quot;bar&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;meetings/:id&#39;</span> <span class="o">=&gt;</span> <span class="ss">:show</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="s2">&quot;meeting&quot;</span>
</span><span class='line'>  <span class="n">post</span> <span class="s1">&#39;meetings&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;:create   , :as =&gt; &quot;meetings&quot;</span>
</span><span class='line'><span class="s1">end</span>
</span><span class='line'>
</span><span class='line'><span class="s1">scope :path =&gt; &#39;</span><span class="o">/</span><span class="n">api</span><span class="o">/</span><span class="n">v1</span><span class="o">/</span><span class="s1">&#39;, :module =&gt; &quot;api_v1&quot;, :as =&gt; &#39;</span><span class="n">v1</span><span class="err">&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:projects</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:as</code> 增加 vi_path(相對路徑) 和 v1_url(絕對路徑)<br/>
<code>: path</code>網址 <code>/api/v1/projects</code> <br/>
<code>:controller</code> 指定 controller 是哪個<br/>
<code>:module</code> 指定 controller 對應到 ApiV1::ProjectsController</p>

<h1>導向</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#靜態</span>
</span><span class='line'><span class="n">get</span> <span class="s2">&quot;/welcome&quot;</span> <span class="ss">to</span><span class="p">:</span> <span class="n">redirect</span><span class="p">(</span><span class="s2">&quot;/hello&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#動態</span>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/stories/:name&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="n">redirect</span><span class="p">(</span><span class="s1">&#39;/articles/%{name}&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>redirect</code> 將網址導向到另一個網址</p>

<h1>設定沒有指定的 path 都導向同一個頁面</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s2">&quot;*path&quot;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;welcome#welcome&quot;</span><span class="p">,</span> <span class="ss">:defaults</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:format</span> <span class="o">=&gt;</span> <span class="ss">:json</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>defaults</code> 設定此 routes 輸出都是 json 格式</p>

<h1>特殊條件限定</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#過濾id</span>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;photos/:id&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;photos#show&#39;</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="sr">/[A-Z]\d{5}/</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#黑名單</span>
</span><span class='line'><span class="k">class</span> <span class="nc">BlacklistConstraint</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="vi">@ips</span> <span class="o">=</span> <span class="no">Blacklist</span><span class="o">.</span><span class="n">retrieve_ips</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">matches?</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@ips</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">remote_ip</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;*path&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;blacklist#index&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">constraints</span><span class="p">:</span> <span class="no">BlacklistConstraint</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ow">or</span>
</span><span class='line'>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;*path&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;blacklist#index&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">constraints</span><span class="p">:</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">request</span><span class="o">|</span> <span class="no">Blacklist</span><span class="o">.</span><span class="n">retrieve_ips</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">remote_ip</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>子網域</h3>

<figure class='code'><figcaption><span>resources :posts, constraints: { subdomain: 'api' }</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sb">```</span>
</span></code></pre></td></tr></table></div></figure>


<p>ruby￼constraints subdomain: &lsquo;api&rsquo; do  resources :posts  #<a href="http://api.mgleon08.com/posts%EF%BF%BCend">http://api.mgleon08.com/posts%EF%BF%BCend</a></p>

<figure class='code'><figcaption><span>resources :posts, constraints: { subdomain: 'api' }</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sb">```ruby</span>
</span><span class='line'><span class="sb">namespace :api do</span>
</span><span class='line'><span class="sb">  constraints subdomain: &#39;api&#39; do</span>
</span><span class='line'><span class="sb">    resources :posts</span>
</span><span class='line'><span class="sb">  end</span>
</span><span class='line'><span class="sb">end</span>
</span><span class='line'>
</span><span class='line'><span class="sb">#產生兩個 api</span>
</span><span class='line'><span class="sb">#http://api.mgleon08.com/api/posts</span>
</span><span class='line'>
</span><span class='line'><span class="sb">constraints subdomain: &#39;api&#39; do </span>
</span><span class='line'><span class="sb"> namespace :api, path: &#39;/&#39; do #加上 path 就可以消去後面的</span>
</span><span class='line'><span class="sb">     resources :zombies</span>
</span><span class='line'><span class="sb">   end</span>
</span><span class='line'><span class="sb">end</span>
</span><span class='line'><span class="sb">#上下一樣</span>
</span><span class='line'><span class="sb">namespace :api, path: &#39;/&#39;, constraints: { subdomain: &#39;api&#39; } do</span>
</span><span class='line'><span class="sb">  resources :zombies</span>
</span><span class='line'><span class="sb">end</span>
</span><span class='line'>
</span><span class='line'><span class="sb">#http://api.mgleon08.com/posts</span>
</span></code></pre></td></tr></table></div></figure>


<h1>DRY</h1>

<h3>concern</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">concern</span> <span class="ss">:sociable</span> <span class="k">do</span> <span class="o">|</span><span class="n">options</span><span class="o">|</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:comments</span><span class="p">,</span> <span class="n">options</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:categories</span><span class="p">,</span> <span class="n">options</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:tags</span><span class="p">,</span> <span class="n">options</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">resources</span> <span class="ss">:messages</span><span class="p">,</span> <span class="ss">concerns</span><span class="p">:</span> <span class="ss">:sociable</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span><span class="p">,</span>    <span class="ss">concerns</span><span class="p">:</span> <span class="ss">:sociable</span>
</span><span class='line'><span class="err">￼</span><span class="n">resources</span> <span class="ss">:items</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">concerns</span> <span class="ss">:sociable</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="ss">:create</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>or</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">concern</span> <span class="ss">:sociable</span><span class="p">,</span> <span class="no">Sociable</span>
</span><span class='line'>
</span><span class='line'><span class="n">resources</span> <span class="ss">:messages</span><span class="p">,</span> <span class="ss">concerns</span><span class="p">:</span> <span class="ss">:sociable</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span><span class="p">,</span> <span class="ss">concerns</span><span class="p">:</span> <span class="ss">:sociable</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:items</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">concerns</span> <span class="ss">:sociable</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="ss">:create</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/concerns/sociable.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Sociable</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="n">mapper</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mapper</span><span class="o">.</span><span class="n">resources</span> <span class="ss">:comments</span><span class="p">,</span> <span class="n">options</span>
</span><span class='line'>    <span class="n">mapper</span><span class="o">.</span><span class="n">resources</span> <span class="ss">:categories</span><span class="p">,</span> <span class="n">options</span>
</span><span class='line'>    <span class="n">mapper</span><span class="o">.</span><span class="n">resources</span> <span class="ss">:tags</span><span class="p">,</span> <span class="n">options</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>合併</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:zombies</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="ss">:index</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:humans</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="ss">:inde</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">￼</span><span class="n">with_options</span> <span class="ss">only</span><span class="p">:</span> <span class="ss">:index</span> <span class="k">do</span> <span class="o">|</span><span class="n">list_only</span><span class="o">|</span>
</span><span class='line'>   <span class="n">list_only</span><span class="o">.</span><span class="n">resources</span> <span class="ss">:zombies</span>
</span><span class='line'>   <span class="n">list_only</span><span class="o">.</span><span class="n">resources</span> <span class="ss">:humans</span>
</span><span class='line'>   <span class="n">list_only</span><span class="o">.</span><span class="n">resources</span> <span class="ss">:medical_kits</span>
</span><span class='line'><span class="err">￼￼￼￼</span><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>將 module 名稱改為大寫</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/controllers/api/posts_controller.rb</span>
</span><span class='line'><span class="err">￼</span><span class="k">module</span> <span class="nn">Api</span> <span class="c1">#通常是camelcase</span>
</span><span class='line'>   <span class="k">class</span> <span class="nc">PostController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/initializers/inflections.rb</span>
</span><span class='line'><span class="err">￼</span><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Inflector</span><span class="o">.</span><span class="n">inflections</span><span class="p">(</span><span class="ss">:en</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">inflect</span><span class="o">|</span>
</span><span class='line'><span class="err">￼</span>  <span class="n">inflect</span><span class="o">.</span><span class="n">acronym</span> <span class="s1">&#39;API&#39;</span>
</span><span class='line'><span class="err">￼</span><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>CURL</h1>

<p>可以用 command line 來測試 get</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="n">i</span> <span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span>
</span><span class='line'><span class="c1">#-i 詳細資訊</span>
</span><span class='line'>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="no">IH</span> <span class="s2">&quot;Accept: application/json&quot;</span> <span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="no">IH</span> <span class="s2">&quot;Accept: application/xml&quot;</span> <span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span>
</span><span class='line'><span class="c1">#H HEAD</span>
</span><span class='line'>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="n">i</span> <span class="o">-</span><span class="n">X</span> <span class="no">POST</span> <span class="o">-</span><span class="n">d</span> <span class="s1">&#39;episode[title]=ZombieApocalypseNow&#39;</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#-X the -X option specifies the method</span>
</span><span class='line'><span class="c1">#-d use -d to send data on the request</span>
</span><span class='line'>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="no">Iu</span> <span class="s1">&#39;carlos:secret&#39;</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span>
</span><span class='line'><span class="c1">#上下一樣</span>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="n">I</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">carlos</span><span class="p">:</span><span class="n">secret</span><span class="vi">@localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">episodes</span>
</span><span class='line'><span class="c1">#send Basic Auth credentials with the -u option</span>
</span><span class='line'>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="no">IH</span> <span class="s2">&quot;Accept: application/json&quot;</span> <span class="o">-</span><span class="n">u</span> <span class="s1">&#39;carlos:fakesecret&#39;</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span>
</span><span class='line'><span class="c1">#client asks for JSON</span>
</span><span class='line'>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="no">IH</span> <span class="s2">&quot;Authorization: Token token=16d7d6089b8fe0c5e19bfe10bb156832&quot;</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span>
</span><span class='line'><span class="c1">#Set token on Authorization header</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://guides.rubyonrails.org/routing.html">Rails Routing from the Outside In</a><br/>
<a href="http://rails.ruby.tw/routing.html">Rails 路由：深入淺出</a></p>

<p>參考文件：<br/>
<a href="https://ihower.tw/rails4/routing.html">路由(Routing)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Email 寄信通知]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/26/rails-email/"/>
    <updated>2016-03-26T09:35:21+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/26/rails-email</id>
    <content type="html"><![CDATA[<p>網站中經常會使用寄信來通知用戶，像是註冊信件，確認更改密碼等等之類的。</p>

<!--more-->


<h1>指令</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">mailer</span> <span class="no">TestMailer</span> <span class="n">notify_job_apply</span>
</span></code></pre></td></tr></table></div></figure>


<h1>產生檔案</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/mailers/application_mailer.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ApplicationMailer</span> <span class="o">&lt;</span> <span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">default</span> <span class="ss">from</span><span class="p">:</span> <span class="s2">&quot;from@example.com&quot;</span>
</span><span class='line'>  <span class="n">layout</span> <span class="s1">&#39;mailer&#39;</span>
</span><span class='line'>  
</span><span class='line'> <span class="c1">#寄信給多個收件者</span>
</span><span class='line'> <span class="c1">#default to: Proc.new { Admin.pluck(:email) }, from: &#39;notification@example.com&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#app/mailer/test_mailer.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">TestMailer</span> <span class="o">&lt;</span> <span class="no">ApplicationMailer</span>
</span><span class='line'>  <span class="c1"># Subject can be set in your I18n file at config/locales/en.yml</span>
</span><span class='line'>  <span class="c1"># with the following lookup:</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1">#   en.test_mailer.notify_job_apply.subject</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify_job_apply</span>
</span><span class='line'>    <span class="vi">@greeting</span> <span class="o">=</span> <span class="s2">&quot;Hi&quot;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">#附件檔案</span>
</span><span class='line'>  <span class="n">attachments</span><span class="o">[</span><span class="s1">&#39;filename.jpg&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s1">&#39;/path/to/filename.jpg&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mail</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;to@example.org&quot;</span>
</span><span class='line'>    <span class="n">mail</span> <span class="ss">to</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;email&quot;</span><span class="o">]</span><span class="p">,</span> <span class="ss">bcc</span><span class="p">:</span><span class="o">[</span><span class="s2">&quot;sub-email&quot;</span><span class="o">]</span><span class="p">,</span> <span class="ss">subject</span><span class="p">:</span> <span class="s2">&quot;Title&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>信件內容</h1>

<p>因為不是每個人都可以顯示 html 檔案，因此要有兩份</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/views/test_mailer/notify_job_apply.html.erb</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">TestMailer</span><span class="c1">#notify_job_apply&lt;/h1&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= @greeting %&gt;, find me in app/views/test_mailer/notify_job_apply.html.erb</span>
</span><span class='line'><span class="sx">&lt;/p&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">image_tag</span> <span class="n">attachments</span><span class="o">[</span><span class="s1">&#39;image.jpg&#39;</span><span class="o">].</span><span class="n">url</span><span class="p">,</span> <span class="ss">alt</span><span class="p">:</span> <span class="s1">&#39;My Photo&#39;</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">&#39;photos&#39;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>純文字檔</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/views/test_mailer/notify_job_apply.text.erb </span>
</span><span class='line'><span class="no">TestMailer</span><span class="c1">#notify_job_apply</span>
</span><span class='line'><span class="o">&lt;%=</span> <span class="vi">@greeting</span> <span class="o">%&gt;</span><span class="p">,</span> <span class="n">find</span> <span class="n">me</span> <span class="k">in</span> <span class="n">app</span><span class="o">/</span><span class="n">views</span><span class="o">/</span><span class="n">test_mailer</span><span class="o">/</span><span class="n">notify_job_apply</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">erb</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/model/user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">after_save</span> <span class="p">:</span> <span class="n">notify_job_apply_notification</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="p">:</span> <span class="n">notify_job_apply?</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">notify_job_apply_notification</span>
</span><span class='line'>      <span class="no">UserMailer</span><span class="o">.</span><span class="n">notify_job_apply</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span><span class="o">.</span><span class="n">deliver</span>
</span><span class='line'>      <span class="c1">#deliver_now! 立即送出</span>
</span><span class='line'>      <span class="c1">#deliver_later! 非同步去處理 ex: sidekiq</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="n">edn</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/environments</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#忽略任何寄信錯誤</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">raise_delivery_errors</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'><span class="c1">#測試用，不會真的寄信</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">delivery_method</span> <span class="o">=</span> <span class="ss">:test</span>
</span><span class='line'><span class="c1">#用什麼方式傳遞</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">delivery_method</span> <span class="o">=</span> <span class="ss">:smtp</span>
</span><span class='line'><span class="c1">#網站網址</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">default_url_options</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">host</span><span class="p">:</span> <span class="s2">&quot;http://localhost:3000&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="c1">#一定要轉 symbol 不然會吃不到</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">smtp_settings</span> <span class="o">=</span> <span class="n">config_for</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span><span class="o">.</span><span class="n">symbolize_keys</span>
</span><span class='line'><span class="c1">#使用 sidekiq 做背景處理</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_job</span><span class="o">.</span><span class="n">queue_adapter</span> <span class="o">=</span> <span class="ss">:sidekiq</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定擋</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/email.yml</span>
</span><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">address</span><span class="p">:</span> <span class="s2">&quot;smtp.mailgun.org&quot;</span>
</span><span class='line'>  <span class="ss">port</span><span class="p">:</span> <span class="mi">587</span>
</span><span class='line'>  <span class="ss">domain</span><span class="p">:</span> <span class="s2">&quot;google.com&quot;</span>
</span><span class='line'>  <span class="ss">authentication</span><span class="p">:</span> <span class="s2">&quot;plain&quot;</span>
</span><span class='line'>  <span class="ss">user_name</span><span class="p">:</span> <span class="s2">&quot;postmaster@leon.tw&quot;</span>
</span><span class='line'>  <span class="ss">password</span><span class="p">:</span> <span class="s2">&quot;1234567890&quot;</span>
</span><span class='line'>  <span class="ss">enable_starttls_auto</span><span class="p">:</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h1>預覽測試</h1>

<p><a href="https://github.com/ryanb/letter_opener">letter_opener</a> 這個 gem 可以不用真的寄信，而是直接在畫面上顯示寄信內容，就可以拿來做測試</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/environments</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">delivery_method</span> <span class="o">=</span> <span class="ss">:letter_opener</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://guides.rubyonrails.org/action_mailer_basics.html">Action Mailer</a>  <br/>
<a href="http://rails.ruby.tw/action_mailer_basics.html">Action Mailer 中文</a></p>

<p>參考文件：<br/>
<a href="https://ihower.tw/rails4/actionmailer.html">ActionMailer - E-mail 發送</a><br/>
<a href="https://ihower.tw/blog/archives/3481">如何正確發送(大量) Email 信件</a></p>

<p>gem：<br/>
<a href="https://github.com/madmimi/madmimi-gem">madmimi-gem</a><br/>
<a href="https://github.com/mailgun/mailgun-ruby">mailgun-ruby</a><br/>
<a href="https://github.com/ryanb/letter_opener">letter_opener</a></p>

<p>email:<br/>
<a href="https://madmimi.com/">madmimi.com</a><br/>
<a href="https://www.mailgun.com/">mailgun</a><br/>
<a href="http://aws.amazon.com/tw/ses/">aws</a><br/>
<a href="http://mailchimp.com/">mailchimp</a><br/>
<a href="http://sendgrid.com/">SendGrid</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Module vs Class]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/26/module-and-class/"/>
    <updated>2016-03-26T09:34:18+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/26/module-and-class</id>
    <content type="html"><![CDATA[<p>在 ruby 中經常會使用到 <code>Class</code>，也常常看到 <code>Module</code>
那到底什麼時候要用哪個?</p>

<!-- more -->


<p>先看看兩者的差異</p>

<h1>Module</h1>

<ul>
<li>無法 instantiated（也就是沒有 new method）</li>
<li>可以被 include &amp; extend</li>
</ul>


<h1>Class</h1>

<ul>
<li>可以 instantiated</li>
<li>無法被 include</li>
</ul>


<p>簡單的來說，module 有點像是沒有 new 的 Class</p>

<p>並且可以用 <code>include</code> &amp; <code>extend</code> mixin 到 Class 裡面，變成 Class 的 <code>class method</code> or <code>instance method</code></p>

<p><a href="http://mgleon08.github.io/blog/2016/02/24/include-extend-require/">Ruby 中的 Include Extend Require Load</a></p>

<p>基本上兩種方式都有辦法達成同樣的效果，但差別就在於維護上</p>

<h1>維護</h1>

<p>用 Class 的話，勢必一定要先 new 出來，並且預設會執行 <code>initialize</code> 這個method<br/>
就可以預先設定好一些參數，看起來就會比較簡潔</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Pepole</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hi</span>
</span><span class='line'>    <span class="s2">&quot;hi, </span><span class="si">#{</span><span class="vi">@name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">yo</span>
</span><span class='line'>    <span class="s2">&quot;yo, </span><span class="si">#{</span><span class="vi">@name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">People</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;leon&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">hi</span> <span class="c1">#=&gt; &#39;hi leon&#39;</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">yo</span> <span class="c1">#=&gt; &#39;yo leon&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>用 Module 的話，就必須每次呼叫 <code>hi</code> <code>yo</code> method 時都要在傳入參數進去。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Man</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="s2">&quot;hi, </span><span class="si">#{</span><span class="vi">@name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">yo</span>
</span><span class='line'>    <span class="s2">&quot;yo, </span><span class="si">#{</span><span class="vi">@name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Man</span><span class="o">.</span><span class="n">hi</span><span class="p">(</span><span class="s1">&#39;leon&#39;</span><span class="p">)</span> <span class="c1">#=&gt; &#39;hi leon&#39;</span>
</span><span class='line'><span class="no">Man</span><span class="o">.</span><span class="n">yo</span><span class="p">(</span><span class="s1">&#39;leon&#39;</span><span class="p">)</span> <span class="c1">#=&gt; &#39;yo leon&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>另外是當 Class include 很多 module 時，都會變成 Class 的 <code>class method</code> or <code>instance method</code>，這時就很難去分辨是從哪個 module 來的 method。</p>

<p>因此使用上，看習慣，可維護性等等，去判斷要用 module or class<br/>
再細分要放在 <code>cocern</code> or <code>service object</code> or <code>lib</code></p>

<p>參考文件：<br/>
<a href="http://mgleon08.github.io/blog/2016/02/24/include-extend-require/">module include extend</a>
<a href="http://railsfun.tw/t/class-module-class/402">class與module的差異? class如何繼承</a><br/>
<a href="http://stackoverflow.com/questions/151505/difference-between-a-class-and-a-module">Difference between a class and a module</a><br/>
<a href="http://motion-express.com/blog/20141011-rails-module-model">Rails利用Module整理Model
</a><br/>
<a href="http://motion-express.com/blog/20141209-ruby-class-inheritance">Ruby class 基本的覆寫(override)及繼承(inheritance)</a><br/>
<a href="http://motion-express.com/blog/20141208-class-method-and-instance-method">Ruby當中的class method和instance method差在哪？</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Concern 來整理 Code]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/26/concern/"/>
    <updated>2016-03-26T09:32:30+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/26/concern</id>
    <content type="html"><![CDATA[<p>當有相當多地方用到同樣的東西時，就可以用 concern 來讓 code 變得更乾淨。</p>

<!--more-->


<h1>使用時機</h1>

<ul>
<li>DRYing up model codes</li>
<li><p>Skin Fat Models.</p></li>
<li><p>將可重用的功能抽出來，讓多個 model 共用</p></li>
<li>model 太肥大，將相關的邏輯的 code 放到不同的 concern 裡</li>
<li>ActiveSupport::Concern 的風格</li>
</ul>


<h1>ActiveSupport::Concern</h1>

<p>任務是讓管理 modules 之間的 dependencies 變得容易。<br/>
也可以用 <code>include</code> 同時達成 <code>class methods</code> <code>instance methods</code>
（原本必須 include + extend 才能達成）</p>

<h1>原本作法</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/concerns/sample.rb</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Sample</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Sample2</span>
</span><span class='line'>  <span class="c1"># self.included 會在 Sample 被 include 時執行</span>
</span><span class='line'>  <span class="c1"># base 傳入是誰哪個 Class include 了這個 module</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span> <span class="c1"># 用 class_eval 在該 class 新增 Class method</span>
</span><span class='line'>      <span class="c1">#scope :disabled, -&gt; { where(disabled: true) } 可以定義 scope</span>
</span><span class='line'>      <span class="c1">#has_many :post 可以定義關聯</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">foo</span>
</span><span class='line'>            <span class="s2">&quot;這裡是 class 的 method&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">bar</span>
</span><span class='line'>     <span class="s2">&quot;這裡是 instance 的 method&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/models/test.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Test</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Samples</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Test</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;這裡是 class 的 method&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Test</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">bar</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;這裡是 instance 的 method&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>兩個 module 可以互相 include</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/concerns/sample2.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Sample2</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>      <span class="c1">#do something method</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/models/test.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Test</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Sample</span>
</span><span class='line'>  <span class="c1"># include Sample，再透過 Sample 去 include Sample2 ,這樣就不用一次 include 兩個 module了</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上看起來蠻理想的<br/>
但因為 include <code>Sample2</code> 的是 <code>Sample</code><br/>
所以 <code>Sample2</code> 的 base 就變成了 <code>Sample</code> ， 不是我們要的 <code>Test</code></p>

<h1>更改</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/concerns/sample.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Sample</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Sample2</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Concern</span>
</span><span class='line'>    <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:method</span><span class="p">)</span> <span class="c1"># base 改成 self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/concerns/sample2.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Sample2</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Concern</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:methods</span><span class="p">)</span>  <span class="c1"># base 改成 self</span>
</span><span class='line'>    <span class="c1"># 可以在這裡放當 include 時要執行的東西</span>
</span><span class='line'>    <span class="c1"># 可以存取所有 class level 的東西</span>
</span><span class='line'>    <span class="c1"># ex1: 宣告 shared scope</span>
</span><span class='line'>    <span class="c1"># ex2: 可寫 shared validation</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#可以直接定義 ClassMethods 不需再 send(:extend, ClassMethods) 或是用 class_eval 去定義</span>
</span><span class='line'>   <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>        <span class="c1"># do something</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#可以直接定義 InstanceMethods 不需再 send(:include, InstanceMethods)或是用 instance_eval 去定義</span>
</span><span class='line'>   <span class="k">module</span> <span class="nn">InstanceMethods</span>  <span class="c1">#也可以不用特別定義 module InstanceMethods</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">bar</span>
</span><span class='line'>         <span class="c1"># do something</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/models/test.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Test</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Sample</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>concern vs service object</h1>

<ul>
<li>concern</li>
<li>簡單說就是，有許多 model 有共用的邏輯片段，可以拆出來</li>
<li>service object</li>
<li><p>與 concern 不同</p></li>
<li><p>兩個搭配使用</p></li>
<li>將許多 service object 搬到 concern</li>
</ul>


<p>官方文件：<br/>
<a href="http://api.rubyonrails.org/classes/ActiveSupport/Concern.html">ActiveSupport</a></p>

<p>參考文件：<br/>
<a href="https://ruby-china.org/topics/18401">什麼時候使用Concerns，什麼時候使用Services？</a><br/>
<a href="https://ihower.tw/blog/archives/3949">深入Rails3: ActiveSupport::Concern</a><br/>
<a href="http://stackoverflow.com/questions/14541823/how-to-use-concerns-in-rails-4">How to use concerns in Rails 4</a><br/>
<a href="https://ruby-china.org/topics/19812">ActiveSupport::Concern 小結</a><br/>
<a href="http://adz.cool/posts/210893-rails-use-case-mixin-and-concerns">rails use case - mixin &amp; concerns</a><br/>
<a href="https://www.viget.com/articles/slimming-down-your-models-and-controllers">Slimming Down Your Models and Controllers with Concerns, Service Objects, and Tableless Models</a><br/>
<a href="https://ihower.tw/rails4/activesupport.html">ActiveSupport - 工具函式庫</a></p>
]]></content>
  </entry>
  
</feed>
