<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leon's Blogging]]></title>
  <link href="http://mgleon08.github.com/atom.xml" rel="self"/>
  <link href="http://mgleon08.github.com/"/>
  <updated>2018-08-02T22:45:30+08:00</updated>
  <id>http://mgleon08.github.com/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javascript30 - 005. Flex Panels Image Gallery]]></title>
    <link href="http://mgleon08.github.com/blog/2018/08/02/javascript30-005-flex-panels-image-gallery/"/>
    <updated>2018-08-02T22:44:33+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/08/02/javascript30-005-flex-panels-image-gallery</id>
    <content type="html"><![CDATA[<p><img src="https://mgleon08.github.io/JavaScript30/005.Flex-Panels-Image-Gallery/images/thumbnail.png" alt="" /></p>

<!-- more -->


<h1><a href="https://mgleon08.github.io/JavaScript30/005.Flex-Panels-Image-Gallery/index.html">Demo</a> | <a href="https://github.com/mgleon08/JavaScript30/tree/master/005.Flex-Panels-Image-Gallery">Github</a></h1>

<p>練習 flex~</p>

<h1>box-sizing</h1>

<p>元素的實際寬、高包含了內容的寬高加上padding 和 border長度</p>

<ul>
<li><code>content-box</code> - 設定的寬度僅為內容寬度，而內距與邊框額外加上去。</li>
<li><code>border-box</code> - 設定的寬度就已經包含內容寬度、內距與邊框寬度。</li>
<li><code>inherit</code> - 繼承至父層的 broder-sizing 設定値。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">html</span> <span class="p">{</span>
</span><span class='line'> <span class="n">box</span><span class="o">-</span><span class="n">sizing</span><span class="o">:</span> <span class="k">border</span><span class="o">-</span><span class="n">box</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://mandywahahablog.wordpress.com/2015/05/20/css-box-sizing-%E5%B1%AC%E6%80%A7%E7%AD%86%E8%A8%98/">CSS box-sizing 屬性筆記</a></li>
<li><a href="http://zh-tw.learnlayout.com/box-sizing.html">關於 box-sizing 屬性</a></li>
<li><a href="http://www.wibibi.com/info.php?tid=CSS3_box-sizing_%E5%B1%AC%E6%80%A7">CSS3 box-sizing 屬性</a></li>
</ul>


<h1>overflow</h1>

<ul>
<li><code>visible</code> - 內容不會被修剪，當超出元素的範圍時內容會呈現在元素框之外。</li>
<li><code>hidden</code> - 內容會被修剪，但不會顯示捲軸，當超出元素的範圍時隱藏內容。</li>
<li><code>scroll</code> - 內容會被修剪，當超出範圍時自動變成捲軸呈現方式。</li>
<li><code>auto</code> - 自動選擇由瀏覽器決定如何顯示(預設值)，當超出範圍時自動變成捲軸呈現方式。</li>
<li><code>inherit</code> - 繼承至父層的 overflow 設定値。</li>
<li><code>overflow-x</code> - 可設定「水平」方向，當超出範圍時自動變成捲軸呈現方式。(需要內有寬度大於元素框的物件)</li>
<li><code>overflow-y</code> - 可設定「垂直」方向，當超出範圍時自動變成捲軸呈現方式。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.panels</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">min-height</span><span class="o">:</span><span class="m">100</span><span class="n">vh</span><span class="p">;</span>
</span><span class='line'>  <span class="k">overflow</span><span class="o">:</span> <span class="k">hidden</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://www.eion.com.tw/Blogger/?Pid=1158">CSS overflow 內容「溢出邊界」區塊層元素</a></li>
</ul>


<h1>transition 轉場</h1>

<p>可以針對各種效果做轉場 <code>font-size</code> <code>flex</code> <code>background</code> &hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.panel</span> <span class="p">{</span>
</span><span class='line'>  <span class="c">/* Safari transitionend event.propertyName === flex */</span>
</span><span class='line'>  <span class="c">/* Chrome + FF transitionend event.propertyName === flex-grow */</span>
</span><span class='line'>  <span class="n">transition</span><span class="o">:</span>
</span><span class='line'>    <span class="k">font-size</span> <span class="m">0.7s</span> <span class="n">cubic</span><span class="o">-</span><span class="n">bezier</span><span class="p">(</span><span class="m">0</span><span class="o">.</span><span class="m">61</span><span class="o">,-</span><span class="m">0</span><span class="o">.</span><span class="m">19</span><span class="o">,</span> <span class="m">0</span><span class="o">.</span><span class="m">7</span><span class="o">,-</span><span class="m">0</span><span class="o">.</span><span class="m">11</span><span class="p">)</span><span class="o">,</span>
</span><span class='line'>    <span class="n">flex</span> <span class="m">0.7s</span> <span class="n">cubic</span><span class="o">-</span><span class="n">bezier</span><span class="p">(</span><span class="m">0</span><span class="o">.</span><span class="m">61</span><span class="o">,-</span><span class="m">0</span><span class="o">.</span><span class="m">19</span><span class="o">,</span> <span class="m">0</span><span class="o">.</span><span class="m">7</span><span class="o">,-</span><span class="m">0</span><span class="o">.</span><span class="m">11</span><span class="p">)</span><span class="o">,</span>
</span><span class='line'>    <span class="k">background</span> <span class="m">0.2s</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions">CSS 轉場</a></li>
</ul>


<h1>e.propertyName</h1>

<p>透過 <code>e.propertyName</code> 知道哪個 class 執行完 <code>transitionend</code> 觸發了 <code>toggleActive</code>，就可以針對想要判斷的做處理</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">toggleActive</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">propertyName</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// 因為在 Safari 為 flex, Chrome 為 flex-grow 因此用 includes</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">propertyName</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s1">&#39;flex&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">toggle</span><span class="p">(</span><span class="s1">&#39;open-active&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">panels</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">panel</span> <span class="o">=&gt;</span> <span class="nx">panel</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;transitionend&#39;</span><span class="p">,</span> <span class="nx">toggleActive</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript30 - 004. Array Cardio Day 1]]></title>
    <link href="http://mgleon08.github.com/blog/2018/08/01/javascript30-004-array-cardio-day-1/"/>
    <updated>2018-08-01T22:53:10+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/08/01/javascript30-004-array-cardio-day-1</id>
    <content type="html"><![CDATA[<!-- more -->


<h1><a href="https://mgleon08.github.io/JavaScript30/004.Array-Cardio-Day-1/index.html">Demo</a> | <a href="https://github.com/mgleon08/JavaScript30/tree/master/004.Array-Cardio-Day-1">Github</a></h1>

<p>練習 js 的 array 各種 methods</p>

<h1>console.table</h1>

<p>在 console 將 data 以 table 的形式呈現</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">table</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>filter</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">fifteen</span> <span class="o">=</span> <span class="nx">inventors</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">inventor</span><span class="p">){</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">inventor</span><span class="p">.</span><span class="nx">year</span> <span class="o">&gt;=</span> <span class="mi">1500</span> <span class="o">&amp;&amp;</span> <span class="nx">inventor</span><span class="p">.</span><span class="nx">year</span> <span class="o">&lt;=</span> <span class="mi">1600</span><span class="p">){</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">fifteen</span> <span class="o">=</span> <span class="nx">inventors</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">inventor</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="nx">inventor</span><span class="p">.</span><span class="nx">year</span> <span class="o">&gt;=</span> <span class="mi">1500</span> <span class="o">&amp;&amp;</span> <span class="nx">inventor</span><span class="p">.</span><span class="nx">year</span> <span class="o">&lt;=</span> <span class="mi">1600</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h1>map</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">fullname</span> <span class="o">=</span> <span class="nx">inventors</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">inventor</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="nx">inventor</span><span class="p">.</span><span class="nx">first</span> <span class="o">+</span> <span class="s1">&#39; &#39;</span> <span class="o">+</span> <span class="nx">inventor</span><span class="p">.</span><span class="nx">last</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">fullname</span> <span class="o">=</span> <span class="nx">inventors</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">inventor</span> <span class="o">=&gt;</span> <span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">inventor</span><span class="p">.</span><span class="nx">first</span><span class="p">}</span> <span class="nx">$</span><span class="p">{</span><span class="nx">inventor</span><span class="p">.</span><span class="nx">last</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>sort</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">ordered</span> <span class="o">=</span> <span class="nx">inventors</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">){</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">year</span> <span class="o">&gt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">year</span><span class="p">){</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span>
</span><span class='line'>  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">ordered</span> <span class="o">=</span> <span class="nx">inventors</span><span class="p">.</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">year</span> <span class="o">&gt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">year</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>reduce</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">totalYears</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">inventors</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">totalYears</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">inventors</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">passed</span> <span class="o">-</span> <span class="nx">inventors</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">year</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">totalYears</span> <span class="o">=</span> <span class="nx">inventors</span><span class="p">.</span><span class="nx">reduce</span><span class="p">((</span><span class="nx">total</span><span class="p">,</span> <span class="nx">inventor</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">total</span> <span class="o">+</span> <span class="p">(</span><span class="nx">inventor</span><span class="p">.</span><span class="nx">passed</span> <span class="o">-</span> <span class="nx">inventor</span><span class="p">.</span><span class="nx">year</span><span class="p">)</span>
</span><span class='line'><span class="p">},</span> <span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>combo</h1>

<p><a href="https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris">https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">category</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s1">&#39;.mw-category&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">links</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">from</span><span class="p">(</span><span class="nx">category</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">))</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">de</span> <span class="o">=</span> <span class="nx">links</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">link</span> <span class="o">=&gt;</span> <span class="nx">link</span><span class="p">.</span><span class="nx">textContent</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">streetName</span> <span class="o">=&gt;</span> <span class="nx">streetName</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s1">&#39;de&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">links</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">category</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)]</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>category.querySelectorAll 會是 NodeList 因此要用 <code>Array.from</code> or <code>[...]</code> 轉成 array 才能夠使用 map</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript30 - 003. Playing With CSS Variables and JS]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/31/javascript30-003-playing-with-css-variables-and-js/"/>
    <updated>2018-07-31T22:31:16+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/31/javascript30-003-playing-with-css-variables-and-js</id>
    <content type="html"><![CDATA[<p><img src="https://mgleon08.github.io/JavaScript30/003.Playing-with-CSS-Variables-and-JS/images/thumbnail.png" alt="" /></p>




<!-- more -->




<h1 id="demohttpsmgleon08githubiojavascript30003playingwithcssvariablesandjsindexhtmlgithubhttpsgithubcommgleon08javascript30treemaster003playingwithcssvariablesandjs"><a href="https://mgleon08.github.io/JavaScript30/003.Playing-with-CSS-Variables-and-JS/index.html">Demo</a> | <a href="https://github.com/mgleon08/JavaScript30/tree/master/003.Playing-with-CSS-Variables-and-JS">Github</a></h1>




<p>利用 js 來更新 css 的效果!</p>




<h1 id="rangeinput">range input</h1>




<ul>
<li><code>data-sizing</code>: 自行新增屬性，用來判斷 size 的單位</li>
</ul>




<pre><code class="html language-html">&lt;label for="spacing"&gt;Spacing:&lt;/label&gt;
&lt;input type="range" name="spacing" min="10" max="200" value="10" data-sizing="px"&gt;
</code></pre>




<h1 id="dataset">dataset</h1>




<p>透過 js 抓取 <code>this.dataset</code>，就可以拿到自行新增屬性的值，回傳一個 object 回來，可以多個</p>




<pre><code class="js language-js">function handleUpdate() {
  this.dataset
}
</code></pre>




<p>也可以用 getAttribute</p>




<pre><code class="js language-js">function handleUpdate(){
  this.getAttribute('data-sizing')
}
</code></pre>




<h1 id="colorinput">color input</h1>




<p>在 browser 上產生，color 選擇器</p>




<pre><code class="html language-html">&lt;!-- value 一開始預設的值 --&gt;
&lt;label for="base"&gt;Base Color&lt;/label&gt;
&lt;input type="color" name="base" value="#ffc600"&gt;
</code></pre>




<h1 id="root">:root</h1>




<p>css 原生變數定義</p>




<pre><code class="css language-css">:root {
/* 定義變數的方法 */
  --base: #ffc600;
  --spacing: 10px;
  --blur: 10px;
}

img {
/* 變數的使用方式 */
  padding: var(--spacing);
}
</code></pre>




<ul>
<li><a href="http://muki.tw/tech/native-css-variables/">SASS, LESS 退散，原生 CSS 可以使用變數啦！</a></li>
</ul>




<h1 id="filter">filter</h1>




<p>css 的濾鏡效果</p>




<pre><code class="css language-css">img {
  filter: blur(10px); /* blur 模糊 */
}
</code></pre>




<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter">MDN filter</a></li>
</ul>




<h1 id="queryselectorall">querySelectorAll</h1>




<p>可抓取節點上的 dom，並且回傳值會是 <code>NodeList</code> 不是 <code>array</code></p>




<blockquote>
  <p>NodeList 不是 Array，但仍可以使用 forEach() 方法來進行迭代，但有些還是只有 Array 才會有</p>
</blockquote>




<pre><code class="js language-js">document.querySelectorAll('.controls input')
</code></pre>




<ul>
<li><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/NodeList">MDN NodeList</a></li>

<li><a href="http://www.jstips.co/zh_tw/javascript/converting-a-node-list-to-an-array/">將 Node List 轉換成陣列</a></li>
</ul>




<h1 id="setproperty">setProperty</h1>




<p>更改屬性</p>




<pre><code class="js language-js">function handleUpdate() {
  const suffix = this.dataset.sizing || '';
  // 更改 style 的屬性，
  document.documentElement.style.setProperty(`--${this.name}`, this.value + suffix)
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript30 - 002. CSS + JS Clock]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/30/javascript30-002-css-js-clock/"/>
    <updated>2018-07-30T23:10:35+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/30/javascript30-002-css-js-clock</id>
    <content type="html"><![CDATA[<p><img src="https://mgleon08.github.io/JavaScript30/002.CSS+JS-Clock/images/thumbnail.png" alt="" /></p>

<!-- more -->


<h1><a href="https://mgleon08.github.io/JavaScript30/002.CSS+JS-Clock/index.html">Demo</a> | <a href="https://github.com/mgleon08/JavaScript30/tree/master/002.CSS%2BJS-Clock">Github</a></h1>

<p>利用 js + css 效果做出時鐘</p>

<h1>translateY</h1>

<p>y 軸方向的距離 (translateX, translateZ, translate3d..s)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.clock-face</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">position</span><span class="o">:</span> <span class="k">relative</span><span class="p">;</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span>
</span><span class='line'>  <span class="n">transform</span><span class="o">:</span> <span class="n">translateY</span><span class="p">(</span><span class="m">-3px</span><span class="p">);</span> <span class="c">/* account for the height of the clock hands */</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translateY">MDN translateY()</a></li>
<li><a href="http://webkkl.com/style/translate.php">transform:translate()（元素的表示位置進行平移）</a></li>
</ul>


<h1>transform-origin</h1>

<p>旋轉元素的基點位置(default: 50%)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.hand</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">transform</span><span class="o">-</span><span class="n">origin</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span> <span class="c">/* 100% 最右邊 */</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://wcc723.github.io/css/2013/10/10/css-transform-origin/">CSS沒有極限 - CSS transform-origin</a></li>
</ul>


<h1>transition-timing-function</h1>

<blockquote><p>做出時鐘頓點的效果</p></blockquote>

<p>數率曲線</p>

<ul>
<li>ease：<code>cubic-bezier(0.25, 0.1, 0.25, 1)</code></li>
<li>ease-in: <code>cubic-bezier(0.42, 0,1, 1)</code></li>
<li>ease-out: <code>cubic-bezier(0, 0, 0.58, 1)</code></li>
<li>ease-in-out: <code>cubic-bezier(0.42, 0, 0.58, 1)</code></li>
<li>linear: <code>cubic-bezier(0, 0, 1, 1)</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.hand</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">transition</span><span class="o">-</span><span class="n">timing</span><span class="o">-</span><span class="n">function</span><span class="o">:</span> <span class="n">cubic</span><span class="o">-</span><span class="n">bezier</span><span class="p">(</span><span class="m">0</span><span class="o">.</span><span class="m">1</span><span class="o">,</span> <span class="m">2</span><span class="o">.</span><span class="m">7</span><span class="o">,</span> <span class="m">0</span><span class="o">.</span><span class="m">58</span><span class="o">,</span> <span class="m">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://wcc723.github.io/css/2013/08/24/css-transtion-speed/">CSS transition 各種速率</a></li>
<li><a href="http://devdocs.io/css/timing-function#The_cubic-bezier(">timing-functions</a>_class_of_timing-functions)</li>
<li><a href="https://segmentfault.com/a/1190000004618375">實用的 CSS — 貝塞爾曲線(cubic-bezier)</a></li>
</ul>


<h1>setInterval</h1>

<p>定時器，可以設定多久就執行指定的動作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// setInterval(function, ms time)</span>
</span><span class='line'><span class="nx">setInterval</span><span class="p">(</span><span class="nx">setDate</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://blog.camel2243.com/2016/08/06/javascript-%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3-settimeout-%E8%88%87-setinterval-%E7%9A%84%E4%B8%8D%E5%90%8C%E4%B9%8B%E8%99%95/">[javascript] 深入瞭解 setTimeout() 與 setInterval() 的不同之處</a></li>
</ul>


<h1>Date Time</h1>

<p>透過 js 時間函示，拿到時, 分, 秒，在轉換成度數，呈現在 <code>rotate(${度數}deg)</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">now</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">hours</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">mins</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">secs</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript30 - 001. JavaScript Drum Kit]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/29/javascript30-001-javascript-drum-kit/"/>
    <updated>2018-07-29T21:49:28+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/29/javascript30-001-javascript-drum-kit</id>
    <content type="html"><![CDATA[<p><img src="https://mgleon08.github.io/JavaScript30/001.JavaScript-Drum-Kit/images/thumbnail.png" alt="" /></p>

<!-- more -->


<h1><a href="https://mgleon08.github.io/JavaScript30/001.JavaScript-Drum-Kit/index.html">Demo</a> | <a href="https://github.com/mgleon08/JavaScript30/tree/master/001.JavaScript-Drum-Kit">GitHub</a></h1>

<p>利用 js 監聽鍵盤 event，使其發出對應的音效</p>

<h1>window.addEventListener</h1>

<p>監聽 event</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// 在全局監聽 keydown 動作，並執行 playSound function</span>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;keydown&#39;</span><span class="p">,</span> <span class="nx">playSound</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 在所有 key 都加上監聽 transitionend (CSS Transition Events) 特效，特效結束後就執行 removeTransition function</span>
</span><span class='line'><span class="nx">keys</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">key</span> <span class="o">=&gt;</span> <span class="nx">key</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;transitionend&#39;</span><span class="p">,</span> <span class="nx">removeTransition</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">相當於</span>
</span><span class='line'><span class="cm">keys.forEach(function (key) {</span>
</span><span class='line'><span class="cm">  return key.addEventListener(&#39;transitionend&#39;, removeTransition);</span>
</span><span class='line'><span class="cm">});</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<h1>data-key</h1>

<p>html 可以自行定義一個屬性為 <code>data-* attribute</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;key&quot;</span> <span class="na">data-key=</span><span class="s">&quot;65&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;kbd&gt;</span>A<span class="nt">&lt;/kbd&gt;</span>
</span><span class='line'>  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;sound&quot;</span><span class="nt">&gt;</span>clap<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;audio</span> <span class="na">data-key=</span><span class="s">&quot;65&quot;</span> <span class="na">src=</span><span class="s">&quot;../sounds/clap.wav&quot;</span><span class="nt">&gt;&lt;/audio&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// 透過 e.keyCode 拿到對應的 data-key</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">key</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="err">`</span><span class="p">.</span><span class="nx">key</span><span class="p">[</span><span class="nx">data</span><span class="o">-</span><span class="nx">key</span><span class="o">=</span><span class="s2">&quot;${e.keyCode}&quot;</span><span class="p">]</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">audio</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="err">`</span><span class="nx">audio</span><span class="p">[</span><span class="nx">data</span><span class="o">-</span><span class="nx">key</span><span class="o">=</span><span class="s2">&quot;${e.keyCode}&quot;</span><span class="p">]</span><span class="err">`</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://pjchender.blogspot.com/2017/01/html-5-data-attribute.html">[技術分享] 什麼是 HTML 5 中的資料屬性（data-* attribute）</a></li>
</ul>


<h1>classList</h1>

<p>在既有的 class 上面，新增或刪除 class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">key</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s1">&#39;playing&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="s1">&#39;playing&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>audio</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;audio</span> <span class="na">data-key=</span><span class="s">&quot;65&quot;</span> <span class="na">src=</span><span class="s">&quot;../sounds/clap.wav&quot;</span><span class="nt">&gt;&lt;/audio&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// 設定時間</span>
</span><span class='line'><span class="nx">audio</span><span class="p">.</span><span class="nx">currentTime</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="c1">// 開始播放</span>
</span><span class='line'><span class="nx">audio</span><span class="p">.</span><span class="nx">play</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h1>vh</h1>

<p>vh, vw 可視範圍，可隨著螢幕的長寬去做變化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.keys</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">min-height</span><span class="o">:</span> <span class="m">100</span><span class="n">vh</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://pjchender.blogspot.com/2015/04/css-3vh-vw.html">[筆記] 好用的css 3新單位vh vw ─ 讓你的圖片可以隨著螢幕大小而不同</a></li>
</ul>


<h1>shadow</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.key</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">text-shadow</span><span class="o">:</span> <span class="m">0px</span> <span class="m">0px</span> <span class="m">15px</span> <span class="k">rgb</span><span class="p">(</span><span class="m">255</span><span class="o">,</span> <span class="m">251</span><span class="o">,</span> <span class="m">40</span><span class="p">);</span>
</span><span class='line'>  <span class="c">/* </span>
</span><span class='line'><span class="c">    h-shadow：水平位移距離</span>
</span><span class='line'><span class="c">    v-shadow：垂直位移距離</span>
</span><span class='line'><span class="c">    blur：模糊半徑</span>
</span><span class='line'><span class="c">    spread：擴散距離</span>
</span><span class='line'><span class="c">    color：顏色 </span>
</span><span class='line'><span class="c">  */</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">15px</span> <span class="m">#ffc600</span><span class="p">;</span>
</span><span class='line'>  <span class="c">/* </span>
</span><span class='line'><span class="c">     h-shadow：水平位移距離</span>
</span><span class='line'><span class="c">     v-shadow：垂直位移距離</span>
</span><span class='line'><span class="c">     blur：模糊半徑</span>
</span><span class='line'><span class="c">     spread：擴散距離</span>
</span><span class='line'><span class="c">     color：顏色</span>
</span><span class='line'><span class="c">     inset：內陰影</span>
</span><span class='line'><span class="c">     最少要有 h-shadow 及 v-shadow 兩個參數</span>
</span><span class='line'><span class="c">  */</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://abgne.tw/css/css3-lab/css3-text-shadow.html">[CSS3]text-shadow 文字陰影</a></li>
<li><a href="https://abgne.tw/css/css3-lab/css3-box-shadow.html">[CSS3]box-shadow 區塊陰影</a></li>
</ul>


<h1>letter-spacing</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.sound</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">font-size</span><span class="o">:</span> <span class="m">1</span><span class="o">.</span><span class="m">2</span><span class="n">rem</span><span class="p">;</span>
</span><span class='line'>  <span class="k">text-transform</span><span class="o">:</span> <span class="k">uppercase</span><span class="p">;</span> <span class="c">/* 轉大寫 */</span>
</span><span class='line'>  <span class="k">letter-spacing</span><span class="o">:</span> <span class="m">1px</span><span class="p">;</span> <span class="c">/* 字間距離 */</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#ffc600</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>transform</h1>

<p>控制元素的變形的效果 (translate 位移、scale 放大縮小、rotate 旋轉、skew 傾斜、<a href="http://www.oxxostudio.tw/articles/201409/svg-20-transform-matrix.html">matrix</a>)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.playing</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">transform</span><span class="o">:</span><span class="n">scale</span><span class="p">(</span><span class="m">1</span><span class="o">.</span><span class="m">1</span><span class="p">);</span> <span class="c">/* (x軸,y軸) 放大 1.1 倍 */</span>
</span><span class='line'>  <span class="k">border-color</span><span class="o">:</span><span class="m">#ffc600</span><span class="p">;</span>
</span><span class='line'>  <span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">15px</span> <span class="m">#ffc600</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://www.w3schools.com/css/css3_2dtransforms.asp">CSS 2D Transforms</a></li>
<li><a href="http://www.oxxostudio.tw/articles/201409/svg-19-transform.html">SVG 研究之路 (19) - transform 基礎篇</a></li>
</ul>


<p>參考文章</p>

<ul>
<li><a href="https://javascript30.com/">Wes Bos javascript30</a></li>
<li><a href="https://guahsu.io/2017/05/JavaScript30-01-Java-Script-Drum-Kit/">「JS30紀錄＆心得」01 - JavaScript Drum Kit</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS Flex 屬性]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/28/css-flex/"/>
    <updated>2018-07-28T21:46:59+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/28/css-flex</id>
    <content type="html"><![CDATA[<p>css 用來排版的新語法，以前都是用 float 來做排版，但相當麻煩，用了 flex 變的相當輕鬆好用</p>

<!-- more -->


<h1>Flex 外容器屬性</h1>

<h3>display</h3>

<p>必須宣告才能使用 flex</p>

<ul>
<li><code>flex</code></li>
<li><code>inline-flex</code>: 相當於 <code>inline-block</code> + <code>flex</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>flex-direction</h3>

<p>排序方向</p>

<ul>
<li><code>row</code>: 水平 - Items are placed the same as the text direction.</li>
<li><code>row-reverse</code>: 水平反轉 - Items are placed opposite to the text direction.</li>
<li><code>column</code>: 垂直 - Items are placed top to bottom.</li>
<li><code>column-reverse</code>: 垂直反轉 - Items are placed bottom to top</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">flex-direction</span><span class="o">:</span> <span class="n">row</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>flex-wrap</h3>

<p>超出範圍時的處理方式</p>

<ul>
<li><code>nowrap</code>: 換行 (<em>default</em>)</li>
<li><code>wrap</code>: 不換行</li>
<li><code>wrap-reverse</code>: 換行時反轉</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">flex-wrap</span><span class="o">:</span> <span class="no">nowrap</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>flex-flow</h3>

<p><code>flex-direction</code> 與 <code>flex-wrap</code> 的縮寫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">flex-flow</span><span class="o">:</span> <span class="n">row</span> <span class="no">nowrap</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>justify-content</h3>

<p>水平軸對齊設定</p>

<ul>
<li><code>flex-start</code>: Items align to the left side of the container.</li>
<li><code>flex-end</code>: Items align to the right side of the container.</li>
<li><code>center</code>: Items align at the center of the container.</li>
<li><code>space-between</code>: Items display with equal spacing between them. 平均分配內容元素，左右元素將會與 main start 和 main end 貼齊</li>
<li><code>space-around</code>: Items display with equal spacing around them. 平均分配內容元素，間距也是平均分配</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">justify-content</span><span class="o">:</span> <span class="no">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>align-items</h3>

<p>交錯軸的對齊設定</p>

<ul>
<li><code>flex-start</code>: Items align to the top of the container.</li>
<li><code>flex-end</code>: Items align to the bottom of the container.</li>
<li><code>center</code>: Items align at the vertical center of the container.</li>
<li><code>baseline</code>: Items display at the baseline of the container. 以所有內容元素的基線作為對齊標準</li>
<li><code>stretch</code>: Items are stretched to fit the container. 將內容元素全部撐開至 Flexbox 的高度 (<em>default</em>)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">align-items</span><span class="o">:</span> <span class="no">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>align-content</h3>

<p><code>align-items</code> 多行版本</p>

<blockquote><p>注意 stretch 在高度被限制的情況下不會正常伸展。</p></blockquote>

<ul>
<li><code>flex-start</code>: Lines are packed at the top of the container.</li>
<li><code>flex-end</code>: Lines are packed at the bottom of the container.</li>
<li><code>center</code>: Lines are packed at the vertical center of the container.</li>
<li><code>space-between</code>: Lines display with equal spacing between them. 將第一行與最後一行分別對齊最上方與最下方</li>
<li><code>space-around</code>: Lines display with equal spacing around them. 每行平均分配間距</li>
<li><code>stretch</code>: Lines are stretched to fit the container.內容元素全部撐開（<em>default</em>）</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">align-content</span><span class="o">:</span> <span class="no">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Flex 內元件屬性</h1>

<h3>flex</h3>

<p>包含了 <code>flex-grow</code> <code>flex-shrink</code> <code>flex-basis</code></p>

<ul>
<li><code>flex-grow</code>: 數字，無單位，當子元素的 flex-basis 長度「小」於它自己在父元素分配到的長度，按照數字做相對應的「伸展」比例分配，預設值為 0，不會進行彈性變化，不可為負值，設為 1 則會進行彈性變化。</li>
<li><code>flex-shrink</code>: 數字，無單位，當子元素的 flex-basis 長度「大」於它自己在父元素分配到的長度，按照數字做相對應的「壓縮」比例分配，預設值為 1，設為 0 的話不會進行彈性變化，不可為負值。</li>
<li><code>flex-basis</code>: 子元素的基本大小，作為父元素的大小比較基準，預設值為 0，也因為預設值為 0，所以沒有設定此屬性的時候，會以直接採用 flex-grow 屬性，flex-basis 也可以設為 auto，如果設為 auto，就表示子元素以自己的基本大小為單位。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">flex</span><span class="o">:</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// 當設定一個是 flex-grow</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>align-self</h3>

<p><code>align-self</code> 的作用在於覆寫已經套用 <code>align-items</code> 的屬性，可調整內元件交錯軸的對齊設定(主軸線則不能另外做設定)，且可以個別設定單一元件的值。</p>

<ul>
<li><code>auto</code></li>
<li><code>flex-start</code></li>
<li><code>flex-end</code></li>
<li><code>center</code></li>
<li><code>baseline</code></li>
<li><code>stretch</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">align-self</span><span class="o">:</span> <span class="no">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>order</h3>

<p>可重新定義元件的排列順序，順序會依據數值的大小排列。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.container</span> <span class="p">{</span>
</span><span class='line'>  <span class="na">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>  <span class="na">order</span><span class="o">:</span> <span class="mi">-1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>playground</h1>

<p data-height="265" data-theme-id="0" data-slug-hash="rrYjvX" data-default-tab="css,result" data-user="leonji" data-pen-title="rrYjvX" class="codepen">See the Pen <a href="https://codepen.io/leonji/pen/rrYjvX/">rrYjvX</a> by leonji (<a href="https://codepen.io/leonji">@leonji</a>) on <a href="https://codepen.io">CodePen</a>.</p>


<script async src="https://static.codepen.io/assets/embed/ei.js"></script>


<p>參考文件</p>

<ul>
<li><a href="https://flexboxfroggy.com/">flexboxfroggy</a></li>
<li><a href="https://flexbox.io/">flexbox Wes Bos</a></li>
<li><a href="http://www.oxxostudio.tw/articles/201501/css-flexbox.html">深入解析 CSS Flexbox </a></li>
<li><a href="https://wcc723.github.io/css/2017/07/21/css-flex/">圖解：CSS Flex 屬性一點也不難</a></li>
<li><a href="https://hackernoon.com/the-ultimate-css-battle-grid-vs-flexbox-d40da0449faf">The ultimate CSS battle: Grid vs Flexbox</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nothing Is Something by Sandi Metz]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/26/nothing-is-something-by-sandi-metz/"/>
    <updated>2018-07-26T21:36:02+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/26/nothing-is-something-by-sandi-metz</id>
    <content type="html"><![CDATA[<p>這是 Sandi Metz 2015 的演講，雖然有點舊，但還是很不錯，來紀錄一下</p>

<!-- more -->


<h3>Smalltalk Infected</h3>

<p>一開始先介紹 <code>if</code> 可以改寫為自己的 method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">true</span><span class="o">.</span><span class="n">class</span> <span class="c1"># TrueClass</span>
</span><span class='line'><span class="kp">false</span><span class="o">.</span><span class="n">class</span> <span class="c1"># FalseClass</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TrueClass</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_false</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">FalseClass</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_false</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">if_true</span><span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;evaluated block&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">evaluated</span> <span class="n">block</span>
</span><span class='line'><span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來改寫為 <code>Object</code> <code>FalseClass</code> <code>NilClass</code> 因為在 ruby 的世界中，除了 <code>false</code> 和 <code>nil</code> 是 &ldquo;Falsy"，其他都是 "truthy&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Object</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_false</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">FalseClass</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_false</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">NilClass</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">if_true</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">NilClass</span>
</span><span class='line'>    <span class="k">yield</span>
</span><span class='line'>    <span class="nb">self</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">if_true</span><span class="p">{</span> <span class="nb">puts</span> <span class="s1">&#39;a&#39;</span> <span class="p">}</span><span class="o">.</span><span class="n">if_false</span><span class="p">{</span> <span class="nb">puts</span><span class="s1">&#39;b&#39;</span> <span class="p">}</span>
</span><span class='line'><span class="n">a</span>
</span><span class='line'><span class="c1"># true</span>
</span></code></pre></td></tr></table></div></figure>


<p>但我們並不想改寫 ruby 原本就有的 method，而是將上面的技巧應用在需要的地方</p>

<h3>Condition Averse</h3>

<p>Sometimes nil is nothing</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ids</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;pig&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;sheep&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">animals</span> <span class="o">=</span> <span class="n">ids</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="nb">id</span><span class="o">|</span> <span class="no">Animal</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)}</span>
</span><span class='line'><span class="c1"># =&gt; [#&lt;Animal:0x007f94b290ae90 @name=&quot;pig&quot;&gt;, nil,</span>
</span><span class='line'>     <span class="c1">#&lt;Animal:0x007f94b290ae18 @name=&quot;sheep&quot;&gt;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1"># NoMethodError: undefined method `name&#39; for nil:NilClass</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="s1">&#39;no animal&#39;</span> <span class="p">:</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1">#    &#39;no animal&#39;</span>
</span><span class='line'><span class="c1">#    &#39;sheep&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span> <span class="o">&amp;&amp;</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="s1">&#39;&#39;</span> <span class="p">:</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span> <span class="o">==</span> <span class="kp">nil</span> <span class="p">?</span> <span class="s1">&#39;&#39;</span> <span class="p">:</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">NilClass</span><span class="p">)</span> <span class="p">?</span> <span class="s1">&#39;&#39;</span> <span class="p">:</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1">#    empty string</span>
</span><span class='line'><span class="c1">#    &#39;sheep&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Message Centric</h3>

<p>新增 <code>MissingAnimal</code> class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Animal</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MissingAnimal</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span>
</span><span class='line'>    <span class="s1">&#39;no animal&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">ids</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;pig&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="s1">&#39;sheep&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">animals</span> <span class="o">=</span> <span class="n">ids</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="nb">id</span><span class="o">|</span> <span class="no">Animal</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="o">||</span> <span class="no">MissingAnimal</span><span class="o">.</span><span class="n">new</span><span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; [#&lt;Animal: @name=&quot;pig&quot;&gt;, #&lt;MissingAnimal:&gt;, #&lt;Animal: @name=&quot;sheep&quot;&gt;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1">#    &#39;no animal&#39;</span>
</span><span class='line'><span class="c1">#    &#39;sheep&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是這樣反而對 <code>MissingAnimal</code> 會有 dependency，接著在外面再包一層，將 dependency 封裝起來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">GuaranteedAnimal</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Animal</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="o">||</span> <span class="no">MissingAnimal</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span> <span class="o">=</span> <span class="n">ids</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span><span class="no">GuaranteedAnimal</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; [#&lt;Animal: @name=&quot;pig&quot;&gt;, </span>
</span><span class='line'>      <span class="c1">#&lt;MissingAnimal:&gt;,</span>
</span><span class='line'>      <span class="c1">#&lt;Animal: @name=&quot;sheep&quot;&gt;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; &#39;pig&#39;</span>
</span><span class='line'><span class="c1">#    &#39;no animal&#39;</span>
</span><span class='line'><span class="c1">#    &#39;sheep&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Abstraction Seeking</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">House</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">recite</span>
</span><span class='line'>    <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.data</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">line</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">line</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="s2">&quot;This is </span><span class="si">#{</span><span class="n">phrase</span><span class="p">(</span><span class="n">number</span><span class="p">)</span><span class="si">}</span><span class="s2">.</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">phrase</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parts</span><span class="p">(</span><span class="n">number</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">parts</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">last</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">data</span>
</span><span class='line'>    <span class="o">[</span> <span class="s1">&#39;the horse and the hound and the horn that belonged to&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>    <span class="s1">&#39;the malt that lay in&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;the house that Jack built&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著 Implement <code>RandomHouse</code> <code>EchoHouse</code> without &lsquo;if&rsquo; statements</p>

<p>用繼承 Inheritance?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">RandomHouse</span> <span class="o">&lt;</span> <span class="no">House</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">data</span>
</span><span class='line'>    <span class="vi">@data</span> <span class="o">||=</span> <span class="k">super</span><span class="o">.</span><span class="n">shuffle</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">EchoHouse</span> <span class="o">&lt;</span> <span class="no">House</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">parts</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="k">super</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="k">super</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但這樣一個要改寫 <code>data</code> 另一個改寫 <code>parts</code>，當有新需求 <code>RandomEchoHouse</code>，那不就要這兩個 method 在寫一次，也不可能只繼承其中一個</p>

<blockquote><p>Inheritance is for specialization is not for sharing code</p></blockquote>

<p>改用組合 Composition 的方式來處理</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">House</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:formatter</span><span class="p">,</span> <span class="ss">:data</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="ss">orderer</span><span class="p">:</span> <span class="no">DefaultOrder</span><span class="o">.</span><span class="n">new</span><span class="p">,</span> <span class="ss">formatter</span><span class="p">:</span> <span class="no">DefaultFormatter</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@formatter</span> <span class="o">=</span> <span class="n">formatter</span>
</span><span class='line'>    <span class="vi">@data</span> <span class="o">=</span> <span class="n">orderer</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="no">DATA</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">parts</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="n">formatter</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">last</span><span class="p">(</span><span class="n">number</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">DefaultOrder</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">order</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">RandomOrder</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">order</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">shuffle</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">DefaultFormatter</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">format</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parts</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">EchoFormatter</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">format</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parts</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="no">House</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">orderer</span><span class="p">:</span> <span class="no">RandomOrder</span><span class="o">.</span><span class="n">new</span><span class="p">)</span><span class="o">.</span><span class="n">line</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
</span><span class='line'><span class="no">House</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">formatter</span><span class="p">:</span> <span class="no">EchoFormatter</span><span class="o">.</span><span class="n">new</span><span class="p">)</span><span class="o">.</span><span class="n">line</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=OMPfEXIlTVE">[Video]RailsConf 2015 - Nothing is Something</a></li>
<li><a href="https://speakerdeck.com/skmetz/nothing-is-something-railsconf">[Silde] RailsConf 2015 - Nothing is Something</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TaiwanUserID 台灣身分證字號驗證]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/24/taiwan-user-id/"/>
    <updated>2018-07-24T21:38:14+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/24/taiwan-user-id</id>
    <content type="html"><![CDATA[<p>你知道台灣身分證字號是怎麼算出來的嗎?</p>

<!-- more -->


<p>剛好公司同事有寫到，蠻有趣的來紀錄一下，要快還是要用 <code>while</code> 阿~</p>

<h1>公式</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>戶籍代表的字母數字：
</span><span class='line'>Ａ台北市-10 Ｂ台中市-11 Ｃ基隆市-12 Ｄ台南市-13 Ｅ高雄市-14 Ｆ台北縣-15
</span><span class='line'>Ｇ宜蘭縣-16 Ｈ桃園縣-17 Ｉ嘉義市-34 Ｊ新竹縣-18 Ｋ苗栗縣-19 Ｌ台中縣-20
</span><span class='line'>Ｍ南投縣-21 Ｎ彰化縣-22 Ｏ新竹市-35 Ｐ雲林縣-23 Ｑ嘉義縣-24 Ｒ台南縣-25
</span><span class='line'>Ｓ高雄縣-26 Ｔ屏東縣-27 Ｕ花蓮縣-28 Ｖ台東縣-29 Ｗ金門縣-32 Ｘ澎湖縣-30
</span><span class='line'>Ｙ陽明山-31 Ｚ連江縣-33
</span><span class='line'>
</span><span class='line'>公式
</span><span class='line'>A123456789 -&gt; 10123456789
</span><span class='line'>
</span><span class='line'>1   0   1    2    3    4    5    6    7   8   9 (拆解字母後的數字)
</span><span class='line'>*   *   *    *    *    *    *    *    *   *   *
</span><span class='line'>1   9   8    7    6    5    4    3    2   1   1 (固定係數)
</span><span class='line'>-----------------------------------------------
</span><span class='line'>1 + 0 + 8 + 14 + 18 + 20 + 20 + 18 + 14 + 8 + 9 = 130
</span><span class='line'>
</span><span class='line'>130 % 10 == 0</span></code></pre></td></tr></table></div></figure>


<h1>Code</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">LOCATION_CODE</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;A&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;B&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;C&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;D&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;E&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;F&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;G&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;H&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;I&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;J&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;K&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;L&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;M&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;N&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;O&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;P&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;Q&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;R&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;S&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;T&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;U&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;V&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;W&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;X&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;Y&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;Z&#39;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">MULTIPLIER</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">id_card_validate</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="kp">false</span> <span class="k">unless</span> <span class="nb">id</span> <span class="o">=~</span> <span class="sr">/\A[A-Z](1|2)\d{8}\z/</span>
</span><span class='line'>  <span class="n">chars</span> <span class="o">=</span> <span class="nb">id</span><span class="o">.</span><span class="n">chars</span>
</span><span class='line'>  <span class="n">numbers</span> <span class="o">=</span> <span class="no">LOCATION_CODE</span><span class="o">[</span><span class="n">chars</span><span class="o">.</span><span class="n">shift</span><span class="o">]</span> <span class="o">+</span> <span class="n">chars</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_i</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sum</span> <span class="o">=</span> <span class="n">numbers</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="no">MULTIPLIER</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="n">a</span> <span class="o">*</span> <span class="n">b</span> <span class="p">}</span><span class="o">.</span><span class="n">reduce</span><span class="p">(</span><span class="ss">:+</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># sum, i = 0, 0</span>
</span><span class='line'>  <span class="c1"># while i &lt;= 10</span>
</span><span class='line'>  <span class="c1">#   sum += numbers[i] * MULTIPLIER[i]</span>
</span><span class='line'>  <span class="c1">#   i += 1</span>
</span><span class='line'>  <span class="c1"># end</span>
</span><span class='line'>  <span class="p">(</span><span class="n">sum</span> <span class="o">%</span> <span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">zero?</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="mi">100000</span>
</span><span class='line'><span class="no">Benchmark</span><span class="o">.</span><span class="n">bmbm</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s1">&#39;leonji&#39;</span><span class="p">){</span> <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span> <span class="n">id_card_validate</span><span class="p">(</span><span class="s1">&#39;A123456789&#39;</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Rehearsal ------------------------------------------</span>
</span><span class='line'><span class="c1"># leonji   0.770000   0.010000   0.780000 (  0.796012)</span>
</span><span class='line'><span class="c1"># --------------------------------- total: 0.780000sec</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#              user     system      total        real</span>
</span><span class='line'><span class="c1"># leonji   0.770000   0.000000   0.770000 (  0.792737)</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="http://tzoyiing.pixnet.net/blog/post/29821245-%5B%E8%BD%89%E8%B2%BC%5D-%E8%BA%AB%E4%BB%BD%E8%A8%BC%E5%AD%97%E8%99%9F%E7%B7%A8%E7%A2%BC%E5%85%AC%E5%BC%8F%E8%AA%AA%E6%98%8E~%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E9%A9%97">[轉貼] 身份證字號編碼公式說明~教你如何驗證</a></li>
<li><a href="https://tonytonyjan.net/2015/04/15/national-identification-card-validator-of-taiwan/">台灣身份證字號驗證器</a></li>
<li><a href="https://github.com/wayne5540/taiwanese_id_builder">taiwanese_id_builder</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Environment Banner]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/23/environment-banner/"/>
    <updated>2018-07-23T21:35:24+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/23/environment-banner</id>
    <content type="html"><![CDATA[<p>可以很快速的知道目前環境上的版本是什麼</p>

<!-- more -->


<p>公司因為多台機器不同環境，因此有同事做了一個 <code>Environment banner</code>，可以很方便地知道目前是哪一個 branch 哪一個 版本，這邊就來記錄一下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/helpers/environment_banner_helper.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">EnvironmentBannerHelper</span>
</span><span class='line'>  <span class="no">RELEASE_INFO_PATH</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">public_path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;release_info&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_branch</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">git_available?</span>
</span><span class='line'>      <span class="c1"># 讀取當前 HEAD 所在的 branch 名稱</span>
</span><span class='line'>      <span class="sb">`git rev-parse --abbrev-ref HEAD`</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># 當在 deploy 的時候，無法用 git (除非另外裝)，因此可以先將資訊存放在某的檔案，或是環境變數</span>
</span><span class='line'>      <span class="n">git_info</span><span class="o">[</span><span class="ss">:branch</span><span class="o">]</span> <span class="c1"># 檔案</span>
</span><span class='line'>      <span class="c1"># ENV.fetch(&quot;CURRENT_BRANCH&quot;, &quot;--branch-not-found--&quot;) # ENV</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_sha</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">git_available?</span>
</span><span class='line'>      <span class="c1"># 讀取當前的 log 最新一行</span>
</span><span class='line'>      <span class="sb">`git log --oneline -1`</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># 當在 deploy 的時候，無法用 git (除非另外裝)，因此可以先將資訊存放在某的檔案，或是環境變數</span>
</span><span class='line'>      <span class="n">git_info</span><span class="o">[</span><span class="ss">:sha</span><span class="o">]</span> <span class="c1"># 檔案</span>
</span><span class='line'>      <span class="c1"># ENV.fetch(&quot;CURRENT_SHA&quot;, &quot;--sha-not-found--&quot;) # ENV</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 確認當前環境有沒有 git</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">git_available?</span>
</span><span class='line'>    <span class="n">to_dev_null</span> <span class="o">=</span> <span class="s2">&quot;&gt; /dev/null 2&gt;&amp;1&quot;</span>
</span><span class='line'>    <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;which git </span><span class="si">#{</span><span class="n">to_dev_null</span><span class="si">}</span><span class="s2"> &amp;&amp; git rev-parse --git-dir </span><span class="si">#{</span><span class="n">to_dev_null</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 主要是為了 capistrano 上面會有不同的 release 資料夾</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">release_number</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">unless</span> <span class="n">check_release_info</span> <span class="o">&amp;&amp;</span> <span class="no">IO</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="no">RELEASE_INFO_PATH</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="no">IO</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="no">RELEASE_INFO_PATH</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/\D/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">prepend</span><span class="p">(</span><span class="s1">&#39;#&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">git_info</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span> <span class="ss">sha</span><span class="p">:</span> <span class="s2">&quot;N/A&quot;</span><span class="p">,</span> <span class="ss">branch</span><span class="p">:</span> <span class="s2">&quot;N/A&quot;</span><span class="p">}</span> <span class="k">unless</span> <span class="n">check_release_info</span> <span class="o">&amp;&amp;</span> <span class="no">IO</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="no">RELEASE_INFO_PATH</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="n">line</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="no">RELEASE_INFO_PATH</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">sha</span><span class="p">:</span>    <span class="n">line</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">6</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">branch</span><span class="p">:</span> <span class="n">line</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/refs\/heads\//</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">check_release_info</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">exist?</span> <span class="no">RELEASE_INFO_PATH</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/views/layouts/application.html.erb</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% unless </span><span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">production?</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;div class=&quot;environment-banner &lt;%= Rails.env %&gt;</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">    &lt;%= Rails.env %&gt; | &lt;%= &quot;</span><span class="c1">#{current_branch} @ #{current_sha} #{release_number}&quot; %&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/* app/assets/stylesheets/application.scss */</span>
</span><span class='line'><span class="nc">.environment-banner.development</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background</span><span class="o">:</span> <span class="err">$</span><span class="nb">green</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="err">$</span><span class="nb">white</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>capistrano deploy 時新增 <code>release_info</code> 檔案方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:repo_url</span><span class="p">,</span> <span class="s1">&#39;git@github.com:xxx/xxx.git&#39;</span>
</span><span class='line'><span class="n">ask</span> <span class="ss">:branch</span><span class="p">,</span> <span class="sb">`git rev-parse --abbrev-ref HEAD`</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 將所有 git 撞況寫到一個 file 上，再透過該 file 來顯示</span>
</span><span class='line'><span class="c1"># readlink 可以找到實際檔案位置，awk 分析出路徑上最後的 release 資料夾名稱</span>
</span><span class='line'><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;echo current_release: `readlink -f </span><span class="si">#{</span><span class="n">release_path</span><span class="si">}</span><span class="s2"> | awk -F&#39;/&#39; &#39;{print $NF}&#39;` &gt; </span><span class="si">#{</span><span class="n">shared_path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;public/release_info&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># header</span>
</span><span class='line'><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;git ls-remote -h </span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:repo_url</span><span class="p">)</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:branch</span><span class="p">)</span><span class="si">}</span><span class="s2"> &gt;&gt; </span><span class="si">#{</span><span class="n">shared_path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;public/release_info&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># tag</span>
</span><span class='line'><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;git ls-remote -t </span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:repo_url</span><span class="p">)</span><span class="si">}</span><span class="s2"> | tail -n 1 &gt;&gt; </span><span class="si">#{</span><span class="n">shared_path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;public/release_info&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying Rails API + Nuxt.js + Devise-JWT API App to Production With Heroku]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/22/deploying-rails-nuxt-jwt-to-production-with-heroku/"/>
    <updated>2018-07-22T23:12:48+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/22/deploying-rails-nuxt-jwt-to-production-with-heroku</id>
    <content type="html"><![CDATA[<p>接著來把做好的 <code>Rails API + Nuxt.js + Devise-JWT</code> deploy 到 heroku</p>

<!-- more -->


<ul>
<li><a href="https://medium.com/@fishpercolator/deploying-your-nuxt-rails-api-app-to-production-with-heroku-54efd09eec22">Deploying your Nuxt+Rails API app to production with Heroku</a></li>
</ul>


<p>由於一開始我們希望用 docker-compose 來 build 環境，因此將前後端都 commit 在一起，但在部屬的時候希望將兩個分開，這時就可以用到 <code>git subtree</code></p>

<p><a href="https://heroku.com"><img src="https://www.herokucdn.com/deploy/button.svg" alt="Deploy" /></a></p>

<h1>Backend</h1>

<p>Rails5.2 必須先將 <code>production</code> 的 <code>config.require_master_key</code> 打開</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/environments/production.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">require_master_key</span> <span class="o">=</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>記得要把 <code>cors.rb</code> 設定成 herokuapp 的 domain (根據前端專案的名稱)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/initializers/cors.rb</span>
</span><span class='line'><span class="n">origins</span> <span class="s1">&#39;localhost:3000&#39;</span><span class="p">,</span> <span class="s1">&#39;autheg-frontend-demo.herokuapp.com&#39;</span>
</span><span class='line'><span class="c1"># or</span>
</span><span class='line'><span class="n">origins</span> <span class="s1">&#39;*&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>安裝 <a href="https://devcenter.heroku.com/articles/heroku-cli">heroku-cli</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">heroku</span><span class="o">/</span><span class="n">brew</span><span class="o">/</span><span class="n">heroku</span>
</span></code></pre></td></tr></table></div></figure>


<p>create backend 的 heroku 專案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 先到最上層的資料夾</span>
</span><span class='line'><span class="n">cd</span> <span class="n">autheg</span>
</span><span class='line'><span class="c1"># 如果看到這個 &quot;Name is already taken&quot;，就換一個名字即可</span>
</span><span class='line'><span class="n">heroku</span> <span class="ss">apps</span><span class="p">:</span><span class="n">create</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span>
</span></code></pre></td></tr></table></div></figure>


<p>預設 remote name 會是 heroku，因為等下要在 create frontend remote，因此先改名</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 更改 local 的 remote name</span>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">rename</span> <span class="n">heroku</span> <span class="n">backend</span>
</span></code></pre></td></tr></table></div></figure>


<p>將後端 autheg-backend push 上去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 透過 subtree 先將後端 autheg-backend push 上去</span>
</span><span class='line'><span class="n">git</span> <span class="n">subtree</span> <span class="n">push</span> <span class="o">--</span><span class="n">prefix</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span> <span class="n">backend</span> <span class="n">master</span>
</span></code></pre></td></tr></table></div></figure>


<p>建立環境變數</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">set</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="no">RAILS_MASTER_KEY</span><span class="o">=</span><span class="p">(</span><span class="n">local</span> <span class="err">裡面的</span> <span class="n">config</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">set</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="no">JWT_SECRET</span><span class="o">=</span><span class="err">$</span><span class="p">(</span><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="n">rails</span> <span class="n">secret</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>建立 table data</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="n">rails</span> <span class="ss">db</span><span class="p">:</span><span class="ss">schema</span><span class="p">:</span><span class="nb">load</span>
</span></code></pre></td></tr></table></div></figure>


<p>新增 db 資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="n">rails</span> <span class="n">console</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># user</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create!</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">&quot;test@example.com&quot;</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s2">&quot;password&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># example</span>
</span><span class='line'><span class="p">{</span><span class="s2">&quot;foo&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;green&quot;</span><span class="p">,</span> <span class="s2">&quot;bar&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;red&quot;</span><span class="p">,</span> <span class="s2">&quot;baz&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;purple&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="p">,</span><span class="n">c</span><span class="o">|</span> <span class="no">Example</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="n">n</span><span class="p">,</span> <span class="ss">colour</span><span class="p">:</span> <span class="n">c</span><span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來就可以透過 <a href="http://yet-another-rest-client.com/">YARC</a> or <a href="https://www.getpostman.com/">Postman</a> 來測試有沒有成功!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">POST</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span><span class="o">.</span><span class="n">herokuapp</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">api</span><span class="o">/</span><span class="n">users</span><span class="o">/</span><span class="n">sign_in</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s2">&quot;user&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="s2">&quot;email&quot;</span><span class="ss">:&quot;test@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;password&quot;</span><span class="ss">:&quot;password&quot;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Frontend</h1>

<p><a href="https://github.com/nuxt/docs/blob/master/en/faq/heroku-deployment.md">nuxt heroku-deployment</a></p>

<p>create frontend 的 heroku 專案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 先到最上層的資料夾</span>
</span><span class='line'><span class="n">cd</span> <span class="n">autheg</span>
</span><span class='line'><span class="c1"># 如果看到這個 &quot;Name is already taken&quot;，就換一個名字即可</span>
</span><span class='line'><span class="n">heroku</span> <span class="ss">apps</span><span class="p">:</span><span class="n">create</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span><span class="o">-</span><span class="n">demo</span>
</span></code></pre></td></tr></table></div></figure>


<p>rename remote name</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">rename</span> <span class="n">heroku</span> <span class="n">frontend</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定環境變數，要跑在 production 模式，因此要將之前安裝在 dev 環境中的套件，安裝上去</p>

<blockquote><p>The following command tells your app to run in production mode and on all interfaces (0.0.0.0) but tells yarn/npm to run in development mode, so that all the dev packages are installed as part of the build process.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">set</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span><span class="o">-</span><span class="n">demo</span> <span class="no">NODE_ENV</span><span class="o">=</span><span class="n">production</span> <span class="no">HOST</span><span class="o">=</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span> <span class="no">NPM_CONFIG_PRODUCTION</span><span class="o">=</span><span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>改一下 <code>package.json</code>，讓 heroku deploy 之後可以 build 檔案出來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;heroku-postbuild&quot;</span><span class="p">:</span> <span class="s2">&quot;npm run build&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定 backend 的 API 路徑</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">set</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span><span class="o">-</span><span class="n">demo</span> <span class="no">API_URL</span><span class="o">=</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span><span class="o">.</span><span class="n">herokuapp</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">api</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著就可以到首頁上去測試了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span><span class="o">-</span><span class="n">demo</span><span class="o">.</span><span class="n">herokuapp</span><span class="o">.</span><span class="n">com</span><span class="o">/</span>
</span><span class='line'><span class="c1"># email: test@example.com</span>
</span><span class='line'><span class="c1"># password: password</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Heroku</h1>

<p>其他 heroku 功能</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># create new heroku project</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">create</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># push heroku</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">heroku</span> <span class="n">master</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># env config remove</span>
</span><span class='line'><span class="n">heroku</span> <span class="ss">config</span><span class="p">:</span><span class="n">remove</span> <span class="no">TOKEN</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># log</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">logs</span> <span class="o">--</span><span class="n">tail</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># scale</span>
</span><span class='line'><span class="n">heroku</span> <span class="ss">ps</span><span class="p">:</span><span class="n">scale</span> <span class="n">web</span><span class="o">=</span><span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ssh</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span> <span class="n">bash</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># run 指令</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="o">-</span><span class="n">a</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span><span class="o">-</span><span class="n">demo</span> <span class="n">rails</span> <span class="n">console</span>
</span></code></pre></td></tr></table></div></figure>


<h1>git subtree</h1>

<p>git subtree 本身不支援 force push，因此要透過其他方式來達成</p>

<ul>
<li><a href="https://gist.github.com/tduarte/eac064b4778711b116bb827f8c9bef7b">publish-ghpages.md</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="n">master</span> <span class="c1"># you can avoid this line if you are in master...</span>
</span><span class='line'><span class="n">git</span> <span class="n">subtree</span> <span class="nb">split</span> <span class="o">--</span><span class="n">prefix</span> <span class="n">dist</span> <span class="o">-</span><span class="n">b</span> <span class="n">gh</span><span class="o">-</span><span class="n">pages</span> <span class="c1"># create a local gh-pages branch containing the splitted output folder</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="o">-</span><span class="n">f</span> <span class="n">origin</span> <span class="n">gh</span><span class="o">-</span><span class="ss">pages</span><span class="p">:</span><span class="n">gh</span><span class="o">-</span><span class="n">pages</span> <span class="c1"># force the push of the gh-pages branch to the remote gh-pages branch at origin</span>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">D</span> <span class="n">gh</span><span class="o">-</span><span class="n">pages</span> <span class="c1"># delete the local gh-pages because you will need it: ref</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://medium.com/@fishpercolator/deploying-your-nuxt-rails-api-app-to-production-with-heroku-54efd09eec22">Deploying your Nuxt+Rails API app to production with Heroku</a></li>
<li><a href="https://hexo.crboy.net/2016/09/amazing-git-subtree/">神奇的 Git Subtree</a></li>
<li><a href="http://yutin.logdown.com/posts/188306-git-subtree-total-addendum-library">Git SubTree 共編 Library</a></li>
<li><a href="http://erning.net/blog/2012/05/09/the-twelve-factor-app/">The Twelve-Factor App</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails API + Nuxt.js + Devise-JWT]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/17/rails-nuxt-jwt/"/>
    <updated>2018-07-17T17:39:32+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/17/rails-nuxt-jwt</id>
    <content type="html"><![CDATA[<p>在網路上發現這篇文章，覺得寫得很不錯，所以這次就跟著這篇一起做一遍~</p>

<!-- more-->


<p><a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></p>

<p>來學習，<code>Rails API / Nuxt.js / JWT / Docker</code></p>

<ul>
<li><a href="#part1">Part 1: Creating a development environment</a></li>
<li><a href="#part2">Part 2: Getting them talking to each other</a></li>
<li><a href="#part3">Part 3: Authentication with Devise-JWT</a></li>
</ul>


<h1><span id="part1">Part 1: Creating a development environment</span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># backend</span>
</span><span class='line'><span class="n">mkdir</span> <span class="n">autheg</span>
</span><span class='line'><span class="n">cd</span> <span class="n">autheg</span>
</span><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span> <span class="o">-</span><span class="n">T</span> <span class="o">--</span><span class="n">skip</span><span class="o">-</span><span class="n">spring</span> <span class="o">-</span><span class="n">C</span> <span class="o">-</span><span class="n">B</span> <span class="o">-</span><span class="n">d</span> <span class="n">postgresql</span> <span class="o">--</span><span class="n">api</span>
</span><span class='line'><span class="c1"># -T = skip test</span>
</span><span class='line'><span class="c1"># -C = skip action cable</span>
</span><span class='line'><span class="c1"># -B = skip bundle 主要是作者要跑在 docker 裡面</span>
</span><span class='line'><span class="c1"># --api = 沒有任何 view 純 API server</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#frontend</span>
</span><span class='line'><span class="n">vue</span> <span class="n">init</span> <span class="n">nuxt</span><span class="o">-</span><span class="n">community</span><span class="o">/</span><span class="n">starter</span><span class="o">-</span><span class="n">template</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span>
</span><span class='line'><span class="n">cd</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span>
</span><span class='line'><span class="n">yarn</span> <span class="n">generate</span><span class="o">-</span><span class="n">lock</span><span class="o">-</span><span class="n">entry</span> <span class="o">&gt;</span> <span class="n">yarn</span><span class="o">.</span><span class="n">lock</span>
</span><span class='line'><span class="c1"># 跟 -B 類似，為了不 install</span>
</span></code></pre></td></tr></table></div></figure>


<h3>backend</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-backend/Dockerfile</span>
</span><span class='line'><span class="no">FROM</span> <span class="ss">ruby</span><span class="p">:</span><span class="mi">2</span><span class="o">.</span><span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="no">ARG</span> <span class="no">UID</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">adduser</span> <span class="n">rails</span> <span class="o">--</span><span class="n">uid</span> <span class="vg">$UID</span> <span class="o">--</span><span class="n">disabled</span><span class="o">-</span><span class="n">password</span> <span class="o">--</span><span class="n">gecos</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="c1"># 可以透過 $UID 給予不同的 user ID，並且進到任何的 container 都可以用相同的 user ID</span>
</span><span class='line'><span class="c1"># --disabled-password - 讓 rails 無法用密碼登入</span>
</span><span class='line'>
</span><span class='line'><span class="no">ENV</span> <span class="no">APP</span> <span class="sr">/usr/s</span><span class="n">rc</span><span class="o">/</span><span class="n">app</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">mkdir</span> <span class="vg">$APP</span>
</span><span class='line'><span class="no">WORKDIR</span> <span class="vg">$APP</span>
</span><span class='line'>
</span><span class='line'><span class="no">COPY</span> <span class="no">Gemfile</span><span class="o">*</span> <span class="vg">$APP</span><span class="o">/</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">bundle</span> <span class="n">install</span> <span class="o">-</span><span class="n">j3</span> <span class="o">--</span><span class="n">path</span> <span class="n">vendor</span><span class="o">/</span><span class="n">bundle</span>
</span><span class='line'><span class="c1"># Gems and yarn packages are installed into the mounted volumes. </span>
</span><span class='line'><span class="c1"># This will stop you from needing to rebuild the whole Docker image every time you change the Gemfile or package.json.</span>
</span><span class='line'>
</span><span class='line'><span class="no">COPY</span> <span class="o">.</span> <span class="vg">$APP</span><span class="o">/</span>
</span><span class='line'>
</span><span class='line'><span class="no">CMD</span> <span class="o">[</span><span class="s2">&quot;bin/rails&quot;</span><span class="p">,</span> <span class="s2">&quot;server&quot;</span><span class="p">,</span> <span class="s2">&quot;-p&quot;</span><span class="p">,</span> <span class="s2">&quot;8080&quot;</span><span class="p">,</span> <span class="s2">&quot;-b&quot;</span><span class="p">,</span> <span class="s2">&quot;0.0.0.0&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 這裡原本是 rails，但實際在 run 的時候會有 error，因此改為 bin/rails</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>.dockerignore</code> 避免 Docker 在 build 的時候，一併複製過去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-backend/.dockerignore</span>
</span><span class='line'><span class="sr">/vendor/</span><span class="n">bundle</span>
</span><span class='line'><span class="sr">/log</span>
</span><span class='line'><span class="sr">/</span><span class="n">tmp</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-backend/.gitignore</span>
</span><span class='line'><span class="sr">/vendor/</span><span class="n">bundle</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<h3>frontend</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-frontend/Dockerfile</span>
</span><span class='line'>
</span><span class='line'><span class="no">FROM</span> <span class="ss">node</span><span class="p">:</span><span class="mi">9</span>
</span><span class='line'>
</span><span class='line'><span class="no">ARG</span> <span class="no">UID</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">adduser</span> <span class="n">frontend</span> <span class="o">--</span><span class="n">uid</span> <span class="vg">$UID</span> <span class="o">--</span><span class="n">disabled</span><span class="o">-</span><span class="n">password</span> <span class="o">--</span><span class="n">gecos</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">ENV</span> <span class="no">APP</span> <span class="sr">/usr/s</span><span class="n">rc</span><span class="o">/</span><span class="n">app</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">mkdir</span> <span class="vg">$APP</span>
</span><span class='line'><span class="no">WORKDIR</span> <span class="vg">$APP</span>
</span><span class='line'>
</span><span class='line'><span class="no">COPY</span> <span class="n">package</span><span class="o">.</span><span class="n">json</span> <span class="n">yarn</span><span class="o">.</span><span class="n">lock</span> <span class="vg">$APP</span><span class="o">/</span>
</span><span class='line'><span class="no">RUN</span> <span class="n">yarn</span>
</span><span class='line'><span class="c1"># Gems and yarn packages are installed into the mounted volumes. </span>
</span><span class='line'><span class="c1"># This will stop you from needing to rebuild the whole Docker image every time you change the Gemfile or package.json.</span>
</span><span class='line'>
</span><span class='line'><span class="no">COPY</span> <span class="o">.</span> <span class="vg">$APP</span><span class="o">/</span>
</span><span class='line'>
</span><span class='line'><span class="no">CMD</span> <span class="o">[</span><span class="s2">&quot;yarn&quot;</span><span class="p">,</span> <span class="s2">&quot;run&quot;</span><span class="p">,</span> <span class="s2">&quot;dev&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>.dockerignore</code> 避免 Docker 在 build 的時候，一併複製過去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/autheg-frontend/.dockerignore</span>
</span><span class='line'><span class="sr">/node_modules/</span>
</span></code></pre></td></tr></table></div></figure>


<h3>all</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg/docker-compose.yml</span>
</span><span class='line'>
</span><span class='line'><span class="ss">version</span><span class="p">:</span> <span class="s1">&#39;3&#39;</span> <span class="c1"># dockerfile 版本 </span>
</span><span class='line'><span class="ss">services</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">db</span><span class="p">:</span> <span class="c1"># 對應 rails database.yml 的 host</span>
</span><span class='line'>    <span class="ss">image</span><span class="p">:</span> <span class="n">postgres</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="s2">&quot;5432&quot;</span>
</span><span class='line'>  <span class="ss">backend</span><span class="p">:</span> <span class="c1"># 會變成 REPOSITORY name autheg_backend</span>
</span><span class='line'>    <span class="ss">build</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">context</span><span class="p">:</span> <span class="n">autheg</span><span class="o">-</span><span class="n">backend</span> <span class="c1"># 要 build 的資料夾位置</span>
</span><span class='line'>      <span class="ss">args</span><span class="p">:</span>
</span><span class='line'>        <span class="ss">UID</span><span class="p">:</span> <span class="err">$</span><span class="p">{</span><span class="ss">UID</span><span class="p">:</span><span class="o">-</span><span class="mi">1001</span><span class="p">}</span>
</span><span class='line'>    <span class="ss">volumes</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="o">.</span><span class="n">/autheg</span><span class="o">-</span><span class="ss">backend</span><span class="p">:</span><span class="sr">/usr/s</span><span class="n">rc</span><span class="o">/</span><span class="n">app</span>
</span><span class='line'>      <span class="c1"># 放哪裡沒有一定 /var/www/html,  /usr/src/app,  /home 都有人放</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="s2">&quot;8080:8080&quot;</span>
</span><span class='line'>    <span class="ss">depends_on</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="n">db</span>
</span><span class='line'>    <span class="ss">user</span><span class="p">:</span> <span class="n">rails</span> <span class="c1"># 對應到 adduser 的名稱</span>
</span><span class='line'>  <span class="ss">frontend</span><span class="p">:</span> <span class="c1"># 會變成 REPOSITORY name autheg_frontend</span>
</span><span class='line'>    <span class="ss">build</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">context</span><span class="p">:</span> <span class="n">autheg</span><span class="o">-</span><span class="n">frontend</span>
</span><span class='line'>      <span class="ss">args</span><span class="p">:</span>
</span><span class='line'>        <span class="ss">UID</span><span class="p">:</span> <span class="err">$</span><span class="p">{</span><span class="ss">UID</span><span class="p">:</span><span class="o">-</span><span class="mi">1001</span><span class="p">}</span>
</span><span class='line'>    <span class="ss">volumes</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="o">.</span><span class="n">/autheg</span><span class="o">-</span><span class="ss">frontend</span><span class="p">:</span><span class="sr">/usr/s</span><span class="n">rc</span><span class="o">/</span><span class="n">app</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="s2">&quot;3000:3000&quot;</span>
</span><span class='line'>    <span class="ss">user</span><span class="p">:</span> <span class="n">frontend</span> <span class="c1"># 對應到 adduser 的名稱</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來執行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">build</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker images</span>
</span><span class='line'><span class="no">REPOSITORY</span>          <span class="no">TAG</span>                 <span class="no">IMAGE</span> <span class="no">ID</span>            <span class="no">CREATED</span>              <span class="no">SIZE</span>
</span><span class='line'><span class="n">autheg_frontend</span>     <span class="n">latest</span>              <span class="mi">18</span><span class="n">b1178326a7</span>        <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span> <span class="n">ago</span>   <span class="mi">890</span><span class="no">MB</span>
</span><span class='line'><span class="n">autheg_backend</span>      <span class="n">latest</span>              <span class="mi">528</span><span class="n">bfe5bf6d6</span>        <span class="mi">2</span> <span class="n">minutes</span> <span class="n">ago</span>        <span class="mi">1</span><span class="o">.</span><span class="mo">03</span><span class="no">GB</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker ps -a</span>
</span><span class='line'><span class="no">CONTAINER</span> <span class="no">ID</span>        <span class="no">IMAGE</span>               <span class="no">COMMAND</span>                  <span class="no">CREATED</span>              <span class="no">STATUS</span>                          <span class="no">PORTS</span>                     <span class="no">NAMES</span>
</span><span class='line'><span class="n">a11609898c96</span>        <span class="n">autheg_backend</span>      <span class="s2">&quot;bundle&quot;</span>                 <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span> <span class="n">ago</span>   <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span> <span class="n">ago</span>                             <span class="n">autheg_backend_run_1</span>
</span><span class='line'><span class="n">f088297e9b9b</span>        <span class="n">postgres</span>            <span class="s2">&quot;docker-entrypoint.s…&quot;</span>   <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span> <span class="n">ago</span>   <span class="no">Up</span> <span class="no">About</span> <span class="n">a</span> <span class="n">minute</span>               <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">:</span><span class="mi">32783</span><span class="o">-&gt;</span><span class="mi">5432</span><span class="o">/</span><span class="n">tcp</span>   <span class="n">autheg_db_1</span>
</span><span class='line'>
</span><span class='line'><span class="n">docker</span> <span class="n">volume</span> <span class="n">ls</span>
</span><span class='line'><span class="c1"># DRIVER              VOLUME NAME</span>
</span><span class='line'><span class="c1"># local               64117d4ab46a1d0575cc7136e745cc70bf568cfb3e200c80c69ae035cde89085</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">frontend</span> <span class="n">yarn</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker ps -a</span>
</span><span class='line'><span class="no">CONTAINER</span> <span class="no">ID</span>        <span class="no">IMAGE</span>               <span class="no">COMMAND</span>                  <span class="no">CREATED</span>                  <span class="no">STATUS</span>                     <span class="no">PORTS</span>                     <span class="no">NAMES</span>
</span><span class='line'><span class="n">d51e53bd1370</span>        <span class="n">autheg_frontend</span>     <span class="s2">&quot;yarn&quot;</span>                   <span class="no">Less</span> <span class="n">than</span> <span class="n">a</span> <span class="n">second</span> <span class="n">ago</span>   <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">3</span> <span class="n">seconds</span> <span class="n">ago</span>                             <span class="n">autheg_frontend_run_1</span>
</span><span class='line'><span class="n">a11609898c96</span>        <span class="n">autheg_backend</span>      <span class="s2">&quot;bundle&quot;</span>                 <span class="mi">3</span> <span class="n">minutes</span> <span class="n">ago</span>            <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">3</span> <span class="n">minutes</span> <span class="n">ago</span>                             <span class="n">autheg_backend_run_1</span>
</span><span class='line'><span class="n">f088297e9b9b</span>        <span class="n">postgres</span>            <span class="s2">&quot;docker-entrypoint.s…&quot;</span>   <span class="mi">3</span> <span class="n">minutes</span> <span class="n">ago</span>            <span class="no">Up</span> <span class="mi">3</span> <span class="n">minutes</span>               <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">:</span><span class="mi">32783</span><span class="o">-&gt;</span><span class="mi">5432</span><span class="o">/</span><span class="n">tcp</span>   <span class="n">autheg_db_1</span>
</span></code></pre></td></tr></table></div></figure>


<p>要再跑 bundle &amp; yarn 是因為有做 volumes，因此利用 docker 所建立的環境，跑 host 的 bundle &amp; yarn，讓兩邊一致</p>

<blockquote><p>The reason you need to run bundle and yarn after building is because your docker-compose file mounts your host volumes into the containers so you need to install the packages into the host volumes as well as the images that are used to create the containers</p></blockquote>

<h3>編輯 database.yml &amp; package.json</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'> default: &amp;default
</span><span class='line'>   adapter: postgresql
</span><span class='line'>   encoding: unicode
</span><span class='line'><span class="gi">+  host: db</span>
</span><span class='line'><span class="gi">+  username: postgres</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>   &quot;private&quot;: true,
</span><span class='line'>   &quot;scripts&quot;: {
</span><span class='line'><span class="gd">-    &quot;dev&quot;: &quot;nuxt&quot;,</span>
</span><span class='line'><span class="gi">+    &quot;dev&quot;: &quot;HOST=0.0.0.0 nuxt&quot;,</span>
</span><span class='line'>     &quot;build&quot;: &quot;nuxt build&quot;,
</span><span class='line'>     &quot;start&quot;: &quot;nuxt start&quot;,
</span><span class='line'>     &quot;generate&quot;: &quot;nuxt generate&quot;,
</span></code></pre></td></tr></table></div></figure>


<p><code>HOST=0.0.0.0 nuxt</code> so it’s visible on your host machine</p>

<p>再啟動一個 container 用來建立新資料庫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>docker-compose run backend bin/rails db:create
</span></code></pre></td></tr></table></div></figure>


<p>此時 db 會 create 在，一開始設定的 db container <code>autheg_db_1</code> 裡面，可以</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span> <span class="nb">exec</span> <span class="o">-</span><span class="n">it</span> <span class="n">autheg_db_1</span> <span class="n">bash</span>
</span><span class='line'><span class="n">su</span> <span class="o">-</span> <span class="n">postgres</span>
</span><span class='line'><span class="n">psql</span> <span class="o">-</span><span class="n">ls</span>
</span><span class='line'><span class="c1"># 就會看到 create 好的 database</span>
</span></code></pre></td></tr></table></div></figure>


<p>看一下目前產生的 container</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># docker ps -a</span>
</span><span class='line'><span class="no">CONTAINER</span> <span class="no">ID</span>        <span class="no">IMAGE</span>               <span class="no">COMMAND</span>                  <span class="no">CREATED</span>             <span class="no">STATUS</span>                     <span class="no">PORTS</span>                     <span class="no">NAMES</span>
</span><span class='line'><span class="mi">85</span><span class="n">d3ec81e943</span>        <span class="n">autheg_backend</span>      <span class="s2">&quot;bin/rails db:create&quot;</span>    <span class="mi">6</span> <span class="n">minutes</span> <span class="n">ago</span>       <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">6</span> <span class="n">minutes</span> <span class="n">ago</span>                             <span class="n">autheg_backend_run_2</span>
</span><span class='line'><span class="mi">6</span><span class="n">e1f7b406a70</span>        <span class="n">autheg_frontend</span>     <span class="s2">&quot;yarn&quot;</span>                   <span class="mi">7</span> <span class="n">minutes</span> <span class="n">ago</span>       <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">7</span> <span class="n">minutes</span> <span class="n">ago</span>                             <span class="n">autheg_frontend_run_1</span>
</span><span class='line'><span class="mi">55</span><span class="n">ff63bb46e9</span>        <span class="n">autheg_backend</span>      <span class="s2">&quot;bundle&quot;</span>                 <span class="mi">25</span> <span class="n">minutes</span> <span class="n">ago</span>      <span class="no">Exited</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">8</span> <span class="n">minutes</span> <span class="n">ago</span>                             <span class="n">autheg_backend_run_1</span>
</span><span class='line'><span class="n">e889c2e713d0</span>        <span class="n">postgres</span>            <span class="s2">&quot;docker-entrypoint.s…&quot;</span>   <span class="mi">25</span> <span class="n">minutes</span> <span class="n">ago</span>      <span class="no">Up</span> <span class="mi">25</span> <span class="n">minutes</span>              <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">:</span><span class="mi">32770</span><span class="o">-&gt;</span><span class="mi">5432</span><span class="o">/</span><span class="n">tcp</span>   <span class="n">autheg_db_1</span>
</span></code></pre></td></tr></table></div></figure>


<p>將所有 container 啟動</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span><span class='line'><span class="c1"># docker-compose stop</span>
</span><span class='line'><span class="c1"># docker-compose down</span>
</span></code></pre></td></tr></table></div></figure>


<p>就能看到</p>

<ul>
<li>rails : <code>http://localhost:8080/</code></li>
<li>nuxt : <code>http://localhost:3000/</code></li>
</ul>


<p><img src="https://cdn-images-1.medium.com/max/1600/1*hoai7Zion_e9-0uZQGr1Sw.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<h1><span id="part2">Part 2: Getting them talking to each other</span></h1>

<p>新增 table, model, controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">backend</span> <span class="n">bash</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="n">example</span> <span class="nb">name</span><span class="ss">:string</span> <span class="ss">colour</span><span class="p">:</span><span class="n">string</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">c</span>
</span><span class='line'><span class="o">&gt;</span> <span class="o">&gt;</span> <span class="p">{</span><span class="s2">&quot;foo&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;green&quot;</span><span class="p">,</span> <span class="s2">&quot;bar&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;red&quot;</span><span class="p">,</span> <span class="s2">&quot;baz&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;purple&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="p">,</span><span class="n">c</span><span class="o">|</span> <span class="no">Example</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="n">n</span><span class="p">,</span> <span class="ss">colour</span><span class="p">:</span> <span class="n">c</span><span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>


<p>編輯 controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/examples_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ExamplesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">examples</span> <span class="o">=</span> <span class="no">Example</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:colour</span><span class="p">)</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="n">examples</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/routes.rb</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:api</span><span class="p">,</span> <span class="ss">defaults</span><span class="p">:</span> <span class="p">{</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:examples</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>這個步驟目前先不做，要等後面安裝 <code>devise</code> 才需要</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/application_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">MimeResponds</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="ss">:json</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在打 <code>http://localhost:8080/api/examples</code> 就會看到</p>

<p><img src="https://cdn-images-1.medium.com/max/1600/1*76hf6XcYJM_xLdpbd0jZGw.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p>接著安裝 <a href="https://github.com/axios/axios">axios</a> &amp; <a href="https://vuetifyjs.com/en/">vuetify</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">frontend</span> <span class="n">yarn</span> <span class="n">add</span> <span class="vi">@nuxtjs</span><span class="o">/</span><span class="n">axios</span> <span class="vi">@nuxtjs</span><span class="o">/</span><span class="n">vuetify</span>
</span></code></pre></td></tr></table></div></figure>


<p>這邊是 hardcode 在上面，正式機不應該這樣寫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/nuxt.config.js</span>
</span><span class='line'>  <span class="nx">modules</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;@nuxtjs/vuetify&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;@nuxtjs/axios&#39;</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="nx">axios</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">port</span><span class="o">:</span> <span class="mi">8080</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">prefix</span><span class="o">:</span> <span class="s1">&#39;/api&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>更改畫面</p>

<p>The <code>nuxt</code> option to the link tells it to use Nuxt’s router to handle the link, rather than doing it in the browser.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/layouts/default.vue</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;app&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">app</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">toolbar</span> <span class="nx">app</span> <span class="nx">dark</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">toolbar</span><span class="o">-</span><span class="nx">title</span><span class="o">&gt;</span><span class="nx">Auth</span> <span class="nx">example</span><span class="o">&lt;</span><span class="err">/v-toolbar-title&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">spacer</span> <span class="o">/&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">btn</span> <span class="nx">icon</span> <span class="nx">nuxt</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;/&quot;</span><span class="o">&gt;&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">icon</span><span class="o">&gt;</span><span class="nx">home</span><span class="o">&lt;</span><span class="err">/v-icon&gt;&lt;/v-btn&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-toolbar&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">content</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">container</span> <span class="nx">fluid</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">nuxt</span><span class="o">/&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-container&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-content&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/v-app&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/template&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>mounted()</code> 會在 template 初始化的時候呼叫，並且會 call <code>updateExamples()</code> method，去 call <code>/examples</code> API 拿資料回來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/pages/index.vue</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">layout</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">flex</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">-</span><span class="nx">tile</span> <span class="nx">v</span><span class="o">-</span><span class="k">for</span><span class="o">=</span><span class="s2">&quot;example in examples&quot;</span> <span class="o">:</span><span class="nx">key</span><span class="o">=</span><span class="s2">&quot;example.id&quot;</span> <span class="o">:</span><span class="kr">class</span><span class="o">=</span><span class="s2">&quot;example.colour&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">-</span><span class="nx">tile</span><span class="o">-</span><span class="nx">content</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="err">/v-list-tile-content&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-list-tile&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-list&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/v-flex&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/v-layout&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/template&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">examples</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">async</span> <span class="nx">updateExamples</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">examples</span> <span class="o">=</span> <span class="nx">await</span> <span class="k">this</span><span class="p">.</span><span class="nx">$axios</span><span class="p">.</span><span class="nx">$get</span><span class="p">(</span><span class="s1">&#39;/examples&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">mounted</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">updateExamples</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著會看到 browser console 會 error，主要是因為 <a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">CROS</a> 的原因</p>

<blockquote><p>JavaScript isn’t allowed to query endpoints on other domains unless those domains set the CORS headers appropriately</p></blockquote>

<p><img src="https://cdn-images-1.medium.com/max/1600/1*5PhACGlQd7cfjiA-DqksuA.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p>接著要去 <code>backend</code> 新增 <code>cros</code> 的設定，讓 <code>frontend</code> 可以 call</p>

<p>先將 Gemfile 的 comment 打開</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rack-cors&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># autheg-backend/config/initializers/cors.rb</span>
</span><span class='line'>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">middleware</span><span class="o">.</span><span class="n">insert_before</span> <span class="mi">0</span><span class="p">,</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Cors</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">allow</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">origins</span> <span class="s1">&#39;localhost:3000&#39;</span> <span class="c1"># 也可以 * 就是所有 domain 都可以打進來</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">resource</span> <span class="s1">&#39;*&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">headers</span><span class="p">:</span> <span class="ss">:any</span><span class="p">,</span>
</span><span class='line'>      <span class="nb">methods</span><span class="p">:</span> <span class="o">[</span><span class="ss">:get</span><span class="p">,</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:put</span><span class="p">,</span> <span class="ss">:patch</span><span class="p">,</span> <span class="ss">:delete</span><span class="p">,</span> <span class="ss">:options</span><span class="p">,</span> <span class="ss">:head</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著跑</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後重新起動 container</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ctrl</span> <span class="o">+</span> <span class="n">c</span>
</span><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://cdn-images-1.medium.com/max/1600/1*LUreZEc1i0c5WfhoDCLxSQ.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<h1><span id="part3">Part 3: Authentication with Devise-JWT</span></h1>

<p>這次要加上 devise 加上 JWT</p>

<ul>
<li><a href="https://jwt.io/">JWT</a></li>
<li><a href="https://github.com/plataformatec/devise">devise</a></li>
<li><a href="https://github.com/waiting-for-dev/devise-jwt">devise-jwt</a></li>
</ul>


<p>先在 Gemfile 新增</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;devise&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;devise-jwt&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>bundle</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著先安裝 devise 參考 <a href="https://github.com/plataformatec/devise#getting-started">getting-started</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 開新的 container 安裝 devise</span>
</span><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">backend</span> <span class="n">bash</span>
</span><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">g</span> <span class="ss">devise</span><span class="p">:</span><span class="n">install</span>
</span><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">g</span> <span class="n">devise</span> <span class="n">user</span>
</span><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>到這個步驟都還沒用到 <a href="https://jwt.io/">JWT</a>，接下來要要決定如何使令牌無效，原文選擇用 <code>黑名單</code> 的方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="n">jwt_blacklist</span> <span class="ss">jti</span><span class="p">:</span><span class="ss">string</span><span class="p">:</span><span class="n">index</span> <span class="ss">exp</span><span class="p">:</span><span class="n">datetime</span>
</span></code></pre></td></tr></table></div></figure>


<p>並將欄位加上 <code>null: false</code> 和移除 <code>t.timestamps</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>  <span class="n">create_table</span> <span class="ss">:jwt_blacklists</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>    <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:jti</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">t</span><span class="o">.</span><span class="n">datetime</span> <span class="ss">:exp</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">add_index</span> <span class="ss">:jwt_blacklists</span><span class="p">,</span> <span class="ss">:jti</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 model 加上 <code>include Devise::JWT::RevocationStrategies::Blacklist</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/models/jwt_blacklist.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">JwtBlacklist</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Devise</span><span class="o">::</span><span class="no">JWT</span><span class="o">::</span><span class="no">RevocationStrategies</span><span class="o">::</span><span class="no">Blacklist</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>secret setting</h3>

<blockquote><p>在這裡遇到個問題 <a href="https://github.com/waiting-for-dev/devise-jwt/issues/56">No implicit conversion of nil into String</a>，主要是用的 rails 版本，與原文章的 ralis(5.1) 不同，導致遇到在 5.2 版本時已經沒有 <code>secrets.yml</code>&hellip; 轉而改用 <code>credentials.yml.enc</code>，所以在這裡記錄一下兩個版本的設定</p></blockquote>

<h3>Before rails 5.2</h3>

<p>接著產生一組 secret，做設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">secret</span>
</span><span class='line'><span class="c1"># 9dd044df628a496e83c668f..</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/secrets.yml</span>
</span><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="n">xxx</span>
</span><span class='line'>  <span class="ss">jwt_secret</span><span class="p">:</span> <span class="mi">9</span><span class="n">dd044df628a496e83c668f</span><span class="o">.</span><span class="n">.</span>
</span><span class='line'>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="n">xxx</span>
</span><span class='line'>  <span class="ss">jwt_secret</span><span class="p">:</span> <span class="mi">9</span><span class="n">dd044df628a496e83c668f</span><span class="o">.</span><span class="n">.</span>
</span><span class='line'>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="o">&lt;</span><span class="sx">%= ENV[&quot;SECRET_KEY_BASE&quot;] %&gt;</span>
</span><span class='line'><span class="sx">  jwt_secret: &lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;JWT_SECRET&quot;</span><span class="o">]</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/initializers/devise.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">jwt</span> <span class="k">do</span> <span class="o">|</span><span class="n">jwt</span><span class="o">|</span>
</span><span class='line'>  <span class="n">jwt</span><span class="o">.</span><span class="n">secret</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">secrets</span><span class="o">.</span><span class="n">jwt_secret</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>After rails 5.2</h3>

<ul>
<li><a href="https://medium.com/cedarcode/rails-5-2-credentials-9b3324851336">Rails 5.2 credentials</a></li>
<li><a href="https://www.viget.com/articles/storing-secret-credentials-in-rails-5-2-and-up/">Storing Secret Credentials in Rails 5.2 and Up</a></li>
<li><a href="https://keithpblog.org/post/encrypted-secrets/">Rails 5.2: encrypted secrets</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">secret</span>
</span><span class='line'><span class="c1"># 9dd044df628a496e83c668f..</span>
</span></code></pre></td></tr></table></div></figure>


<p>這時必須在 console執行 <code>EDITOR="vim" rails credentials:edit</code>，但是在 container 並沒有 <code>vim</code> 和 <code>sudo</code> 這個指令，因此要先切換成 root 去安裝 <code>vim</code> 才有辦法執行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bash</span>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'><span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">vim</span> <span class="o">-</span><span class="n">y</span> <span class="c1"># 安裝 vim </span>
</span><span class='line'><span class="no">EDITOR</span><span class="o">=</span><span class="s2">&quot;vim&quot;</span> <span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="ss">credentials</span><span class="p">:</span><span class="n">edit</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 接著編輯</span>
</span><span class='line'><span class="ss">secret_key_base</span><span class="p">:</span> <span class="n">xxx</span>
</span><span class='line'><span class="ss">jwt_secret</span><span class="p">:</span> <span class="mi">9</span><span class="n">dd044df628a496e83c668f</span><span class="o">.</span><span class="n">.</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/initializers/devise.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">jwt</span> <span class="k">do</span> <span class="o">|</span><span class="n">jwt</span><span class="o">|</span>
</span><span class='line'>  <span class="n">jwt</span><span class="o">.</span><span class="n">secret</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">[</span><span class="ss">:jwt_secret</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面 secret 設定好就可以繼續</p>

<p>設定 <code>response format</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/application_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">API</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">MimeResponds</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="ss">:json</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/models/user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="c1"># Include default devise modules. Others available are:</span>
</span><span class='line'>  <span class="c1"># :confirmable, :lockable, :timeoutable and :omniauthable</span>
</span><span class='line'>  <span class="n">devise</span> <span class="ss">:database_authenticatable</span><span class="p">,</span> <span class="ss">:registerable</span><span class="p">,</span>
</span><span class='line'>         <span class="ss">:recoverable</span><span class="p">,</span> <span class="ss">:rememberable</span><span class="p">,</span> <span class="ss">:trackable</span><span class="p">,</span> <span class="ss">:validatable</span><span class="p">,</span>
</span><span class='line'>         <span class="ss">:jwt_authenticatable</span><span class="p">,</span> <span class="ss">jwt_revocation_strategy</span><span class="p">:</span> <span class="no">JwtBlacklist</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定好跑</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>將 router 的 <code>devise_scope :user</code> 移到 api scope 裡面</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:api</span><span class="p">,</span> <span class="ss">defaults</span><span class="p">:</span> <span class="p">{</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:examples</span>
</span><span class='line'>    <span class="n">devise_for</span> <span class="ss">:users</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>restart containers</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ctrl</span> <span class="o">+</span> <span class="n">c</span>
</span><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span></code></pre></td></tr></table></div></figure>


<p>console 新增一個 User</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">c</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">email</span><span class="p">:</span> <span class="s1">&#39;test@example.com&#39;</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="s1">&#39;password&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來就可以來測試 <code>user login</code> 原文推薦使用 <a href="http://yet-another-rest-client.com/">YARC</a> 不過個人偏好 <a href="https://www.getpostman.com/">Postman</a>，都可以</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">POST</span> <span class="sr">/api/use</span><span class="n">rs</span><span class="o">/</span><span class="n">sign_in</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s2">&quot;user&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="s2">&quot;email&quot;</span><span class="ss">:&quot;test@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;password&quot;</span><span class="ss">:&quot;password&quot;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://cdn-images-1.medium.com/max/1600/1*2cTvgN1s2-6VkCLknzuwXQ.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p>這裡可以看到 Response Headers 多了一個欄位</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 原本</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;x-runtime&quot;</span><span class="p">:</span> <span class="s2">&quot;0.496080&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;etag&quot;</span><span class="p">:</span> <span class="s2">&quot;W/</span><span class="se">\&quot;</span><span class="s2">9a9c93785c7d5e5890c3189efa33ca10</span><span class="se">\&quot;</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;vary&quot;</span><span class="p">:</span> <span class="s2">&quot;Origin&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;content-type&quot;</span><span class="p">:</span> <span class="s2">&quot;application/json; charset=utf-8&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;location&quot;</span><span class="p">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;cache-control&quot;</span><span class="p">:</span> <span class="s2">&quot;max-age=0, private, must-revalidate&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;transfer-encoding&quot;</span><span class="p">:</span> <span class="s2">&quot;chunked&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;x-request-id&quot;</span><span class="p">:</span> <span class="s2">&quot;c6a59d67-2551-496f-8f99-f69c5b79bd75&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="mi">201</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 加上 jwt</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;x-runtime&quot;</span><span class="p">:</span> <span class="s2">&quot;0.998534&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;etag&quot;</span><span class="p">:</span> <span class="s2">&quot;W/</span><span class="se">\&quot;</span><span class="s2">d2403cf91d814bea7a094efecd1e0ae9</span><span class="se">\&quot;</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;authorization&quot;</span><span class="p">:</span> <span class="s2">&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwic2NwIjoidXNlciIsImF1ZCI6bnVsbCwiaWF0IjoxNTMxNjY2NjA0LCJleHAiOjE1MzE2NzAyMDQsImp0aSI6ImYzMjkxMWViLTY0ZDEtNDU0NS1iNGJjLTQ5MjE2NjQwMDc1OCJ9.nP5vGhbiPfC5acnQOusY_bEZCAWF2TZ29vq28SMUX2U&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;vary&quot;</span><span class="p">:</span> <span class="s2">&quot;Origin&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;content-type&quot;</span><span class="p">:</span> <span class="s2">&quot;application/json; charset=utf-8&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;location&quot;</span><span class="p">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;cache-control&quot;</span><span class="p">:</span> <span class="s2">&quot;max-age=0, private, must-revalidate&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;transfer-encoding&quot;</span><span class="p">:</span> <span class="s2">&quot;chunked&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;x-request-id&quot;</span><span class="p">:</span> <span class="s2">&quot;4eec0e2f-5cb5-4c4d-9ed9-be9385c79a5d&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="mi">201</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著要來覆蓋掉 devise 原本的 session controller，讓我們可以將 jwt 加進去</p>

<p>先 generate devise 內建的 sessino controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bin</span><span class="o">/</span><span class="n">rails</span> <span class="n">generate</span> <span class="ss">devise</span><span class="p">:</span><span class="n">controllers</span> <span class="n">users</span> <span class="o">-</span><span class="n">c</span><span class="o">=</span><span class="n">sessions</span>
</span></code></pre></td></tr></table></div></figure>


<p>並且新增一個 router，已便可以拿到 user 的 detail 資訊</p>

<blockquote><p>這裡跟原文章不太一樣，這邊是藉由 devise 內建的 generate 產生 session controller file，是放在 app/controller/users/sessions_controller.rb，原文章應該是自行建立的檔案放在 app/controller/sessions_controller.rb，因此底下的 router 設定也會有稍微不同</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/config/routes.rb</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:api</span><span class="p">,</span> <span class="ss">defaults</span><span class="p">:</span> <span class="p">{</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="ss">:examples</span>
</span><span class='line'>    <span class="n">devise_for</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">controllers</span><span class="p">:</span> <span class="p">{</span> <span class="ss">sessions</span><span class="p">:</span> <span class="s1">&#39;users/sessions&#39;</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">devise_scope</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">get</span> <span class="s1">&#39;users/current&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;users/sessions#show&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>將 Gemfile 裡的 <code>jbuilder</code> gem 打開</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;jbuilder&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.5&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="o">-</span><span class="n">u</span> <span class="n">root</span> <span class="n">backend</span> <span class="n">bundle</span>
</span><span class='line'><span class="c1"># restart containers</span>
</span><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">up</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/users/sessions_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Users</span><span class="o">::</span><span class="no">SessionsController</span> <span class="o">&lt;</span> <span class="no">Devise</span><span class="o">::</span><span class="no">SessionsController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="k">super</span> <span class="p">{</span> <span class="vi">@token</span> <span class="o">=</span> <span class="n">current_token</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_token</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s1">&#39;warden-jwt_auth.token&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/views/users/create.json.jbuilder</span>
</span><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">token</span> <span class="vi">@token</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/views/users/show.json.jbuilder</span>
</span><span class='line'><span class="k">if</span> <span class="n">user_signed_in?</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">user</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">json</span><span class="o">.</span><span class="p">(</span><span class="n">current_user</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:email</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來可以測試 login 了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 登入拿 token</span>
</span><span class='line'><span class="no">POST</span> <span class="sr">/api/use</span><span class="n">rs</span><span class="o">/</span><span class="n">sign_in</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s2">&quot;user&quot;</span><span class="p">:{</span>
</span><span class='line'>      <span class="s2">&quot;email&quot;</span><span class="ss">:&quot;test@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;password&quot;</span><span class="ss">:&quot;password&quot;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 在 Header 加上剛剛登入拿到的 token</span>
</span><span class='line'><span class="c1"># &quot;authorization&quot;: &quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdW ...&quot;</span>
</span><span class='line'><span class="no">GET</span> <span class="sr">/api/use</span><span class="n">rs</span><span class="o">/</span><span class="n">current</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 登出，記得也要帶 token 才知道誰要登出</span>
</span><span class='line'><span class="c1"># &quot;authorization&quot;: &quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdW ...&quot;</span>
</span><span class='line'><span class="no">DELETE</span> <span class="sr">/api/use</span><span class="n">rs</span><span class="o">/</span><span class="n">sign_out</span>
</span></code></pre></td></tr></table></div></figure>


<p>測試 ok 後，接下來在 <code>ExamplesController</code> 加上 <code>authentication</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># autheg-backend/app/controllers/examples_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ExamplesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:authenticate_user!</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">examples</span> <span class="o">=</span> <span class="no">Example</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:colour</span><span class="p">)</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="n">examples</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>這時 <code>GET /api/examples</code> 就必須帶 <code>token</code> 否則會 <code>error</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">GET</span> <span class="sr">/api/ex</span><span class="n">amples</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;error&quot;</span><span class="p">:</span> <span class="s2">&quot;You need to sign in or sign up before continuing.&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來回到 frontend，會發現 <code>401 Unauthorized error</code> 所以要在 frontend 加上 <code>authentication</code></p>

<p>新增後端 <code>sign_in</code> <code>sign_out</code> <code>detail</code> API &amp; <code>@nuxtjs/auth</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">docker</span><span class="o">-</span><span class="n">compose</span> <span class="n">run</span> <span class="n">frontend</span> <span class="n">yarn</span> <span class="n">add</span> <span class="vi">@nuxtjs</span><span class="o">/</span><span class="n">auth</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/nuxt.config.js</span>
</span><span class='line'><span class="nx">modules</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="s1">&#39;@nuxtjs/vuetify&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;@nuxtjs/axios&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;@nuxtjs/auth&#39;</span>
</span><span class='line'><span class="p">],</span>
</span><span class='line'><span class="nx">auth</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">endpoints</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">login</span><span class="o">:</span>  <span class="p">{</span> <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/users/sign_in&#39;</span> <span class="p">},</span>
</span><span class='line'>    <span class="nx">logout</span><span class="o">:</span> <span class="p">{</span> <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/users/sign_out&#39;</span><span class="p">,</span> <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;delete&#39;</span> <span class="p">},</span>
</span><span class='line'>    <span class="nx">user</span><span class="o">:</span>   <span class="p">{</span> <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/users/current&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/store/index.js</span>
</span><span class='line'><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">state</span><span class="o">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">({</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>restart container 讓 frontend 吃到剛剛的設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/pages/login.vue</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">layout</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">flex</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span> <span class="nx">v</span><span class="o">-</span><span class="k">if</span><span class="o">=</span><span class="s2">&quot;$auth.state.loggedIn&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">alert</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;error&quot;</span> <span class="o">:</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;error&quot;</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="err">/v-alert&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span><span class="o">-</span><span class="nx">text</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="nx">Logged</span> <span class="k">in</span> <span class="nx">as</span> <span class="p"></span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-card-text&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span><span class="o">-</span><span class="nx">actions</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">btn</span> <span class="err">@</span><span class="nx">click</span><span class="o">=</span><span class="s2">&quot;logout&quot;</span><span class="o">&gt;</span><span class="nx">Log</span> <span class="nx">out</span><span class="o">&lt;</span><span class="err">/v-btn&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-card-actions&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-card&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span> <span class="nx">v</span><span class="o">-</span><span class="k">else</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">alert</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;error&quot;</span> <span class="o">:</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;error&quot;</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="err">/v-alert&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span><span class="o">-</span><span class="nx">text</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">form</span><span class="o">&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">text</span><span class="o">-</span><span class="nx">field</span> <span class="nx">v</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="s2">&quot;email&quot;</span> <span class="nx">label</span><span class="o">=</span><span class="s2">&quot;Email&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">text</span><span class="o">-</span><span class="nx">field</span> <span class="nx">v</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="nx">label</span><span class="o">=</span><span class="s2">&quot;Password&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">/v-form&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">card</span><span class="o">-</span><span class="nx">actions</span><span class="o">&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">btn</span> <span class="err">@</span><span class="nx">click</span><span class="o">=</span><span class="s2">&quot;login&quot;</span><span class="o">&gt;</span><span class="nx">Log</span> <span class="k">in</span><span class="o">&lt;</span><span class="err">/v-btn&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">/v-card-actions&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-card-text&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-card&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/v-flex&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/v-layout&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/template&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">email</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">password</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">error</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">login</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$auth</span><span class="p">.</span><span class="nx">login</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">data</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">user</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">email</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">email</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">password</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">password</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}).</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">error</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">+</span> <span class="s1">&#39;&#39;</span><span class="p">})</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">logout</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$auth</span><span class="p">.</span><span class="nx">logout</span><span class="p">().</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">error</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">+</span> <span class="s1">&#39;&#39;</span><span class="p">})</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在可以到 <code>/login</code> 試試看登入了</p>

<p>如果想要讓 user 沒有 login 的狀態下都 redirect 到 <code>login page</code> 就加上</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// autheg-frontend/pages/index.vue</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">layout</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">flex</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">-</span><span class="nx">tile</span> <span class="nx">v</span><span class="o">-</span><span class="k">for</span><span class="o">=</span><span class="s2">&quot;example in examples&quot;</span> <span class="o">:</span><span class="nx">key</span><span class="o">=</span><span class="s2">&quot;example.id&quot;</span> <span class="o">:</span><span class="kr">class</span><span class="o">=</span><span class="s2">&quot;example.colour&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">v</span><span class="o">-</span><span class="nx">list</span><span class="o">-</span><span class="nx">tile</span><span class="o">-</span><span class="nx">content</span><span class="o">&gt;</span><span class="p"></span><span class="o">&lt;</span><span class="err">/v-list-tile-content&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/v-list-tile&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/v-list&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/v-flex&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/v-layout&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/template&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">middleware</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;auth&#39;</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">examples</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">async</span> <span class="nx">updateExamples</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">examples</span> <span class="o">=</span> <span class="nx">await</span> <span class="k">this</span><span class="p">.</span><span class="nx">$axios</span><span class="p">.</span><span class="nx">$get</span><span class="p">(</span><span class="s1">&#39;/examples&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">mounted</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">updateExamples</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在可以 try 一下</p>

<p><img src="https://cdn-images-1.medium.com/max/1600/1*012-LUDxJttnF6Jtn0Cm7A.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p><img src="https://cdn-images-1.medium.com/max/1600/1*X7EYUzlYqfSEDGUlTaK7vQ.png" alt="" />
<em>from <a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></em></p>

<p>參考文件</p>

<ul>
<li><a href="https://medium.com/@fishpercolator/how-to-separate-frontend-backend-with-rails-api-nuxt-js-and-devise-jwt-cf7dd9da9d16">How to separate frontend + backend with Rails API, Nuxt.js and Devise-JWT</a></li>
<li><a href="https://medium.com/@fishpercolator/deploying-your-nuxt-rails-api-app-to-production-with-heroku-54efd09eec22">Deploying your Nuxt+Rails API app to production with Heroku</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSON Web Token(JWT) 簡單介紹]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/16/jwt/"/>
    <updated>2018-07-16T17:48:22+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/16/jwt</id>
    <content type="html"><![CDATA[<p>之前常常聽到 jwt，但沒有很了解，就來研究一下吧</p>

<!-- more -->


<h1>什麼是 JWT</h1>

<ul>
<li>JWT 是基於 JSON 的開放標準 (RFC 7519)</li>
<li>一般被用來在 身份提供者 和 服務提供者 間傳遞被 認證 的用戶身份訊息，以便於從資源伺服器獲取資源</li>
<li>同時也可以增加一些額外的聲明訊息，該 token 也可直接被用於認證，也可被加密</li>
<li>特別適用於分佈式站點的單點登錄（SSO）場景</li>
</ul>


<p>先來瞭解一般 session 和 jwt 的差別</p>

<h2>Session</h2>

<p>Http 協議本身是無狀態的，所以無法知道每個 request 來的是誰? 因此用戶每次 request 就必須提供帳號密碼，以便證明身份，但每次都要另外輸入帳號密碼，豈不是很麻煩?</p>

<p>所以當用戶第一次發 request 過來後，就會產生一組 token 紀錄在 db 和 session，並且將這組 token 給用戶，告訴其保存在 cookie，當下次發 request 的時候，就直接帶這組 token 以便證明身份。</p>

<h2>JWT</h2>

<p>JWT 的組成內容有三個部分，由 <code>.</code> 做區隔，最後透過這三個部分，串成一個 Jwt 字串</p>

<h3>1. Header 頭部</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;typ&#39;</span><span class="p">:</span> <span class="s1">&#39;JWT&#39;</span><span class="p">,</span> <span class="c1"># 聲明類型</span>
</span><span class='line'>  <span class="s1">&#39;alg&#39;</span><span class="p">:</span> <span class="s1">&#39;HS256&#39;</span> <span class="c1"># 加密的方法: HMAC、SHA256、RSA 進行 Base64 編碼</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>進行 base64 加密（該加密是可以對稱解密的)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. Payload 載荷</h3>

<p>這裡放聲明內容，可以說就是存放溝通訊息的地方，在定義上有 3 種聲明 (Claims)</p>

<ul>
<li>Reserved (註冊聲明)</li>
<li>Public (公開聲明)</li>
<li>Private (私有聲明)</li>
</ul>


<p>註冊聲明參數 (建議但不強制使用)</p>

<ul>
<li>iss (Issuer) - jwt簽發者</li>
<li>sub (Subject) -  jwt所面向的用戶</li>
<li>aud (Audience) - 接收jwt的一方</li>
<li>exp (Expiration Time) - jwt的過期時間，這個過期時間必須要大於簽發時間</li>
<li>nbf (Not Before) - 定義在什麼時間之前，該jwt都是不可用的</li>
<li>iat (Issued At) - jwt的簽發時間</li>
<li>jti (JWT ID) - jwt的唯一身份標識，主要用來作為一次性token,從而迴避重放攻擊</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;sub&quot;</span><span class="p">:</span> <span class="s2">&quot;1234567890&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;John Doe&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;iat&quot;</span><span class="p">:</span> <span class="mi">1516239022</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>進行 base64 加密（該加密是可以對稱解密的)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. Signature</h3>

<p>由三個部分組成</p>

<ul>
<li>header (base64後的)</li>
<li>payload (base64後的)</li>
<li>secret</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">HMACSHA256</span><span class="p">(</span><span class="n">base64UrlEncode</span><span class="p">(</span><span class="n">header</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span> <span class="o">+</span> <span class="n">base64UrlEncode</span><span class="p">(</span><span class="n">payload</span><span class="p">),</span> <span class="s1">&#39;secret&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>secret 要保存在 server 端，jwt 的 簽發驗證都必須使用這個 secret，當其他人得知這個 secret，那就意味著客戶端是可以自我簽發 jwt ，因此在任何場景都不應該外流</p></blockquote>

<p>進行 base64 加密</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span>
</span></code></pre></td></tr></table></div></figure>


<p>最後由三個部分由 <code>.</code> 組成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span><span class="o">.</span><span class="n">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ</span><span class="o">.</span><span class="n">SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span>
</span></code></pre></td></tr></table></div></figure>


<h1>使用方法</h1>

<p>在發 request 的時候在 header 加入 <code>Authorization: Bearer &lt;token&gt;</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">post</span><span class="p">(</span><span class="s1">&#39;api/user/1&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">headers</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s1">&#39;Authorization&#39;</span><span class="p">:</span> <span class="s1">&#39;Bearer &#39;</span> <span class="o">+</span> <span class="n">token</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://cdn.auth0.com/content/jwt/jwt-diagram.png" alt="" /></p>

<h1>優點</h1>

<ul>
<li>跨語言，因為 json 格式大部分語言都可使用</li>
<li>可儲存一些簡單但非敏感的商業邏輯 - role ..</li>
<li>構成內容簡單，佔用 Size 小方便傳輸</li>
<li>不需在 server 保存 session，所以它易於應用的擴展</li>
</ul>


<h1>安全相關 Security</h1>

<ul>
<li>Base64 是可逆的加密方式，不適合存放敏感訊息，因為該部分是客戶端可解密的部分</li>
<li>用來加密的 Secret 要保護好，存在 server 端</li>
<li>使用 Https 協議 - 避免敏感訊息被嗅探</li>
<li>使用 HttpOnly 來防止 Cookie 被 JavaScript 讀取，從而避免跨站腳本攻擊（XSS攻擊）</li>
</ul>


<h1>JWT的適用場景</h1>

<ul>
<li>一次性驗證  ex: 信件中的連結</li>
<li>restful api 的無狀態認證</li>
<li>單點登錄+會話管理(不推薦，絕大多數情況下，傳統的 cookie-session 機制工作得更好)</li>
</ul>


<p>參考文件:</p>

<ul>
<li><a href="https://jwt.io/">JWT</a></li>
<li><a href="https://www.jianshu.com/p/576dbf44b2ae">什麼是 JWT &ndash; JSON WEB TOKEN</a></li>
<li><a href="https://hk.saowen.com/a/e86e2d932aa9b5dc3d11d639e9940eb55812f030029fac54245f6d1f9eef6f23">不要用JWT替代session管理（上）：全面瞭解Token,JWT,OAuth,SAML,SSO</a></li>
<li><a href="https://blog.leapoahead.com/2015/09/06/understanding-jwt/">JSON Web Token - 在Web應用間安全地傳遞訊息</a></li>
<li><a href="http://blog.leapoahead.com/2015/09/07/user-authentication-with-jwt/">八幅漫畫理解使用JSON Web Token設計單點登錄系統</a></li>
<li><a href="https://hk.saowen.com/a/afdc2b0fb445a973bed63330596f8588ad8f86da0faf6b5af5211ff3e29c2da8">理解JWT的使用場景和優劣</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 5.2 Credentials]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/14/rails-credentials/"/>
    <updated>2018-07-14T00:22:53+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/14/rails-credentials</id>
    <content type="html"><![CDATA[<p>rails5.2 開始 <code>config/secrets.yml</code> 已經被移除了，取而代之的是 <code>credentials</code></p>

<!-- more -->


<p>rails5.2 會新增兩個檔案</p>

<ul>
<li><p><code>config/credentials.yml.enc</code> is an encrypted file that will contain all your secret credentials，因為加密過可以很放新的推到 github</p></li>
<li><p><code>config/master.key</code> is a file containing your encryption key</p></li>
</ul>


<p><code>mater.key</code> 是用來加解密 <code>credentials.yml.enc</code>，記得不要上到 github，要放到 <code>.gitignore</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># .gitignore</span>
</span><span class='line'><span class="c1"># Ignore master key for decrypting credentials and more.</span>
</span><span class='line'><span class="sr">/config/m</span><span class="n">aster</span><span class="o">.</span><span class="n">key</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 可以看說明</span>
</span><span class='line'><span class="n">rails</span> <span class="ss">credentials</span><span class="p">:</span><span class="n">help</span>
</span></code></pre></td></tr></table></div></figure>


<p>因為經過加密，所以打開 <code>credentials.yml.enc</code> 會發現一串亂碼</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># credentials.yml.enc</span>
</span><span class='line'><span class="mi">17</span><span class="no">NEkGq</span><span class="o">/</span><span class="n">xkDO</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果要編輯檔案需要另外執行解密，才能夠進行編輯</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># EDITOR 可以改用其他編輯器 subl code 都可以</span>
</span><span class='line'><span class="no">EDITOR</span><span class="o">=</span><span class="n">vim</span> <span class="n">rails</span> <span class="ss">credentials</span><span class="p">:</span><span class="n">edit</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># aws:</span>
</span><span class='line'><span class="c1">#   access_key_id: 123</span>
</span><span class='line'><span class="c1">#   secret_access_key: 345</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Used as the base secret for all MessageVerifiers in Rails, including the one protecting cookies.</span>
</span><span class='line'><span class="ss">secret_key_base</span><span class="p">:</span> <span class="mo">00</span><span class="mi">8174812</span><span class="n">dc5a309a0de</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>離開後就會自動儲存</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 這時候就會用 master.key 進行加密</span>
</span><span class='line'><span class="no">New</span> <span class="n">credentials</span> <span class="n">encrypted</span> <span class="ow">and</span> <span class="n">saved</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>讀取檔案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">.</span><span class="n">dig</span><span class="p">(</span><span class="ss">:secret_key_base</span><span class="p">)</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">[</span><span class="ss">:secret_key_base</span><span class="o">]</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">.</span><span class="n">aws</span><span class="o">[</span><span class="ss">:access_key_id</span><span class="o">]</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">.</span><span class="n">aws</span><span class="o">[</span><span class="ss">:secret_access_key</span><span class="o">]</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">.</span><span class="n">secret_key_base</span>
</span></code></pre></td></tr></table></div></figure>


<p>並且向其他 <code>yml</code> 檔案一樣，建立一在 <code>share</code> 的資料夾中，或是新增一個環境變數 <code>RAILS_MASTER_KEY</code></p>

<h3>Environments</h3>

<p>如果想像之前一樣，不同環境有不同的 key，可以設定成跟之前的 <code>secret.yml</code> 一樣</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">aws</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">access_key_id</span><span class="p">:</span> <span class="mi">123</span>
</span><span class='line'>    <span class="ss">secret_access_key</span><span class="p">:</span> <span class="mi">345</span>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">aws</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">access_key_id</span><span class="p">:</span> <span class="mi">321</span>
</span><span class='line'>    <span class="ss">secret_access_key</span><span class="p">:</span> <span class="mi">543</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">credentials</span><span class="o">[</span><span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">to_sym</span><span class="o">][</span><span class="ss">:aws</span><span class="o">][</span><span class="ss">:access_key_id</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Production</h3>

<p>如果在 <code>production</code> 環境，要做以下設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/environments/production.rb</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">require_master_key</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://medium.com/cedarcode/rails-5-2-credentials-9b3324851336">Rails 5.2 credentials</a></li>
<li><a href="https://www.viget.com/articles/storing-secret-credentials-in-rails-5-2-and-up/">Storing Secret Credentials in Rails 5.2 and Up</a></li>
<li><a href="https://keithpblog.org/post/encrypted-secrets/">Rails 5.2: encrypted secrets</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 中的 Attr_accessor, Has_many, Scope 怎麼來?]]></title>
    <link href="http://mgleon08.github.com/blog/2018/07/04/rails-class/"/>
    <updated>2018-07-04T21:56:05+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/07/04/rails-class</id>
    <content type="html"><![CDATA[<p>相信學 rails 的一定對 <code>attr_accessor</code>, <code>has_many</code>, <code>scope</code> 這些不陌生</p>

<!-- more -->


<p>但是到底是為什麼可以在 model 裡面直接下這些 method?</p>

<p>先看一下 rails 的 model，可以這樣定義</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 5.x.x</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Klass</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 4.x.x</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Klass</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以知道 model 裡的是 <code>class</code> 並且是繼承 <code>ApplicationRecord</code> 因此判斷可能是屬於 <code>ApplicationRecord</code> 或者是更上層的某一個物件</p>

<p>在 ruby 中，所有類別的類別都是 class 類別</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Object</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># =&gt; Class</span>
</span><span class='line'><span class="no">Kernel</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># =&gt; Module</span>
</span><span class='line'><span class="no">Module</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># =&gt; Class</span>
</span><span class='line'><span class="no">Class</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># =&gt; Class</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Class 的寫法</h3>

<p>一般看到的 class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Klass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;hi&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>相當於</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 所有類別的名字都是一個常數(大寫開頭)，如果不是大寫就不會有自己的名字</span>
</span><span class='line'><span class="no">Klass</span> <span class="o">=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;hi&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>既然知道了 model 裡的 class 實際上是 <code>Class.new</code> 接下來看一下 doc <a href="https://ruby-doc.org/core-2.2.0/Class.html#method-c-new">Class new</a></p>

<blockquote><p>If a block is given, it is passed the class object, and the block is evaluated in the context of this class using class_eval.</p></blockquote>

<p>意思是指，中間那段 Block 都會用 <code>class_eval</code> 來執行，</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Klass</span> <span class="o">=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">meth1</span>
</span><span class='line'>    <span class="s2">&quot;hello&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">meth2</span>
</span><span class='line'>    <span class="s2">&quot;bye&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Klass</span><span class="o">.</span><span class="n">new</span>     <span class="c1">#=&gt; #&lt;Klass:0x007f916006aa60&gt;</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">meth1</span>          <span class="c1">#=&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">meth2</span>          <span class="c1">#=&gt; &quot;bye&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>由此推斷以下相等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Klass</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Klass</span> <span class="o">=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Klass</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'><span class="no">Klass</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:male</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>由此可知，<code>attr_accessor</code>, <code>has_many</code>, <code>scope</code> 都是由上層物件所定義好的 method</p>

<p>看一下原始碼其中一段，可看到 <code>has_many</code>，是在一個 module 裡面，應該是透過 <code>include</code> 或是 <code>extend</code> 的方式，變成了 class 的 methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails/activerecord/lib/active_record/associations.rb</span>
</span><span class='line'><span class="c1"># ...</span>
</span><span class='line'><span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'><span class="c1"># ...</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">has_many</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">scope</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">**</span><span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">extension</span><span class="p">)</span>
</span><span class='line'>    <span class="n">reflection</span> <span class="o">=</span> <span class="no">Builder</span><span class="o">::</span><span class="no">HasMany</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">extension</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Reflection</span><span class="o">.</span><span class="n">add_reflection</span> <span class="nb">self</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># ...</span>
</span></code></pre></td></tr></table></div></figure>


<p>主要是研究一下看 rails 一些特別的功能是怎麼來的，要仔細的話就要去挖原始碼才能知道了</p>

<p>參考文件</p>

<ul>
<li><a href="http://mgleon08.github.io/blog/2016/03/08/instance-eval-class-eval/">用 Instance_eval &amp; Class_eval 自己加 Method!</a></li>
<li><a href="http://mgleon08.github.io/blog/2016/02/24/include-extend-require/">Ruby 中的 Include Extend Require Load</a></li>
<li><a href="https://blog.frost.tw/posts/2017/10/22/The-ruby-s-class-is-free-Part-1/">自由的 Ruby 類別（一）</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCP BigQuery With API]]></title>
    <link href="http://mgleon08.github.com/blog/2018/06/27/gcp-bigquery-with-api/"/>
    <updated>2018-06-27T21:18:35+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/06/27/gcp-bigquery-with-api</id>
    <content type="html"><![CDATA[<p>最近剛好碰到 BigQuery，可以直接透過 API 帶 sql 指令去拉資料!</p>

<!-- more -->


<h3>安裝</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;google-cloud-bigquery&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>裝 <a href="https://cloud.google.com/sdk/docs/downloads-interactive">安 gcp SDK</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 安裝</span>
</span><span class='line'><span class="n">curl</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//s</span><span class="n">dk</span><span class="o">.</span><span class="n">cloud</span><span class="o">.</span><span class="n">google</span><span class="o">.</span><span class="n">com</span> <span class="o">|</span> <span class="n">bash</span>
</span><span class='line'><span class="c1"># Restart your shell</span>
</span><span class='line'><span class="nb">exec</span> <span class="o">-</span><span class="n">l</span> <span class="vg">$SHELL</span>
</span><span class='line'><span class="c1"># 記得在 google 那邊要先開權限，才可以指定到自己要的 project</span>
</span><span class='line'><span class="n">gcloud</span> <span class="n">init</span>
</span><span class='line'><span class="c1"># auth，但最好的話是要申請一個 憑證，並設定在環境變數(environmentvalue)</span>
</span><span class='line'><span class="n">gcloud</span> <span class="n">auth</span> <span class="n">application</span><span class="o">-</span><span class="n">default</span> <span class="n">login</span>
</span><span class='line'><span class="c1"># 取得憑證</span>
</span><span class='line'><span class="n">gcloud</span> <span class="n">auth</span> <span class="n">application</span><span class="o">-</span><span class="n">default</span> <span class="nb">print</span><span class="o">-</span><span class="n">access</span><span class="o">-</span><span class="n">token</span>
</span></code></pre></td></tr></table></div></figure>


<h3>執行</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;google/cloud/bigquery&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># This uses Application Default Credentials to authenticate.</span>
</span><span class='line'><span class="c1"># @see https://cloud.google.com/bigquery/docs/authentication/getting-started</span>
</span><span class='line'><span class="n">bigquery</span> <span class="o">=</span> <span class="no">Google</span><span class="o">::</span><span class="no">Cloud</span><span class="o">::</span><span class="no">Bigquery</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">project</span><span class="p">:</span> <span class="s2">&quot;project_id&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">sql</span>     <span class="o">=</span> <span class="s2">&quot;SELECT &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;CONCAT(&#39;https://stackoverflow.com/questions/&#39;, &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;       CAST(id as STRING)) as url, view_count &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;FROM `bigquery-public-data.stackoverflow.posts_questions` &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;WHERE tags like &#39;%google-bigquery%&#39; &quot;</span> <span class="o">+</span>
</span><span class='line'>          <span class="s2">&quot;ORDER BY view_count DESC LIMIT 10&quot;</span>
</span><span class='line'><span class="n">results</span> <span class="o">=</span> <span class="n">bigquery</span><span class="o">.</span><span class="n">query</span> <span class="n">sql</span>
</span><span class='line'>
</span><span class='line'><span class="n">results</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">row</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">row</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">row</span><span class="o">[</span><span class="ss">:view_count</span><span class="o">]</span><span class="si">}</span><span class="s2"> views&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>問題</h3>

<p>在執行上有遇到一些問題，ruby 用 query 第一次去打的時候，回來的值卻會是空 Array，第二次就會有值</p>

<p>可以看到下面 <code>job_complete</code> 也是 <code>false</code>，第二次打就會是 true</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bigquery</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Sending HTTP post https://www.googleapis.com/bigquery/v2/projects/project_id/queries?</span>
</span><span class='line'><span class="c1"># 200</span>
</span><span class='line'><span class="c1"># #&lt;Hurley::Response POST https://www.googleapis.com/bigquery/v2/projects/project_id/queries == 200 (184 bytes) 11197ms&gt;</span>
</span><span class='line'><span class="c1"># Success - #&lt;Google::Apis::BigqueryV2::QueryResponse:0x007fa1021033f8</span>
</span><span class='line'><span class="c1">#  @job_complete=false,</span>
</span><span class='line'><span class="c1">#  @job_reference=</span>
</span><span class='line'><span class="c1">#   #&lt;Google::Apis::BigqueryV2::JobReference:0x007fa102102318</span>
</span><span class='line'><span class="c1">#    @job_id=&quot;job_0HlGAo3KB4WrAGz20MypIHluup9B&quot;,</span>
</span><span class='line'><span class="c1">#    @project_id=&quot;project_id&quot;&gt;,</span>
</span><span class='line'><span class="c1">#  @kind=&quot;bigquery#queryResponse&quot;&gt;</span>
</span><span class='line'><span class="c1">#  =&gt; []</span>
</span></code></pre></td></tr></table></div></figure>


<h3>原因</h3>

<p>Google 回覆</p>

<p><code>job_complete=false</code> 代表這個 bigquery job 還沒跑完.</p>

<p>在 bigquery 下 query 的時候, 執行 query 的 API call 會有一個 timeout, 當 API call 執行的時間超過這個 timeout 但是 query 還沒跑完的時候, API call 會 return HTTP code 200, 但是 query result 是空的, 並且 <code>job_complete = false.</code></p>

<p>詳細可以參考文件[1]一開頭 &ldquo;Runs a BigQuery SQL query and returns results if the query completes within a specified timeout.&rdquo; 以及同一份文件下方的 timeoutMs 以及 jobComplete 這些參數.</p>

<p>如前所述, 如果收到 job_complete = false 的 HTTP code 200 response, 表示 job 還在執行. 這時候的標準做法是去 poll GetQueryResults 這個 API (參考文件[2]) 直到 job_complete = true 再拿取結果.</p>

<ul>
<li><a href="https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query">1. query</a></li>
<li><a href="https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/getQueryResults">2. getQueryResults</a></li>
</ul>


<h3>解決方式</h3>

<p>在 new 的時候，新增 timeout 時間(也可以設定 retries)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Google</span><span class="o">::</span><span class="no">Cloud</span><span class="o">::</span><span class="no">Bigquery</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">project</span><span class="p">:</span> <span class="n">project_id</span><span class="p">,</span> <span class="ss">timeout</span><span class="p">:</span> <span class="mi">120</span><span class="p">,</span> <span class="ss">retries</span><span class="p">:</span> <span class="mi">10</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>但實際測試加上 <code>timeout</code> 卻好像沒有用..</p></blockquote>

<p>在試的時候，有用另外的方式去解決，自己去處理 job 就可以確保 job 跑完，再拿資料回來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 先設定 job</span>
</span><span class='line'><span class="n">bigquery</span><span class="o">.</span><span class="n">query_job</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 再讓它去執行 wait_until_done!</span>
</span><span class='line'><span class="n">job</span><span class="o">.</span><span class="n">wait_until_done!</span>
</span><span class='line'><span class="c1"># 最後再將結果回傳，這樣就可以確保第一次可以拉到值</span>
</span><span class='line'><span class="n">job</span><span class="o">.</span><span class="n">query_results</span>
</span></code></pre></td></tr></table></div></figure>


<p>但去看原始碼，實際上也是做一樣的動作..</p>

<blockquote><p>因該是內建的 <code>query</code> 有設定 10 秒就會 response，因此改直接去執行裡面的動作，就沒有這個限制</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">query</span> <span class="n">query</span><span class="p">,</span> <span class="ss">params</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">external</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">max</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">cache</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">standard_sql</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">legacy_sql</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>  <span class="n">job</span> <span class="o">=</span> <span class="n">query_job</span> <span class="n">query</span><span class="p">,</span> <span class="ss">params</span><span class="p">:</span> <span class="n">params</span><span class="p">,</span> <span class="ss">external</span><span class="p">:</span> <span class="n">external</span><span class="p">,</span>
</span><span class='line'>                  <span class="ss">cache</span><span class="p">:</span> <span class="n">cache</span><span class="p">,</span> <span class="ss">standard_sql</span><span class="p">:</span> <span class="n">standard_sql</span><span class="p">,</span>
</span><span class='line'>                  <span class="ss">legacy_sql</span><span class="p">:</span> <span class="n">legacy_sql</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>  <span class="n">job</span><span class="o">.</span><span class="n">wait_until_done!</span>
</span><span class='line'>  <span class="n">ensure_job_succeeded!</span> <span class="n">job</span>
</span><span class='line'>  <span class="n">job</span><span class="o">.</span><span class="n">data</span> <span class="ss">max</span><span class="p">:</span> <span class="n">max</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://cloud.google.com/bigquery/create-simple-app-api">Create A Simple Application With the API</a></li>
<li><a href="https://github.com/GoogleCloudPlatform/google-cloud-ruby/tree/master/google-cloud-bigquery">google-cloud-bigquery</a></li>
<li><a href="https://cloud.google.com/sdk/docs/downloads-interactive">安裝 gcp SDK</a></li>
<li><a href="https://cloud.google.com/bigquery/docs/bq-command-line-tool">Command Line</a></li>
<li><a href="https://cloud.google.com/docs/authentication/production">Auth</a></li>
<li><a href="https://cloud.google.com/ruby/">在 GOOGLE CLOUD PLATFORM 上執行 RUBY</a></li>
</ul>


<p>Auth</p>

<ul>
<li><a href="https://stackoverflow.com/questions/13212991/how-to-query-bigquery-programmatically-from-python-without-end-user-interaction">How to query BigQuery programmatically from Python without end-user interaction?</a></li>
<li><a href="https://cloud.google.com/sdk/gcloud/reference/auth/application-default/login">gcloud auth application-default login</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[跟著 DHH 練習 ActionCable]]></title>
    <link href="http://mgleon08.github.com/blog/2018/06/21/rails-action-cable/"/>
    <updated>2018-06-21T23:23:08+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/06/21/rails-action-cable</id>
    <content type="html"><![CDATA[<p>ActionCable 已經有一陣子了，剛好有時間來玩一下</p>




<!-- more -->




<p>主要跟著 DHH 的影片來練習一下，了解整個 ActionCable 的流程</p>




<ul>
<li><a href="https://www.youtube.com/watch?v=n0WUjGkDFS0">Rails 5: Action Cable demo</a></li>
</ul>




<h1 id="">介紹</h1>




<p>ActionCable 主要是一個 Pub/Sub 模型 + WebSocket 的 Ruby 框架，可以讓 Rails 實現即時通訊的方式</p>




<h3 id="websocket">WebSocket</h3>




<ul>
<li>是一種建立在單一 TCP 連線上的全雙工（full-duplex）通訊管道，可以讓網頁應用程式與伺服器之間做即時性、雙向的資料傳遞。</li>

<li>瀏覽器與伺服器之間若要建立一條 WebSocket 連線，在一開始的交握（handshake）階段中，要先從 HTTP 協定升級為 WebSocket 協定</li>
</ul>




<p><img src="https://heroku-blog-files.s3.amazonaws.com/1462551384-websocket-protocol.png" alt="" /></p>




<h3 id="polling">Polling 輪詢</h3>




<ul>
<li>瀏覽器每隔一段時間就自動送出一個 HTTP 請求給 server ，獲取最新的網頁資料</li>

<li>在 server 沒有新資料時，瀏覽器也是會自動送出請求，造成網路資源浪費</li>
</ul>




<h3 id="longpolling">Long-Polling 長時間輪詢</h3>




<ul>
<li>server 在接收到瀏覽器所送出的 HTTP 請求後， server 會等待一段時間，若在這段時間裡 server 有新的資料，它就會把最新的資料傳回給瀏覽器</li>

<li>如果等待的時間到了之後也沒有新資料的話，就會送一個回應給瀏覽器，告知瀏覽器資料沒有更新</li>

<li>如果在資料更新很頻繁的狀況下，長時間輪詢並不會比傳統的輪詢有效率，而且有時候資料量很大時，會造成連續的 polls 不斷產生，反而會更糟糕。</li>
</ul>




<h3 id="streaming">Streaming</h3>




<ul>
<li>讓 server 在接收到瀏覽器所送出 HTTP 請求後，立即產生一個回應瀏覽器的連線，並且讓這個連線持續一段時間不要中斷，而 server 在這段時間內如果有新的資料，就可以透過這個連線將資料馬上傳送給瀏覽器。</li>

<li>由於是建立在 HTTP 協定上的一種傳輸機制，所以有可能會因為代理 server（proxy）或防火牆（firewall）將其中的資料存放在緩衝區中，造成資料回應上的延遲，因此許多使用串流的 Comet 實作會在偵測到有代理 server 的狀況時，改用 Long-Polling 的方式處理。</li>
</ul>




<h3 id="pubsubpublishsubscribepattern">Pub/Sub 發佈/訂閱模式 (Publish/Subscribe Pattern)</h3>




<ul>
<li>發佈/訂閱設計模式是一種在即時通訊上很常用的架構，可以將通訊拆成發佈方和訂閱方，發佈方非同步地將訊息傳送給不定數量的訂閱方。</li>

<li>Pub/Sub 部分可以從你的主應用 Process 外，獨立出來成為一個單獨的運作元件。</li>
</ul>




<h1 id="actioncable">Actioncable 實作</h1>




<ul>
<li>建立新的專案</li>
</ul>




<pre><code class="ruby">rails new campfire
</code></pre>




<ul>
<li>建立 rooms controller</li>
</ul>




<pre><code class="ruby"># show 可以再產生 controller 自動產生 show action &amp; router
rails g controller rooms show
</code></pre>




<ul>
<li>修改 routes</li>
</ul>




<pre><code class="ruby"># config/routes.rb
Rails.application.routes.draw do
  root to: 'rooms#show'
end
</code></pre>




<ul>
<li>建立 message model</li>
</ul>




<pre><code class="ruby"># content:text 可自動在 migration 產生相對應的欄位
rails g model message content:text
rails db:migrate
</code></pre>




<ul>
<li>修改 rooms controller</li>
</ul>




<pre><code class="ruby"># controllers/rooms_controller.rb
class RoomsController &lt; ApplicationController
  def show
    @messages = Message.all
  end
end
</code></pre>




<pre><code class="ruby"># rails console 建立一筆來測試
Message.create!(content: "Hello World!")
</code></pre>




<ul>
<li>修改 rooms/show.html.erb 讓 messages 顯示</li>
</ul>




<pre><code class="ruby"># views/rooms/show.html.erb
&lt;h1&gt;Chat room&lt;/h1&gt;
&lt;div id="messages"&gt;
  &lt;%= render @messages %&gt;
&lt;/div&gt;
</code></pre>




<p>此時就可以 <code>rails s</code> 看一下首頁有沒有東西</p>




<ul>
<li>建立 channel</li>
</ul>




<p>speak 會自動產生 channel 的 action</p>




<p><code>rails g channel room speak</code></p>




<ul>
<li>Server 端 Mount ActionCable</li>
</ul>




<pre><code class="ruby"># config/routes.rb
Rails.application.routes.draw do
  root to: 'rooms#show'
  mount ActionCable.server =&gt; '/cable'
end
</code></pre>




<ul>
<li>修改 room.coffee</li>
</ul>




<p>請注意這邊是 coffee js 因此空格會有差別</p>




<pre><code class="ruby"># assets/javascripts/channels/room.coffee
App.room = App.cable.subscriptions.create "RoomChannel",
  connected: -&gt;
    # Called when the subscription is ready for use on the server

  disconnected: -&gt;
    # Called when the subscription has been terminated by the server

  received: (data) -&gt;
    # Called when there's incoming data on the websocket for this channel
    # 接到 data 後要做什麼處理，目前設定是將 message alert 彈出
    alert data['message']

  speak: (message)-&gt;
  # 傳 message 到 RoomChannel 的 speak action
    @perform 'speak', message: message
</code></pre>




<ul>
<li>修改 room channel 的 speak action</li>
</ul>




<pre><code class="ruby"># channels/room_channel.rb
class RoomChannel &lt; ApplicationCable::Channel
  def subscribed
    # 訂閱的頻道名稱
    stream_from "room_channel"
  end

  def unsubscribed
    # Any cleanup needed when channel is unsubscribed
  end

  def speak(data)
    # 將 message 廣播到 room_channel 的 received function
    ActionCable.server.broadcast("room_channel", message: data['message'])
  end
end
</code></pre>




<p>重新啟動 server，在瀏覽器的 <code>console</code> 執行 </p>




<pre><code class="ruby"># 這個指令會 call client side 的 speak function，也就是 @perform 'speak', message: message
App.room.speak("Hello, World!") 
</code></pre>




<p>就會看到彈出視窗，表示伺服器端已經接受到訊息。</p>




<ul>
<li>新增 text input，讓 client 可以直接輸入 data</li>
</ul>




<pre><code class="ruby"># views/rooms/show.html.erb
&lt;h1&gt;Chat room&lt;/h1&gt;
&lt;div id="messages"&gt;
 &lt;%= render @messages %&gt;
&lt;/div&gt;
&lt;form&gt;
  &lt;label&gt;Say something:&lt;/label&gt;
  &lt;input type="text" data-behavior="room_speaker"&gt;
&lt;/form&gt;
</code></pre>




<ul>
<li>設定輸入後執行的動作</li>
</ul>




<p>記得先安裝 <code>jquery</code>，因為後面會利用 <code>jquery</code> 來操作 <code>dom</code> 和 <code>event</code></p>




<pre><code class="ruby"># Gemfile
gem 'jquery-rails'
</code></pre>




<pre><code class="ruby"># assets/javascripts/application.js
//= require jquery
</code></pre>




<p>請注意這邊是 coffee js 因此空格會有差別</p>




<pre><code class="ruby"># assets/javascripts/channels/room.coffee
App.room = App.cable.subscriptions.create "RoomChannel",
  connected: -&gt;
    # Called when the subscription is ready for use on the server

  disconnected: -&gt;
    # Called when the subscription has been terminated by the server

  received: (data) -&gt;
    # Called when there's incoming data on the websocket for this channel
    # 接到 data 後要做什麼處理，目前設定是將 message alert 彈出
    alert data['message']

  speak: (message)-&gt;
    @perform 'speak', message: message

# 設定在按下鍵盤 Enter 按鍵後，要執行 App.room.speak，就不用透過 console 去輸入
$(document).on 'keypress', '[data-behavior~=room_speaker]', (event) -&gt;
  if event.keyCode is 13 #return
    App.room.speak event.target.value
    event.target.value = ''
    event.preventDefault()
</code></pre>




<p>基本上現在就可以透過輸入框，讓 <code>alert</code> 跳出來了</p>




<h3 id="jobactioncable">透過 job 來執行 ActionCable</h3>




<ul>
<li>實際存取到 db</li>
</ul>




<pre><code class="ruby"># channels/room_channel.rb
class RoomChannel &lt; ApplicationCable::Channel
  def subscribed
    stream_from "room_channel"
  end

  def unsubscribed
    # Any cleanup needed when channel is unsubscribed
  end

  def speak(data)
    # 改成直接 create record 在 db 裡面
    Message.create(content: data['message'])
  end
end
</code></pre>




<ul>
<li>create 後 callback 執行 Job</li>
</ul>




<pre><code class="ruby"># models/message.rb
class Message &lt; ApplicationRecord
  after_create_commit { MessageBroadcastJob.perform_later self }
end
</code></pre>




<ul>
<li>建立 job</li>
</ul>




<pre><code class="ruby">rails g job MessageBroadcast
</code></pre>




<pre><code class="ruby"># jobs/message_broadcast_job.rb
class MessageBroadcastJob &lt; ApplicationJob
  queue_as :default

  def perform(message)
     # perform_later 後會執行的動作
    ActionCable.server.broadcast("room_channel", message: render_message(message))
  end

  private

  def render_message(message)
     # 透過 ApplicationController 將 html code render 回來當一個參數做傳遞
    ApplicationController.renderer.render(partial: 'messages/message', locals: { message: message })
  end
end
</code></pre>




<p>此時 <code>rails s</code> 測試是否正常，因該會有 <code>alert</code> 跳出一段 <code>html code</code></p>




<ul>
<li>修改 received function</li>
</ul>




<pre><code class="ruby"># assets/javascripts/channels/room.coffee
App.room = App.cable.subscriptions.create "RoomChannel",
  connected: -&gt;
    # Called when the subscription is ready for use on the server

  disconnected: -&gt;
    # Called when the subscription has been terminated by the server

  received: (data) -&gt;
    # Called when there's incoming data on the websocket for this channel
    # alert 改成透過 jquery 找到 id='messages' 的 dom，並把回傳來的 html code append 上去
    $('#messages').append data['message']

  speak: (message)-&gt;
    @perform 'speak', message: message

$(document).on 'keypress', '[data-behavior~=room_speaker]', (event) -&gt;
  if event.keyCode is 13 #return
    App.room.speak event.target.value
    event.target.value = ''
    event.preventDefault()
</code></pre>




<p>再重啟一次，這時輸入資料後，畫面會立即新增，可以開雙畫面去做測試，另一邊的畫面是否也是立即新增</p>




<ul>
<li><a href="https://github.com/mgleon08/pratice_action_cable">完成範例程式碼</a></li>

<li><a href="http://mgleon08.github.io/blog/2017/10/06/http-websocket-bot/">之前玩過的 Http Websocket Bot</a></li>
</ul>




<p>參考文件:</p>




<ul>
<li><a href="https://www.youtube.com/watch?v=n0WUjGkDFS0">Rails 5: Action Cable demo</a></li>

<li><a href="https://ihower.tw/rails/actioncable.html">Action Cable 即時通訊</a></li>

<li><a href="https://www.learnenough.com/action-cable-tutorial">Action Cable Tutorial</a></li>

<li><a href="https://github.com/rails/rails/tree/master/actioncable">Action Cable – Integrated WebSockets for Rails</a></li>

<li><a href="https://blog.heroku.com/real_time_rails_implementing_websockets_in_rails_5_with_action_cable">Real-Time Rails: Implementing WebSockets in Rails 5 with Action Cable</a></li>

<li><a href="https://www.sitepoint.com/create-a-chat-app-with-rails-5-actioncable-and-devise/">Create a Chat App with Rails 5, ActionCable, and Devise</a></li>

<li><a href="https://evilmartians.com/chronicles/anycable-actioncable-on-steroids">AnyCable</a></li>
</ul>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分享內網 Localhost to Everybody - Ngrok, Serveo]]></title>
    <link href="http://mgleon08.github.com/blog/2018/06/14/share-localhost-ngrok-serveo/"/>
    <updated>2018-06-14T19:06:43+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/06/14/share-localhost-ngrok-serveo</id>
    <content type="html"><![CDATA[<p>當有時候必須請其他人來看 local 上面的狀況時，可以用以下工具，分享給其他人來看</p>

<!-- more -->


<p>工具有兩種</p>

<h1>1. <a href="https://ngrok.com/">ngrok</a></h1>

<ul>
<li>先安裝 or <a href="https://ngrok.com/download">官網下載</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">cask</span> <span class="n">install</span> <span class="n">ngrok</span>
</span><span class='line'><span class="c1"># brew cask裝的大多是有gui界面的app以及驅動，brew cask是brew的一個官方源。 像是 chrome</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>如果 share 的是 5000 port</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ngrok</span> <span class="n">http</span> <span class="mi">5000</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Session</span> <span class="no">Status</span>                <span class="n">online</span>
</span><span class='line'><span class="no">Session</span> <span class="no">Expires</span>               <span class="mi">7</span> <span class="n">hours</span><span class="p">,</span> <span class="mi">59</span> <span class="n">minutes</span>
</span><span class='line'><span class="no">Version</span>                       <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">8</span>
</span><span class='line'><span class="no">Region</span>                        <span class="no">United</span> <span class="no">States</span> <span class="p">(</span><span class="n">us</span><span class="p">)</span>
</span><span class='line'><span class="no">Web</span> <span class="no">Interface</span>                 <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="mi">127</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">:</span><span class="mi">4040</span>
</span><span class='line'><span class="no">Forwarding</span>                    <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="mi">1</span><span class="n">ee7a4e7</span><span class="o">.</span><span class="n">ngrok</span><span class="o">.</span><span class="n">io</span> <span class="o">-&gt;</span> <span class="ss">localhost</span><span class="p">:</span><span class="mi">5000</span>
</span><span class='line'><span class="no">Forwarding</span>                    <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="mi">1</span><span class="n">ee7a4e7</span><span class="o">.</span><span class="n">ngrok</span><span class="o">.</span><span class="n">io</span> <span class="o">-&gt;</span> <span class="ss">localhost</span><span class="p">:</span><span class="mi">5000</span>
</span><span class='line'>
</span><span class='line'><span class="no">Connections</span>                   <span class="n">ttl</span>     <span class="n">opn</span>     <span class="n">rt1</span>     <span class="n">rt5</span>     <span class="n">p50</span>     <span class="n">p90</span>
</span><span class='line'>                              <span class="mi">0</span>       <span class="mi">0</span>       <span class="mi">0</span><span class="o">.</span><span class="mo">00</span>    <span class="mi">0</span><span class="o">.</span><span class="mo">00</span>    <span class="mi">0</span><span class="o">.</span><span class="mo">00</span>    <span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到 <code>http://1ee7a4e7.ngrok.io</code> 指向到我們剛剛指定的 <code>localhost:5000</code> 就可以將這串網址給別人來看囉</p>

<ul>
<li>也可以加上密碼或是 <code>subdomain</code> 不過就是要付費囉</li>
</ul>


<h1>2. <a href="https://serveo.net/">serveo</a></h1>

<p>這個是同事發現的，連安裝都不需要</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh</span> <span class="o">-</span><span class="n">R</span> <span class="mi">80</span><span class="ss">:localhost</span><span class="p">:</span><span class="mi">5000</span> <span class="n">serveo</span><span class="o">.</span><span class="n">net</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>自訂subdomain</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh</span> <span class="o">-</span><span class="n">R</span> <span class="n">leon</span><span class="o">.</span><span class="n">serveo</span><span class="o">.</span><span class="n">net</span><span class="p">:</span><span class="mi">80</span><span class="ss">:localhost</span><span class="p">:</span><span class="mi">5000</span> <span class="n">serveo</span><span class="o">.</span><span class="n">net</span>
</span></code></pre></td></tr></table></div></figure>


<p>這樣 <code>https://leon.serveo.net</code> 就可以連到了~~</p>

<p>參考文件:</p>

<ul>
<li><a href="https://tenten.co/blog/how-to-use-ngrok-to-connect-your-localhost/">怎麼將內網的 localhost 讓外面的人都看得到呢？用用 ngrok 吧！</a></li>
<li><a href="https://guahsu.io/2018/06/expose-local-servers-to-the-internet-by-serveo/">利用serveo把local開發環境發佈到internet中</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sql 好用的 Command]]></title>
    <link href="http://mgleon08.github.com/blog/2018/06/14/sql-command/"/>
    <updated>2018-06-14T18:43:04+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/06/14/sql-command</id>
    <content type="html"><![CDATA[<p>最近常常使用 sql，因應各種需求，也發現一些蠻好用的指令~</p>

<!-- more -->


<h1>FIELD()</h1>

<p>FIELD 會 return 第一個參數的，position</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="o">//</span> <span class="err">第一個參數</span> <span class="ss">&quot;c&quot;</span><span class="p">,</span> <span class="err">在後面第三個位置</span>
</span><span class='line'><span class="k">SELECT</span> <span class="n">FIELD</span><span class="p">(</span><span class="ss">&quot;c&quot;</span><span class="p">,</span> <span class="ss">&quot;a&quot;</span><span class="p">,</span> <span class="ss">&quot;b&quot;</span><span class="p">,</span> <span class="ss">&quot;c&quot;</span><span class="p">,</span> <span class="ss">&quot;d&quot;</span><span class="p">,</span> <span class="ss">&quot;e&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">//</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'><span class="o">//</span> <span class="err">如果找不到就會是</span> <span class="mi">0</span>
</span><span class='line'><span class="k">SELECT</span> <span class="n">FIELD</span><span class="p">(</span><span class="ss">&quot;f&quot;</span><span class="p">,</span> <span class="ss">&quot;a&quot;</span><span class="p">,</span> <span class="ss">&quot;b&quot;</span><span class="p">,</span> <span class="ss">&quot;c&quot;</span><span class="p">,</span> <span class="ss">&quot;d&quot;</span><span class="p">,</span> <span class="ss">&quot;e&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">//</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以搭配 order，讓取出來的順序按照原本給的參數</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user_ids</span> <span class="o">=</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">user_ids</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;FIELD(id, </span><span class="si">#{</span><span class="n">user_ids</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">)&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">`</span><span class="n">users</span><span class="o">`</span><span class="p">.</span><span class="o">*</span> <span class="k">FROM</span> <span class="o">`</span><span class="n">users</span><span class="o">`</span> <span class="k">WHERE</span> <span class="o">`</span><span class="n">users</span><span class="o">`</span><span class="p">.</span><span class="o">`</span><span class="n">id</span><span class="o">`</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>  <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">FIELD</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="err">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://www.w3schools.com/sql/func_mysql_field.asp">MySQL FIELD() Function</a></li>
</ul>


<h1>GROUP_CONCAT</h1>

<p>可以透過 group 將所有的 book 做分類，並且依照分類將 <code>book name</code> group 起來</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 取出 user 底下所有的 books，並且照 books_type, books_name(會是 string 串聯起來)</span>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="s2">&quot;books.type AS book_type, GROUP_CONCAT(DISTINCT books.name SEPARATOR &#39;, &#39;) as book_name&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="s2">&quot;LEFT JOIN books ON users.id = books.user_id&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="s2">&quot;books.type&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">user</span><span class="p">.</span><span class="n">id</span><span class="p">,</span> <span class="n">books</span><span class="p">.</span><span class="k">type</span><span class="p">,</span> <span class="n">GROUP_CONCAT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">books</span><span class="p">.</span><span class="n">name</span> <span class="n">SEPARATOR</span> <span class="s1">&#39;, &#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">book_name</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">users</span>
</span><span class='line'><span class="k">LEFT</span> <span class="k">JOIN</span> <span class="n">books</span> <span class="k">ON</span> <span class="n">users</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">books</span><span class="p">.</span><span class="n">user_id</span>
</span><span class='line'><span class="k">WHERE</span> <span class="k">user</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">8</span>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">books</span><span class="p">.</span><span class="k">type</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以排序</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">GROUP_CONCAT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">books</span><span class="p">.</span><span class="n">id</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">books</span><span class="p">.</span><span class="n">id</span> <span class="k">ASC</span> <span class="n">SEPARATOR</span> <span class="s1">&#39;, &#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">book_name</span>
</span></code></pre></td></tr></table></div></figure>


<h1>CONCAT</h1>

<p>可以將多的 column 串在一起</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">CONCAT</span><span class="p">(</span><span class="err">字串</span><span class="mi">1</span><span class="p">,</span> <span class="err">字串</span><span class="mi">2</span><span class="p">,</span> <span class="err">字串</span><span class="mi">3</span><span class="p">,</span> <span class="p">...)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>IFNULL</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="o">//</span> <span class="err">如果</span><span class="n">x</span><span class="err">不是</span><span class="k">NULL</span><span class="p">(</span><span class="err">不包含</span><span class="mi">0</span><span class="p">)</span><span class="err">，</span><span class="n">IFNULL</span><span class="p">()</span><span class="err">返回</span><span class="n">x</span><span class="err">，否則它返回</span><span class="n">y</span><span class="err">。</span>
</span><span class='line'><span class="n">IFNULL</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>CONVERT</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="o">//</span> <span class="err">將時間轉成</span> <span class="nb">date</span>
</span><span class='line'><span class="k">CONVERT</span><span class="p">(</span><span class="n">created_at</span><span class="p">,</span> <span class="nb">date</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>CASE</h1>

<p>像 <code>if else</code> 一樣，可以根據條件，給不同的值</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">CASE</span> <span class="p">(</span><span class="ss">&quot;欄位名&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">WHEN</span> <span class="ss">&quot;條件1&quot;</span> <span class="k">THEN</span> <span class="ss">&quot;結果1&quot;</span>
</span><span class='line'>  <span class="k">WHEN</span> <span class="ss">&quot;條件2&quot;</span> <span class="k">THEN</span> <span class="ss">&quot;結果2&quot;</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="p">[</span><span class="k">ELSE</span> <span class="ss">&quot;結果N&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="k">END</span>
</span><span class='line'><span class="k">FROM</span> <span class="ss">&quot;表格名&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>LOWER() &amp;  UPPER()</h1>

<p>將字串轉小寫或大寫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">LOWER</span><span class="p">(</span><span class="ss">&quot;HI&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">UPPER</span><span class="p">(</span><span class="ss">&quot;hi&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h1>AUTO_INCREMENT</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="o">`</span><span class="n">pre_campaign_details_channels</span><span class="o">`</span> <span class="n">CHANGE</span> <span class="o">`</span><span class="n">id</span><span class="o">`</span> <span class="o">`</span><span class="n">id</span><span class="o">`</span> <span class="nb">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span>  <span class="k">NOT</span> <span class="k">NULL</span>  <span class="n">AUTO_INCREMENT</span> <span class="p">,</span> <span class="k">ADD</span> <span class="k">UNIQUE</span> <span class="p">(</span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h1>unix_timestamp</h1>

<p>date 轉成 Unix Timestamp</p>

<p><code>2018/01/01</code> -> <code>1514736000(s)</code> -> <code>1514736000000(ms)</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">unix_timestamp</span><span class="p">(</span><span class="n">my_datetime_column</span><span class="p">)</span> <span class="k">as</span> <span class="n">stamp</span>
</span><span class='line'><span class="o">#</span> <span class="n">milliseconds</span>
</span><span class='line'><span class="k">SELECT</span> <span class="n">unix_timestamp</span><span class="p">(</span><span class="n">my_datetime_column</span><span class="p">)</span> <span class="o">*</span> <span class="mi">1000</span> <span class="k">as</span> <span class="n">stamp</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://stackoverflow.com/questions/3075577/convert-mysql-datetime-stamp-into-javascripts-date-format">Convert MySql DateTime stamp into JavaScript&rsquo;s Date format</a></p>

<h1>BETWEEN</h1>

<p>可以直接指定在某個區段的時間</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">Store_Information</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">Txn_Date</span> <span class="k">BETWEEN</span> <span class="s1">&#39;Jan-06-1999&#39;</span> <span class="k">AND</span> <span class="s1">&#39;Jan-10-1999&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://www.1keydata.com/tw/sql/sqlbetween.html">SQL Between</a>s</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Defer, Error Handling, Custom Errors, Panic, Recover]]></title>
    <link href="http://mgleon08.github.com/blog/2018/05/29/golang-defer-error-handling-custom-errors-panic-recover/"/>
    <updated>2018-05-29T15:39:48+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/05/29/golang-defer-error-handling-custom-errors-panic-recover</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><a href="#defer">Defer</a></li>
<li><a href="#error_handling">Error Handling</a></li>
<li><a href="#custom_errors">Custom Errors</a></li>
<li><a href="#panic_recover">Panic and Recover</a></li>
</ul>


<h1><span id="defer"> Defer </span></h1>

<p>defer後面的表達式會被放入一個列表中，在當前方法返回的時候，列表中的表達式就會被執行。</p>

<blockquote><ul>
<li>在Golang中，defer表達式通常用於資源清理和釋放、文件關閉、解鎖以及記錄時間等操作。</li>
<li>即使函式發生嚴重錯誤也會執行</li>
<li>透過與匿名函式配合可在return之後修改函式計算結果</li>
<li>Go沒有異常機制，但有 panic/recover 模式來處理錯誤</li>
<li>Panic 可以在任何地方引發，但 recover 只有在 defer 呼叫的函式中有效</li>
</ul>
</blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;world&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// hello </span>
</span><span class='line'><span class="c1">// world</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Last-In-First-Out (LIFO)</h3>

<blockquote><p>defer 是讓 fmt.Println(0) , fmt.Println(1) , fmt.Println(2) , fmt.Println(3) , fmt.Println(4) 依序放到清單中, 等到 func f 結束前, 再依據 Last-In-First-Out (LIFO) 的順序 call 清單中的 function.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span> <span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">5</span> <span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">{</span>
</span><span class='line'>        <span class="k">defer</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;f finish&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// f finish</span>
</span><span class='line'><span class="c1">// 4</span>
</span><span class='line'><span class="c1">// 3</span>
</span><span class='line'><span class="c1">// 2</span>
</span><span class='line'><span class="c1">// 1</span>
</span><span class='line'><span class="c1">// 0</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">name</span> <span class="o">:=</span> <span class="s">&quot;Naveen&quot;</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Orignal String: %s\n&quot;</span><span class="p">,</span> <span class="nb">string</span><span class="p">(</span><span class="nx">name</span><span class="p">))</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Reversed String: &quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">v</span> <span class="o">:=</span> <span class="k">range</span> <span class="p">[]</span><span class="nb">rune</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">defer</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%c&quot;</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Orignal String: Naveen  </span>
</span><span class='line'><span class="c1">// Reversed String: neevaN  </span>
</span></code></pre></td></tr></table></div></figure>


<h3>Arguments evaluation</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">printA</span><span class="p">(</span><span class="nx">a</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;value of a in deferred function&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">a</span> <span class="o">:=</span> <span class="mi">5</span>
</span><span class='line'>    <span class="k">defer</span> <span class="nx">printA</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="c1">// 收到的 arg 會是這時候當下的 arg</span>
</span><span class='line'>    <span class="nx">a</span> <span class="p">=</span> <span class="mi">10</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;value of a before deferred function call&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// value of a before deferred function call 10</span>
</span><span class='line'><span class="c1">// value of a in deferred function 5</span>
</span></code></pre></td></tr></table></div></figure>


<h3>defer with return</h3>

<p>Ex1.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">f</span><span class="p">()</span> <span class="p">(</span><span class="nx">result</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 相當於 result = 0，最後再執行 result++，因此最後回傳會是 1</span>
</span><span class='line'>  <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">result</span><span class="o">++</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">f</span><span class="p">())</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ex2.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">f</span><span class="p">()</span> <span class="p">(</span><span class="nx">r</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">t</span> <span class="o">:=</span> <span class="mi">5</span>
</span><span class='line'>  <span class="c1">// 相當於 r = t，因為最後回傳的參數為 r，但 defer 裡面是針對 t + 5，因此不受影響</span>
</span><span class='line'>  <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">t</span> <span class="p">=</span> <span class="nx">t</span> <span class="o">+</span> <span class="mi">5</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">t</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">f</span><span class="p">())</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 5</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ex3.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">f</span><span class="p">()</span> <span class="p">(</span><span class="nx">r</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 相當於 r = 1</span>
</span><span class='line'>  <span class="k">defer</span> <span class="kd">func</span><span class="p">(</span><span class="nx">r</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//這裡改的r是傳值傳進去的r，不會改變要返回的那個r值</span>
</span><span class='line'>      <span class="nx">r</span> <span class="p">=</span> <span class="nx">r</span> <span class="o">+</span> <span class="mi">5</span>
</span><span class='line'>  <span class="p">}(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">f</span><span class="p">())</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件:</p>

<ul>
<li><a href="https://golangbot.com/learn-golang-series/">[golangbot.com]</a></li>
<li><a href="https://golangbot.com/defer/">[golangbot.com]defer</a></li>
<li><a href="https://golang.org/ref/spec#Defer_statements">Defer_statements</a></li>
<li><a href="https://xiaozhou.net/something-about-defer-2014-05-25.html">Golang中defer的那些事</a></li>
<li><a href="https://hsinyu.gitbooks.io/golang_note/content/defer_panic_recover.html">defer panic recover</a></li>
<li><a href="https://tiancaiamao.gitbooks.io/go-internals/content/zh/03.4.html">3.4 defer關鍵字</a></li>
</ul>


<h1><span id="error_handling"> Error Handling </span></h1>

<h3>1. Asserting the underlying struct type and getting more information from the struct fields</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;os&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">f</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Open</span><span class="p">(</span><span class="s">&quot;/test.txt&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">Name</span><span class="p">(),</span> <span class="s">&quot;opened successfully&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// open /test.txt: No such file or directory  </span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;os&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">f</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Open</span><span class="p">(</span><span class="s">&quot;/test.txt&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">// type assertion 斷言 err 是 *os.PathError type，斷言的結果就是 err 的動態值，動態值的 type 就是 *os.PathError  </span>
</span><span class='line'>    <span class="c1">// //get the underlying *os.PathError value from err  </span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">err</span><span class="p">.(</span><span class="o">*</span><span class="nx">os</span><span class="p">.</span><span class="nx">PathError</span><span class="p">);</span> <span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;File at path&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">.</span><span class="nx">Path</span><span class="p">,</span> <span class="s">&quot;failed to open&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">Name</span><span class="p">(),</span> <span class="s">&quot;opened successfully&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// File at path /test.txt failed to open  </span>
</span></code></pre></td></tr></table></div></figure>


<h5>Golang 的 <code>err.(*os.PathError)</code> 究竟是什麼？</h5>

<p>os.Open return 一個 err 的值，但這個 error 本身是一個 interface</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="kt">error</span> <span class="kd">interface</span> <span class="p">{</span> <span class="nx">Error</span><span class="p">()</span> <span class="kt">string</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>任何碰巧具有 Error 方法的數據類型都將實現該介面並且可以被分配。在大多數情況下，僅打印錯誤就足夠了</li>
<li>聲明 <code>e, ok := err.(*os.PathError)</code> 是一個 type asserting 。</li>
<li>它將檢查介面值 err 包含 <code>*os.PathError</code> 作為具體類型並將返回該值。</li>
</ul>


<h3>2. Asserting the underlying struct type and getting more information using methods</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;net&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">addr</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">net</span><span class="p">.</span><span class="nx">LookupHost</span><span class="p">(</span><span class="s">&quot;golangbot123.com&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">err</span><span class="p">.(</span><span class="o">*</span><span class="nx">net</span><span class="p">.</span><span class="nx">DNSError</span><span class="p">);</span> <span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="nx">err</span><span class="p">.</span><span class="nx">Timeout</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;operation timed out&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">err</span><span class="p">.</span><span class="nx">Temporary</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;temporary error&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;generic error: &quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">addr</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. Direct comparison</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;path/filepath&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">files</span><span class="p">,</span> <span class="kt">error</span> <span class="o">:=</span> <span class="nx">filepath</span><span class="p">.</span><span class="nx">Glob</span><span class="p">(</span><span class="s">&quot;[&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="kt">error</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="o">&amp;&amp;</span> <span class="kt">error</span> <span class="o">==</span> <span class="nx">filepath</span><span class="p">.</span><span class="nx">ErrBadPattern</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="kt">error</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;matched files&quot;</span><span class="p">,</span> <span class="nx">files</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="custom_errors"> Custom Errors </span></h1>

<h3>1. Creating custom errors using the New function</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;errors&quot;</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;math&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">circleArea</span><span class="p">(</span><span class="nx">radius</span> <span class="kt">float64</span><span class="p">)</span> <span class="p">(</span><span class="kt">float64</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">radius</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">errors</span><span class="p">.</span><span class="nx">New</span><span class="p">(</span><span class="s">&quot;Area calculation failed, radius is less than zero&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Pi</span> <span class="o">*</span> <span class="nx">radius</span> <span class="o">*</span> <span class="nx">radius</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">radius</span> <span class="o">:=</span> <span class="o">-</span><span class="mf">20.0</span>
</span><span class='line'>    <span class="nx">area</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">circleArea</span><span class="p">(</span><span class="nx">radius</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Area of circle %0.2f&quot;</span><span class="p">,</span> <span class="nx">area</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// Area calculation failed, radius is less than zero</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. Adding more information to the error using Errorf</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;math&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">circleArea</span><span class="p">(</span><span class="nx">radius</span> <span class="kt">float64</span><span class="p">)</span> <span class="p">(</span><span class="kt">float64</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">radius</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Errorf</span><span class="p">(</span><span class="s">&quot;Area calculation failed, radius %0.2f is less than zero&quot;</span><span class="p">,</span> <span class="nx">radius</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Pi</span> <span class="o">*</span> <span class="nx">radius</span> <span class="o">*</span> <span class="nx">radius</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">radius</span> <span class="o">:=</span> <span class="o">-</span><span class="mf">20.0</span>
</span><span class='line'>    <span class="nx">area</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">circleArea</span><span class="p">(</span><span class="nx">radius</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Area of circle %0.2f&quot;</span><span class="p">,</span> <span class="nx">area</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// Area calculation failed, radius -20.00 is less than zero</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. Providing more information about the error using struct type and fields</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;math&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">areaError</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">err</span>    <span class="kt">string</span>
</span><span class='line'>    <span class="nx">radius</span> <span class="kt">float64</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">e</span> <span class="o">*</span><span class="nx">areaError</span><span class="p">)</span> <span class="nx">Error</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;radius %0.2f: %s&quot;</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">radius</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">circleArea</span><span class="p">(</span><span class="nx">radius</span> <span class="kt">float64</span><span class="p">)</span> <span class="p">(</span><span class="kt">float64</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">radius</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">areaError</span><span class="p">{</span><span class="s">&quot;radius is negative&quot;</span><span class="p">,</span> <span class="nx">radius</span><span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">math</span><span class="p">.</span><span class="nx">Pi</span> <span class="o">*</span> <span class="nx">radius</span> <span class="o">*</span> <span class="nx">radius</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">radius</span> <span class="o">:=</span> <span class="o">-</span><span class="mf">20.0</span>
</span><span class='line'>    <span class="nx">area</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">circleArea</span><span class="p">(</span><span class="nx">radius</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="nx">err</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">err</span><span class="p">.(</span><span class="o">*</span><span class="nx">areaError</span><span class="p">);</span> <span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Radius %0.2f is less than zero&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">.</span><span class="nx">radius</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Area of rectangle1 %0.2f&quot;</span><span class="p">,</span> <span class="nx">area</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// Radius -20.00 is less than zero</span>
</span></code></pre></td></tr></table></div></figure>


<h3>4. Providing more information about the error using methods on struct types</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">ackage</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">areaError</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">err</span>    <span class="kt">string</span>  <span class="c1">//error description</span>
</span><span class='line'>    <span class="nx">length</span> <span class="kt">float64</span> <span class="c1">//length which caused the error</span>
</span><span class='line'>    <span class="nx">width</span>  <span class="kt">float64</span> <span class="c1">//width which caused the error</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">e</span> <span class="o">*</span><span class="nx">areaError</span><span class="p">)</span> <span class="nx">Error</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">err</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">e</span> <span class="o">*</span><span class="nx">areaError</span><span class="p">)</span> <span class="nx">lengthNegative</span><span class="p">()</span> <span class="kt">bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">length</span> <span class="p">&lt;</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">e</span> <span class="o">*</span><span class="nx">areaError</span><span class="p">)</span> <span class="nx">widthNegative</span><span class="p">()</span> <span class="kt">bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">width</span> <span class="p">&lt;</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">rectArea</span><span class="p">(</span><span class="nx">length</span><span class="p">,</span> <span class="nx">width</span> <span class="kt">float64</span><span class="p">)</span> <span class="p">(</span><span class="kt">float64</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">err</span> <span class="o">:=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">length</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">err</span> <span class="o">+=</span> <span class="s">&quot;length is less than zero&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">width</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="nx">err</span> <span class="o">==</span> <span class="s">&quot;&quot;</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">err</span> <span class="p">=</span> <span class="s">&quot;width is less than zero&quot;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">err</span> <span class="o">+=</span> <span class="s">&quot;, width is less than zero&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="s">&quot;&quot;</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">areaError</span><span class="p">{</span><span class="nx">err</span><span class="p">,</span> <span class="nx">length</span><span class="p">,</span> <span class="nx">width</span><span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">length</span> <span class="o">*</span> <span class="nx">width</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">length</span><span class="p">,</span> <span class="nx">width</span> <span class="o">:=</span> <span class="o">-</span><span class="mf">5.0</span><span class="p">,</span> <span class="o">-</span><span class="mf">9.0</span>
</span><span class='line'>    <span class="nx">area</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">rectArea</span><span class="p">(</span><span class="nx">length</span><span class="p">,</span> <span class="nx">width</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">// 這裡回傳回來的 err，是 interface type，還不知道是什麼 dynamic value &amp; type</span>
</span><span class='line'>    <span class="c1">//因此 err.length, err.width, lengthNegative(), widthNegative()，都沒辦法使用，只能使用 Error()</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 利用 type type assertion to get the underlying value of the error interface</span>
</span><span class='line'>        <span class="k">if</span> <span class="nx">err</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">err</span><span class="p">.(</span><span class="o">*</span><span class="nx">areaError</span><span class="p">);</span> <span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 因此這裡的 err，可以使用 err.length, err.width, lengthNegative(), widthNegative()</span>
</span><span class='line'>            <span class="k">if</span> <span class="nx">err</span><span class="p">.</span><span class="nx">lengthNegative</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;error: length %0.2f is less than zero\n&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="nx">err</span><span class="p">.</span><span class="nx">widthNegative</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;error: width %0.2f is less than zero\n&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;area of rect&quot;</span><span class="p">,</span> <span class="nx">area</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">error: length -5.00 is less than zero  </span>
</span><span class='line'><span class="cm">error: width -9.00 is less than zero  </span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="panic_recover"> Panic and Recover </span></h1>

<h3>When should panic be used?</h3>

<p>One important factor is that you should avoid panic and recover and use errors where ever possible. Only in cases where the program just cannot continue execution should a panic and recover mechanism be used.</p>

<ul>
<li>An unrecoverable error where the program cannot simply continue its execution.</li>
<li>A programmer error. (一個接收 pointer 參數的 function，卻傳了 nil 給他)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">func</span> <span class="nb">panic</span><span class="p">(</span><span class="kd">interface</span><span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">fullName</span><span class="p">(</span><span class="nx">firstName</span> <span class="o">*</span><span class="kt">string</span><span class="p">,</span> <span class="nx">lastName</span> <span class="o">*</span><span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">firstName</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;runtime error: first name cannot be nil&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">lastName</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;runtime error: last name cannot be nil&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s %s\n&quot;</span><span class="p">,</span> <span class="o">*</span><span class="nx">firstName</span><span class="p">,</span> <span class="o">*</span><span class="nx">lastName</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;returned normally from fullName&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">firstName</span> <span class="o">:=</span> <span class="s">&quot;Elon&quot;</span>
</span><span class='line'>    <span class="nx">fullName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">firstName</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;returned normally from main&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">panic: runtime error: last name cannot be nil</span>
</span><span class='line'>
</span><span class='line'><span class="cm">goroutine 1 [running]:</span>
</span><span class='line'><span class="cm">main.fullName(0x1042ff98, 0x0)</span>
</span><span class='line'><span class="cm"> /tmp/sandbox191402046/main.go:12 +0x140</span>
</span><span class='line'><span class="cm">main.main()</span>
</span><span class='line'><span class="cm"> /tmp/sandbox191402046/main.go:20 +0x40</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<h3>defer</h3>

<p>如果有 <code>defer</code>，會等所有的 defer 跑完，最後才會執行 panic</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">fullName</span><span class="p">(</span><span class="nx">firstName</span> <span class="o">*</span><span class="kt">string</span><span class="p">,</span> <span class="nx">lastName</span> <span class="o">*</span><span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">defer</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;deferred call in fullName&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">firstName</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;runtime error: first name cannot be nil&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">lastName</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;runtime error: last name cannot be nil&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s %s\n&quot;</span><span class="p">,</span> <span class="o">*</span><span class="nx">firstName</span><span class="p">,</span> <span class="o">*</span><span class="nx">lastName</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;returned normally from fullName&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">defer</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;deferred call in main&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">firstName</span> <span class="o">:=</span> <span class="s">&quot;Elon&quot;</span>
</span><span class='line'>    <span class="nx">fullName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">firstName</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;returned normally from main&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">deferred call in fullName  </span>
</span><span class='line'><span class="cm">deferred call in main  </span>
</span><span class='line'><span class="cm">panic: runtime error: last name cannot be nil</span>
</span><span class='line'>
</span><span class='line'><span class="cm">goroutine 1 [running]:  </span>
</span><span class='line'><span class="cm">main.fullName(0x1042bf90, 0x0)  </span>
</span><span class='line'><span class="cm">    /tmp/sandbox060731990/main.go:13 +0x280</span>
</span><span class='line'><span class="cm">main.main()  </span>
</span><span class='line'><span class="cm">    /tmp/sandbox060731990/main.go:22 +0xc0</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Recover</h3>

<p>recover is a builtin function which is used to regain control of a panicking goroutine.</p>

<blockquote><p>Recover is useful only when called inside deferred functions and  called from the same goroutine.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">func</span> <span class="nb">recover</span><span class="p">()</span> <span class="kd">interface</span><span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">recoverName</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">r</span> <span class="o">:=</span> <span class="nb">recover</span><span class="p">();</span> <span class="nx">r</span><span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;recovered from &quot;</span><span class="p">,</span> <span class="nx">r</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">fullName</span><span class="p">(</span><span class="nx">firstName</span> <span class="o">*</span><span class="kt">string</span><span class="p">,</span> <span class="nx">lastName</span> <span class="o">*</span><span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">defer</span> <span class="nx">recoverName</span><span class="p">()</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">firstName</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;runtime error: first name cannot be nil&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">lastName</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;runtime error: last name cannot be nil&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s %s\n&quot;</span><span class="p">,</span> <span class="o">*</span><span class="nx">firstName</span><span class="p">,</span> <span class="o">*</span><span class="nx">lastName</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;returned normally from fullName&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">defer</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;deferred call in main&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">firstName</span> <span class="o">:=</span> <span class="s">&quot;Elon&quot;</span>
</span><span class='line'>    <span class="nx">fullName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">firstName</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;returned normally from main&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">recovered from  runtime error: last name cannot be nil  </span>
</span><span class='line'><span class="cm">returned normally from main  </span>
</span><span class='line'><span class="cm">deferred call in main  </span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Getting stack trace after recover</h3>

<p>There is a way to print the stack trace using the <code>PrintStack</code> function of the <code>Debug</code> package</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;runtime/debug&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">r</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">r</span> <span class="o">:=</span> <span class="nb">recover</span><span class="p">();</span> <span class="nx">r</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Recovered&quot;</span><span class="p">,</span> <span class="nx">r</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">debug</span><span class="p">.</span><span class="nx">PrintStack</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">a</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">defer</span> <span class="nx">r</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">n</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">}</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;normally returned from a&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">a</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;normally returned from main&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件:</p>

<ul>
<li><a href="https://golangbot.com/learn-golang-series/">golangbot.com</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Goroutine, Channel, Worker Pool, Select, Mutex]]></title>
    <link href="http://mgleon08.github.com/blog/2018/05/17/golang-goroutine-channel-worker-pool-select-mutex/"/>
    <updated>2018-05-17T23:10:28+08:00</updated>
    <id>http://mgleon08.github.com/blog/2018/05/17/golang-goroutine-channel-worker-pool-select-mutex</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><a href="#concurrency">Concurrency</a></li>
<li><a href="#parallelism">Parallelism</a></li>
<li><a href="#goroutine">Goroutine</a></li>
<li><a href="#channel">Channel</a></li>
<li><a href="#buffered_channels">Buffered Channels</a></li>
<li><a href="#worker_pool">Worker Pool</a></li>
<li><a href="#select">Select</a></li>
<li><a href="mutex">sync.Mutex</a></li>
</ul>


<h1>Concurrency &amp;  Parallelism</h1>

<blockquote><p>Goroutines are part of making concurrency easy to use.</p></blockquote>

<p>要了解 Goroutine 可能要先了解一下，Concurrency 跟 parallelism 的差別</p>

<h3><span id="concurrency"> Concurrency </span></h3>

<blockquote><p>Concurrency is the capability to deal with lots of things at once.</p></blockquote>

<p>簡單的解釋，一個在跑步的人，因為鞋帶鬆了，所以他停下來綁鞋帶，綁完後繼續跑。</p>

<p><img src="http://i.imgur.com/WOthNHb.png" alt="" /></p>

<h3><span id="parallelism"> Parallelism </span></h3>

<blockquote><p>Parallelism is doing lots of things at the same time. It might sound similar to concurrency but its actually different.</p></blockquote>

<p>同樣用慢跑來解釋的話，在慢跑的人，同時在用耳機聽音樂，在同一時間做了很多事。</p>

<p><img src="http://i.imgur.com/cTonbBE.png" alt="" /></p>

<ul>
<li><a href="https://golangbot.com/concurrency/">concurrency &amp; parallelism</a></li>
</ul>


<h1><span id="goroutine"> Goroutine </span></h1>

<blockquote><p>Goroutines are functions or methods that run concurrently with other functions or methods.</p></blockquote>

<ul>
<li>go 本身就有數千個 goroutine 在跑</li>
<li>goroutine can be thought of as light weight threads.</li>
<li>與 threads 相比，goroutine 成本非常小</li>
<li>goroutine 最多運行 GOMAXPROCS 數量(可以設定)</li>
<li>main() 也是一個 goroutine 稱為 <code>main Goroutine</code></li>
</ul>


<h3>Example 1</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">hello</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Hello world goroutine&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">hello</span><span class="p">()</span>
</span><span class='line'>    <span class="c1">// time.Sleep(1 * time.Second)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;main function&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// main function</span>
</span><span class='line'><span class="c1">// 因為 hello() 進入背景處理，但是 main() 已經結束，因此所有的 goroutine 都會直接打斷，程序退出。</span>
</span><span class='line'><span class="c1">// 加入 sleep 1 秒，讓 hello() 有足夠的時間 retuen 回來</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Example 2</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">numbers</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">250</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%d &quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">alphabets</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="sc">&#39;a&#39;</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="sc">&#39;e&#39;</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">400</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%c &quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">numbers</span><span class="p">()</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">alphabets</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">3000</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;main terminated&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 1 a 2 3 b 4 c 5 d e main terminated</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://golangbot.com/content/images/2017/07/Goroutines-explained.png" alt="" /></p>

<ul>
<li><a href="https://tonybai.com/2014/11/15/how-goroutines-work/">Goroutine是如何工作的</a></li>
<li><a href="https://golangbot.com/goroutines/">[golangbot.com] goroutines</a></li>
</ul>


<h1><span id="channel"> Channel </span></h1>

<blockquote><p>Channels can be thought as pipes using which Goroutines communicate. Similar to how water flows from one end to another in a pipe, data can be sent from one end and received from the another end using channels.</p></blockquote>

<ul>
<li>Channel 是 goroutine 之間相互通信的機制（goroutine之間是相互獨立的，因此需要 Channel 來做溝通）</li>
<li>Channel 中使用的 type 稱之為 element type，比如 int 類型的 channel 寫作為 <code>chan int</code></li>
<li>Go 使用 make 內建函式建立 channel</li>
<li>The zero value of a channel is <code>nil</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">a</span> <span class="kd">chan</span> <span class="kt">int</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">a</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;channel a is nil, going to define it&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">a</span> <span class="p">=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Type of a is %T&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// channel a is nil, going to define it</span>
</span><span class='line'><span class="c1">// Type of a is chan int</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">a</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>send、receive、close</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">data</span> <span class="o">:=</span> <span class="o">&lt;-</span> <span class="nx">ch</span> <span class="c1">// read from channel ch </span>
</span><span class='line'><span class="o">&lt;-</span> <span class="nx">ch</span> <span class="c1">// read from channel ch</span>
</span><span class='line'><span class="nx">ch</span> <span class="o">&lt;-</span> <span class="nx">data</span> <span class="c1">// write to channel ch</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Sends and receives are blocking by default</h3>

<blockquote><ul>
<li>When a data is sent to a channel, the control is blocked in the send statement until some other Goroutine reads from that channel.</li>
<li>Similarly when data is read from a channel, the read is blocked until some Goroutine writes data to that channel.</li>
<li>如果另一方一直對沒有動作，會造成 <code>Deadlock</code></li>
</ul>
</blockquote>

<h5>Example</h5>

<p><code>&lt;-done</code> 這行會導致 <code>main goroutine</code> blocked 在這邊，直到其他 goroutine 將 data 寫入 done，不然是不會繼續往下走，也意味著就不需要用 sleep 來停止</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">hello</span><span class="p">(</span><span class="nx">done</span> <span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;hello go routine is going to sleep&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">4</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;hello go routine awake and going to write to done&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">done</span> <span class="o">&lt;-</span> <span class="kc">true</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">done</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Main going to call hello go goroutine&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">hello</span><span class="p">(</span><span class="nx">done</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">// 這邊 done channel，沒有任何東西，因此被 blockeds 住，等有東西到 channel 才會繼續下一行</span>
</span><span class='line'>    <span class="o">&lt;-</span> <span class="nx">done</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Main received data&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Main going to call hello go goroutine</span>
</span><span class='line'><span class="c1">// hello go routine is going to sleep</span>
</span><span class='line'><span class="c1">// hello go routine awake and going to write to done</span>
</span><span class='line'><span class="c1">// Main received data</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Exampale</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">calcSquares</span><span class="p">(</span><span class="nx">number</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">squareop</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">sum</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">number</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">digit</span> <span class="o">:=</span> <span class="nx">number</span> <span class="o">%</span> <span class="mi">10</span>
</span><span class='line'>        <span class="nx">sum</span> <span class="o">+=</span> <span class="nx">digit</span> <span class="o">*</span> <span class="nx">digit</span>
</span><span class='line'>        <span class="nx">number</span> <span class="o">/=</span> <span class="mi">10</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">squareop</span> <span class="o">&lt;-</span> <span class="nx">sum</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">calcCubes</span><span class="p">(</span><span class="nx">number</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">cubeop</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">sum</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">number</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">digit</span> <span class="o">:=</span> <span class="nx">number</span> <span class="o">%</span> <span class="mi">10</span>
</span><span class='line'>        <span class="nx">sum</span> <span class="o">+=</span> <span class="nx">digit</span> <span class="o">*</span> <span class="nx">digit</span> <span class="o">*</span> <span class="nx">digit</span>
</span><span class='line'>        <span class="nx">number</span> <span class="o">/=</span> <span class="mi">10</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">cubeop</span> <span class="o">&lt;-</span> <span class="nx">sum</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">number</span> <span class="o">:=</span> <span class="mi">589</span>
</span><span class='line'>    <span class="nx">sqrch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">cubech</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">calcSquares</span><span class="p">(</span><span class="nx">number</span><span class="p">,</span> <span class="nx">sqrch</span><span class="p">)</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">calcCubes</span><span class="p">(</span><span class="nx">number</span><span class="p">,</span> <span class="nx">cubech</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">squares</span><span class="p">,</span> <span class="nx">cubes</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">sqrch</span><span class="p">,</span> <span class="o">&lt;-</span><span class="nx">cubech</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Final output&quot;</span><span class="p">,</span> <span class="nx">squares</span> <span class="o">+</span> <span class="nx">cubes</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Final output 1536</span>
</span></code></pre></td></tr></table></div></figure>


<p>refactor with close &amp; range</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">digits</span><span class="p">(</span><span class="nx">number</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">dchnl</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">number</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">digit</span> <span class="o">:=</span> <span class="nx">number</span> <span class="o">%</span> <span class="mi">10</span>
</span><span class='line'>        <span class="nx">dchnl</span> <span class="o">&lt;-</span> <span class="nx">digit</span>
</span><span class='line'>        <span class="nx">number</span> <span class="o">/=</span> <span class="mi">10</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nb">close</span><span class="p">(</span><span class="nx">dchnl</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">calcSquares</span><span class="p">(</span><span class="nx">number</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">squareop</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">sum</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="nx">dch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">digits</span><span class="p">(</span><span class="nx">number</span><span class="p">,</span> <span class="nx">dch</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">digit</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">dch</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">sum</span> <span class="o">+=</span> <span class="nx">digit</span> <span class="o">*</span> <span class="nx">digit</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">squareop</span> <span class="o">&lt;-</span> <span class="nx">sum</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">calcCubes</span><span class="p">(</span><span class="nx">number</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">cubeop</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">sum</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="nx">dch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">digits</span><span class="p">(</span><span class="nx">number</span><span class="p">,</span> <span class="nx">dch</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">digit</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">dch</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">sum</span> <span class="o">+=</span> <span class="nx">digit</span> <span class="o">*</span> <span class="nx">digit</span> <span class="o">*</span> <span class="nx">digit</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">cubeop</span> <span class="o">&lt;-</span> <span class="nx">sum</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">number</span> <span class="o">:=</span> <span class="mi">589</span>
</span><span class='line'>    <span class="nx">sqrch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">cubech</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">calcSquares</span><span class="p">(</span><span class="nx">number</span><span class="p">,</span> <span class="nx">sqrch</span><span class="p">)</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">calcCubes</span><span class="p">(</span><span class="nx">number</span><span class="p">,</span> <span class="nx">cubech</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">squares</span><span class="p">,</span> <span class="nx">cubes</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">sqrch</span><span class="p">,</span> <span class="o">&lt;-</span><span class="nx">cubech</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Final output&quot;</span><span class="p">,</span> <span class="nx">squares</span><span class="o">+</span><span class="nx">cubes</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Final output 1536</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Deadlock</h3>

<p>當 Goroutine send data 到 channel，但沒有其他的 Goroutine 去接收這個 data，就會造成 Deadlock，並且出現錯誤 <code>panic</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">ch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="mi">5</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Unidirectional channels (單向 channels)</h3>

<p>到目前為止，說的都是 bidirectional channels(雙向 channels)</p>

<p>channel 也可以是單向的，<code>only send or receive data</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">sendData</span><span class="p">(</span><span class="nx">sendch</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">sendch</span> <span class="o">&lt;-</span> <span class="mi">10</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">sendch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span><span class="o">&lt;-</span> <span class="kt">int</span><span class="p">)</span> <span class="c1">// 單向 channel</span>
</span><span class='line'>    <span class="k">go</span> <span class="nx">sendData</span><span class="p">(</span><span class="nx">sendch</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="o">&lt;-</span><span class="nx">sendch</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// main.go:11: invalid operation: &lt;-sendch (receive from send-only type chan&lt;- int)</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上只有 send 功能，並沒有 receive，因此會報錯，但事實上只有 send 的 channel 也是沒有什麼意義</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">sendData</span><span class="p">(</span><span class="nx">sendch</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 單向 channel</span>
</span><span class='line'>  <span class="nx">sendch</span> <span class="o">&lt;-</span> <span class="mi">10</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">chnl</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="c1">// 雙向 channel</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">sendData</span><span class="p">(</span><span class="nx">chnl</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="o">&lt;-</span><span class="nx">chnl</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 10</span>
</span></code></pre></td></tr></table></div></figure>


<p>將單向改成雙向，並且透過 <code>func</code> 來控制單向</p>

<h3>Closing channels and for range loops on channels</h3>

<ul>
<li>Only the sender should close a channel, never the receiver. Sending on a closed channel will cause a <code>panic</code></li>
<li>Channels aren&rsquo;t like files; you don&rsquo;t usually need to close them. Closing is only necessary when the receiver must be told there are no more values coming, such as to terminate a <code>range</code> loop.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">v</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="o">&lt;-</span> <span class="nx">ch</span>
</span><span class='line'><span class="c1">// ok </span>
</span><span class='line'><span class="c1">// true: 可以接收的狀態</span>
</span><span class='line'><span class="c1">// false: 沒有任何 value &amp; channel 已經關閉</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Examples</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">producer</span><span class="p">(</span><span class="nx">chnl</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">chnl</span> <span class="o">&lt;-</span> <span class="nx">i</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nb">close</span><span class="p">(</span><span class="nx">chnl</span><span class="p">)</span> <span class="c1">// close</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">producer</span><span class="p">(</span><span class="nx">ch</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// 用 range，當 channel close 會自動離開</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">v</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">ch</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Received &quot;</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm"> for {</span>
</span><span class='line'><span class="cm">     v, ok := &lt;-ch</span>
</span><span class='line'><span class="cm">     if ok == false {</span>
</span><span class='line'><span class="cm">         break</span>
</span><span class='line'><span class="cm">     }</span>
</span><span class='line'><span class="cm">     fmt.Println(&quot;Received &quot;, v, ok)</span>
</span><span class='line'><span class="cm"> }</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Received  0 true</span>
</span><span class='line'><span class="c1">// Received  1 true</span>
</span><span class='line'><span class="c1">// Received  2 true</span>
</span><span class='line'><span class="c1">// 沒有 close 會造成 fatal error: all goroutines are asleep - deadlock!</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Example</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">fibonacci</span><span class="p">(</span><span class="nx">n</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">c</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">c</span> <span class="o">&lt;-</span> <span class="nx">x</span>
</span><span class='line'>      <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span> <span class="p">=</span> <span class="nx">y</span><span class="p">,</span> <span class="nx">x</span><span class="o">+</span><span class="nx">y</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nb">close</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">c</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">fibonacci</span><span class="p">(</span><span class="nb">cap</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span> <span class="nx">c</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">c</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 0</span>
</span><span class='line'><span class="c1">// 1</span>
</span><span class='line'><span class="c1">// 1</span>
</span><span class='line'><span class="c1">// 2</span>
</span><span class='line'><span class="c1">// 3</span>
</span><span class='line'><span class="c1">// 5</span>
</span><span class='line'><span class="c1">// 8</span>
</span><span class='line'><span class="c1">// 13</span>
</span><span class='line'><span class="c1">// 21</span>
</span><span class='line'><span class="c1">// 34</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="buffered_channels"> Buffered Channels </span></h1>

<blockquote><p>Provide the buffer length as the second argument to make to initialize a buffered channel:</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">ch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'><span class="c1">// ch := make(chan type, capacity)</span>
</span><span class='line'><span class="c1">// The capacity for an unbuffered channel is 0 </span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>當 buffer 滿了，sends 就會 block 住</li>
<li>當 buffer 空了，receives 就會 block 住</li>
</ul>


<h3>Example</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="mi">2</span>
</span><span class='line'>  <span class="c1">// ch &lt;- 3 再多傳一個就會 deadlock</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;capacity is&quot;</span><span class="p">,</span> <span class="nb">cap</span><span class="p">(</span><span class="nx">ch</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;length is&quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">ch</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="o">&lt;-</span><span class="nx">ch</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="o">&lt;-</span><span class="nx">ch</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// fmt.Println(&lt;-ch) 多接收一個也會 deadlock</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;capacity is&quot;</span><span class="p">,</span> <span class="nb">cap</span><span class="p">(</span><span class="nx">ch</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;length is&quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">ch</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">capacity is 3</span>
</span><span class='line'><span class="cm">length is 2</span>
</span><span class='line'><span class="cm">1</span>
</span><span class='line'><span class="cm">2</span>
</span><span class='line'><span class="cm">capacity is 3</span>
</span><span class='line'><span class="cm">length is 0</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="worker_pool"> Worker Pool </span></h1>

<h3>WaitGroup</h3>

<p>透過 WaitGroup，可以讓所有的 Goroutine 都跑完，最後再結束</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>    <span class="s">&quot;sync&quot;</span>
</span><span class='line'>    <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">i</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">wg</span> <span class="o">*</span><span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;started Goroutine &quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Goroutine %d ended\n&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">wg</span><span class="p">.</span><span class="nx">Done</span><span class="p">()</span> <span class="c1">// 執行完一次就 -1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">no</span> <span class="o">:=</span> <span class="mi">3</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">wg</span> <span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">no</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">wg</span><span class="p">.</span><span class="nx">Add</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1">// 每次執行都 + 1</span>
</span><span class='line'>        <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">wg</span><span class="p">)</span> <span class="c1">// wg 一定要用 pointer，否則每個 goroutine 都會有各自的 WaitGroup</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">wg</span><span class="p">.</span><span class="nx">Wait</span><span class="p">()</span> <span class="c1">// 會 wait 到 0 才會繼續下一步</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;All go routines finished executing&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>what is <a href="https://en.wikipedia.org/wiki/Thread_pool">worker pool</a>?</p>

<blockquote><p>a worker pool is a collection of threads which are waiting for tasks to be assigned to them. Once they finish the task assigned, they make themselves available again for the next task.</p></blockquote>

<ul>
<li><a href="https://golang.org/pkg/sync/#WaitGroup">WaitGroup</a></li>
</ul>


<h3>Example</h3>

<ul>
<li><a href="https://golangbot.com/buffered-channels-worker-pools/">Worker Pool Implementation</a></li>
</ul>


<h1><span id="select"> Select </span></h1>

<ul>
<li>The select statement lets a goroutine wait on multiple communication operations.</li>
<li>A select blocks until one of its cases can run, then it executes that case. It chooses one at random if multiple are ready.</li>
</ul>


<blockquote><p>The syntax is similar to switch except that each of the case statement will be a channel operation</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">server1</span><span class="p">(</span><span class="nx">ch</span> <span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">6</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="s">&quot;from server1&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">server2</span><span class="p">(</span><span class="nx">ch</span> <span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">3</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="s">&quot;from server2&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">output1</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">output2</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">server1</span><span class="p">(</span><span class="nx">output1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">server2</span><span class="p">(</span><span class="nx">output2</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// 等待到其中一個 channel 回來，就執行，如果都有就會隨機</span>
</span><span class='line'>  <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="nx">s1</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">output1</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">s1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">case</span> <span class="nx">s2</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">output2</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">s2</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// from server2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">fibonacci</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span> <span class="nx">quit</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="nx">c</span> <span class="o">&lt;-</span> <span class="nx">x</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span> <span class="p">=</span> <span class="nx">y</span><span class="p">,</span> <span class="nx">x</span><span class="o">+</span><span class="nx">y</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">quit</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;quit&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">c</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">quit</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="o">&lt;-</span><span class="nx">c</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">quit</span> <span class="o">&lt;-</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="nx">fibonacci</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span> <span class="nx">quit</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 0</span>
</span><span class='line'><span class="c1">// 1</span>
</span><span class='line'><span class="c1">// 1</span>
</span><span class='line'><span class="c1">// 2</span>
</span><span class='line'><span class="c1">// 3</span>
</span><span class='line'><span class="c1">// 5</span>
</span><span class='line'><span class="c1">// 8</span>
</span><span class='line'><span class="c1">// 13</span>
</span><span class='line'><span class="c1">// 21</span>
</span><span class='line'><span class="c1">// 34</span>
</span><span class='line'><span class="c1">// quit</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Default Selection</h3>

<p>The default case in a select is run if no other case is ready.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// Use a default case to try a send or receive without blocking:</span>
</span><span class='line'>
</span><span class='line'><span class="k">select</span> <span class="p">{</span>
</span><span class='line'><span class="k">case</span> <span class="nx">i</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">c</span><span class="p">:</span>
</span><span class='line'>    <span class="c1">// use i</span>
</span><span class='line'><span class="k">default</span><span class="p">:</span>
</span><span class='line'>    <span class="c1">// receiving from c would block</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ch</span> <span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">10500</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="s">&quot;process successful&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ch</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">1000</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="nx">v</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">ch</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;received value: &quot;</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;no value received&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">tick</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Tick</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">boom</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">After</span><span class="p">(</span><span class="mi">500</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">tick</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;tick.&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">boom</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;BOOM!&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;    .&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">50</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="mutex"> sync.Mutex </span></h1>

<h3><a href="https://zh.wikipedia.org/wiki/%E8%87%A8%E7%95%8C%E5%8D%80%E6%AE%B5">Critical section</a></h3>

<p>一個存取共用資源（例如：共用裝置或是共用記憶體）的程式片段，而這些共用資源有無法同時被多個執行緒存取的特性。</p>

<p>當兩個以上的 goroutine 對同一個 value 做計算時，可能會因為前後順序的差異，導致最後的結果不同。(e.g. x = x + 1)</p>

<h3><a href="https://tip.golang.org/pkg/sync/#Mutex">Mutex</a></h3>

<p>A Mutex is used to provide a locking mechanism to ensure that only one Goroutine is running the critical section of code at any point of time to prevent race condition from happening.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// Mutex is available in the sync package</span>
</span><span class='line'><span class="nx">mutex</span><span class="p">.</span><span class="nx">Lock</span><span class="p">()</span>
</span><span class='line'><span class="nx">x</span> <span class="p">=</span> <span class="nx">x</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="nx">mutex</span><span class="p">.</span><span class="nx">Unlock</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 同時間只會有一個 goroutine</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Example</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">increment</span><span class="p">(</span><span class="nx">wg</span> <span class="o">*</span><span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span><span class="p">,</span> <span class="nx">m</span> <span class="o">*</span><span class="nx">sync</span><span class="p">.</span><span class="nx">Mutex</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">m</span><span class="p">.</span><span class="nx">Lock</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">x</span> <span class="p">=</span> <span class="nx">x</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">m</span><span class="p">.</span><span class="nx">Unlock</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">wg</span><span class="p">.</span><span class="nx">Done</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">w</span> <span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">m</span> <span class="nx">sync</span><span class="p">.</span><span class="nx">Mutex</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">1000</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">w</span><span class="p">.</span><span class="nx">Add</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="k">go</span> <span class="nx">increment</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">w</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">m</span><span class="p">)</span> <span class="c1">// 這裡一定要用 address</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">w</span><span class="p">.</span><span class="nx">Wait</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;final value of x&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 1000</span>
</span><span class='line'><span class="c1">// 如果沒加上 lock，同時就會有很多個 goroutine 在跑，導致最後結果不一樣</span>
</span></code></pre></td></tr></table></div></figure>


<p>用 buffered channel 的方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">increment</span><span class="p">(</span><span class="nx">wg</span> <span class="o">*</span><span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span><span class="p">,</span> <span class="nx">ch</span> <span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="kc">true</span> <span class="c1">// 當前面的 channel 還有東西，就會 block 住，導致後面無法繼續</span>
</span><span class='line'>  <span class="nx">x</span> <span class="p">=</span> <span class="nx">x</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="o">&lt;-</span><span class="nx">ch</span>
</span><span class='line'>  <span class="nx">wg</span><span class="p">.</span><span class="nx">Done</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">w</span> <span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">bool</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">1000</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">w</span><span class="p">.</span><span class="nx">Add</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="k">go</span> <span class="nx">increment</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">w</span><span class="p">,</span> <span class="nx">ch</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">w</span><span class="p">.</span><span class="nx">Wait</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;final value of x&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Example 2</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// SafeCounter is safe to use concurrently.</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">SafeCounter</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">v</span>   <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span>
</span><span class='line'>  <span class="nx">mux</span> <span class="nx">sync</span><span class="p">.</span><span class="nx">Mutex</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Inc increments the counter for the given key.</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">SafeCounter</span><span class="p">)</span> <span class="nx">Inc</span><span class="p">(</span><span class="nx">key</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">c</span><span class="p">.</span><span class="nx">mux</span><span class="p">.</span><span class="nx">Lock</span><span class="p">()</span>
</span><span class='line'>  <span class="c1">// Lock so only one goroutine at a time can access the map c.v.</span>
</span><span class='line'>  <span class="nx">c</span><span class="p">.</span><span class="nx">v</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="o">++</span>
</span><span class='line'>  <span class="nx">c</span><span class="p">.</span><span class="nx">mux</span><span class="p">.</span><span class="nx">Unlock</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Value returns the current value of the counter for the given key.</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">SafeCounter</span><span class="p">)</span> <span class="nx">Value</span><span class="p">(</span><span class="nx">key</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">c</span><span class="p">.</span><span class="nx">mux</span><span class="p">.</span><span class="nx">Lock</span><span class="p">()</span>
</span><span class='line'>  <span class="c1">// Lock so only one goroutine at a time can access the map c.v.</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">c</span><span class="p">.</span><span class="nx">mux</span><span class="p">.</span><span class="nx">Unlock</span><span class="p">()</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">v</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">c</span> <span class="o">:=</span> <span class="nx">SafeCounter</span><span class="p">{</span><span class="nx">v</span><span class="p">:</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">)}</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">1000</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">go</span> <span class="nx">c</span><span class="p">.</span><span class="nx">Inc</span><span class="p">(</span><span class="s">&quot;somekey&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">Value</span><span class="p">(</span><span class="s">&quot;somekey&quot;</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件:</p>

<ul>
<li><a href="https://golangbot.com/learn-golang-series/">[golangbot.com]</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
