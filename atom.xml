<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leon's Blogging]]></title>
  <link href="https://mgleon08.github.io/atom.xml" rel="self"/>
  <link href="https://mgleon08.github.io/"/>
  <updated>2019-08-29T00:37:57+08:00</updated>
  <id>https://mgleon08.github.io/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javascript Date]]></title>
    <link href="https://mgleon08.github.io/blog/2019/08/29/javascript-date/"/>
    <updated>2019-08-29T00:31:13+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/08/29/javascript-date</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在 javascript 中，時間是非常神奇的東西呢! 剛好遇到時區的相關問題，就來記錄一下</p>

<ul>
<li>GMT (格林威治標準時間, 格林威治平時, Greenwich Mean Time)</li>
<li>UTC (協調世界時 Universal Time Coordinated)</li>
<li>一般情況下，GMT 和 UTC 可以互換，但是實際上，GMT 是一個時區，而 UTC 是一個時間標準</li>
</ul>


<p>在 <code>js</code> 使用 <code>-</code> 會被 Chrome 解析為格林威治標準時間(GMT)的日期，所以像台灣的「本地時間」是 GMT+8 因此顯示時間會自動加上八小時來顯示。</p>

<p>若使用 <code>/</code> 則會是顯示「本地時間」</p>

<p>當想用 「本地時間」 時，請記得要改用 <code>/</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// 調整電腦時區，顯示會不一樣</span>
</span><span class='line'>
</span><span class='line'><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s1">&#39;2019-08-14&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1">// Wed Aug 14 2019 08:00:00 GMT+0800 (台北標準時間)</span>
</span><span class='line'>
</span><span class='line'><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s1">&#39;2019/08/14&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1">// Wed Aug 14 2019 00:00:00 GMT+0800 (台北標準時間)</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果拿到的 date 是 <code>2019-08-14T00:00:00.000Z</code>，則可以透過轉換，來達成不被時區影響</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">date</span> <span class="o">=</span> <span class="s1">&#39;2019-08-14T00:00:00.000Z&#39;</span>
</span><span class='line'><span class="nx">date</span> <span class="o">=</span> <span class="nx">date</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-/g</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">date</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 <a href="http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15">ECMAScript® Language Specification Date Time String Format</a> 有定義一套標準格式，基於 <code>ISO 8601</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">YYYY</span><span class="o">-</span><span class="nx">MM</span><span class="o">-</span><span class="nx">DDTHH</span><span class="o">:</span><span class="nx">mm</span><span class="o">:</span><span class="nx">ss</span>
</span><span class='line'><span class="mi">2019</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">14</span><span class="nx">T00</span><span class="o">:</span><span class="mi">00</span><span class="o">:</span><span class="mi">00</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以只有日期 (但就是會跟著時區跑)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s1">&#39;2019&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s1">&#39;2019-08&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s1">&#39;2019-08-14&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>結論就是需要跟著時區用 <code>-</code>，不需要則用 <code>/</code></p>

<h1>Reference</h1>

<ul>
<li><a href="http://www.timeanddate.com/time/map/">所有的時區</a></li>
<li><a href="https://pansci.asia/archives/84978">到底是 GMT+8 還是 UTC+8 ? - PanSci 泛科學</a></li>
<li><a href="https://stackoverflow.com/questions/2587345/why-does-date-parse-give-incorrect-results">javascript - Why does Date.parse give incorrect results? - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/17545708/parse-date-without-timezone-javascript">Parse date without timezone javascript - Stack Overflow</a></li>
<li><a href="http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15">ECMAScript Language Specification - ECMA-262 Edition 5.1</a></li>
<li><a href="https://blog.miniasp.com/post/2016/09/25/JavaScript-Date-usage-in-details">前端工程研究：關於 JavaScript 中 Date 型別的常見地雷與建議作法 | The Will Will Web</a></li>
<li><a href="https://blog.csdn.net/XINGXUEXX/article/details/51132026">關於“時間”的一次探索 關於js時區iso，utc等完美解答</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多重 Session 管理 - Tmux]]></title>
    <link href="https://mgleon08.github.io/blog/2019/08/29/tmux/"/>
    <updated>2019-08-29T00:28:38+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/08/29/tmux</id>
    <content type="html"><![CDATA[<!-- more -->


<p>除了 vim 之外，也很常聽到的 tmux，搭配起來，效率 up up</p>

<h1>好處</h1>

<ul>
<li>好處可以保存 session (remote 重新連接時，還是會保存)</li>
<li>視窗分割</li>
</ul>


<h1>Basic</h1>

<ul>
<li>每次都是建立一個 session，一個 session 可以有多個 window (window 類似 tab)</li>
<li>一個 window 可以有多個 pane (pane 類似 分割畫面)</li>
</ul>


<h1>Install</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install tmux</span></code></pre></td></tr></table></div></figure>


<h1>Prefix</h1>

<p>更改 prefix <code>ctrl+b</code> to <code>ctrl+a</code>，建立 <code>tmux.conf</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// vim ~/.tmux.conf</span>
</span><span class='line'><span class="nx">unbind</span> <span class="nx">C</span><span class="o">-</span><span class="nx">b</span>
</span><span class='line'><span class="nx">set</span> <span class="o">-</span><span class="nx">g</span> <span class="nx">prefix</span> <span class="nx">C</span><span class="o">-</span><span class="nx">a</span>
</span><span class='line'><span class="nx">bind</span> <span class="nx">C</span><span class="o">-</span><span class="nx">a</span> <span class="nx">send</span><span class="o">-</span><span class="nx">prefix</span>
</span></code></pre></td></tr></table></div></figure>


<h1>terminal 指令</h1>

<ul>
<li><code>tmux</code>: 預設 name 是數字</li>
<li><code>tmux new -s &lt;name&gt;</code>: 建立新的 session with 新的名稱 (加上 <code>-d</code> 直接進入 detached mode)</li>
<li><code>tmux ls</code>: 列出目前有的 session</li>
<li><code>tmux at</code>: attatch 到 detached 的 session</li>
<li><code>tmux a -t &lt;name&gt;</code>: attatch 到指定的 session</li>
<li><code>tmux kill-session -t &lt;name&gt;</code> 移除指定的 session</li>
<li><code>tmux rename-session -t &lt;name&gt; &lt;new_name&gt;</code>: 更改 session 名稱</li>
<li><code>tmux kill-session -t &lt;name&gt;</code>: 刪除 session</li>
</ul>


<h1>tmux 指令</h1>

<ul>
<li><code>&lt;prefix&gt; + d</code>: detached</li>
<li><code>&lt;prefix&gt; + a</code>: attatch</li>
<li><code>&lt;prefix&gt; + "</code>: 水平分割</li>
<li><code>&lt;prefix&gt; + %</code>: 垂直分割</li>
<li><code>&lt;prefix&gt; + x</code>: 關閉 pane</li>
<li><code>&lt;prefix&gt; + &lt;方向鍵&gt;</code>: 移至其他 pane</li>
<li><code>&lt;prefix&gt; + &lt;Space&gt;</code>: 切換佈局</li>
<li><code>&lt;prefix&gt; + c</code>: 建立新的 window (* 表示目前的 window)</li>
<li><code>&lt;prefix&gt; + n</code>: 移動至下一個 window</li>
<li><code>&lt;prefix&gt; + p</code>: 移動至上一個 window</li>
<li><code>&lt;prefix&gt; + s</code>: 列出目前有的 session 並可選擇</li>
<li><code>&lt;prefix&gt; + w</code>: 列出目前有的 window 並可選擇</li>
</ul>


<h1>Reference</h1>

<ul>
<li><a href="https://github.com/tmux/tmux">GitHub - tmux/tmux: tmux source code</a></li>
<li><a href="https://larrylu.blog/tmux-33a24e595fbc">終端機 session 管理神器</a></li>
<li><a href="https://5xruby.tw/posts/tmux/">tmux ，不只是 terminal multiplexer</a></li>
<li><a href="https://andyyou.github.io/2017/11/27/tmux-notes/">tmux 快速入門筆記 | DEVLOG of andyyou</a></li>
<li><a href="https://medium.com/@laudaihe/%E5%BE%9E0%E9%96%8B%E5%A7%8B%E7%9A%84-tmux-%E6%95%99%E5%AD%B8-%E4%B8%80-717bd668c729">從0開始的 Tmux 教學 (一)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim Basic]]></title>
    <link href="https://mgleon08.github.io/blog/2019/08/29/vim-basic/"/>
    <updated>2019-08-29T00:25:52+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/08/29/vim-basic</id>
    <content type="html"><![CDATA[<!-- more -->


<p>最近常在遠端使用，逼得一定要用 vim，也趁這個機會來讓自己對 vim 熟一點~</p>

<h3>命令的格式如下，預設 number 是 1</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="n">number</span><span class="o">]</span> <span class="o">[</span><span class="n">command</span><span class="o">]</span> <span class="n">object</span> <span class="err">或者</span> <span class="o">[</span><span class="n">command</span><span class="o">]</span> <span class="o">[</span><span class="n">number</span><span class="o">]</span> <span class="n">object</span>
</span></code></pre></td></tr></table></div></figure>


<h3>INSEART 模式</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">i</span> <span class="c1"># 在游標前開始進入插入模式</span>
</span><span class='line'><span class="n">I</span> <span class="c1"># 在行首進入插入模式</span>
</span><span class='line'><span class="n">a</span> <span class="c1"># 在游標後進入插入模式</span>
</span><span class='line'><span class="n">A</span> <span class="c1"># 在行尾進入插入模式</span>
</span><span class='line'><span class="n">o</span> <span class="c1"># 將在光標的下方打開新的一行並進入插入模式</span>
</span><span class='line'><span class="n">O</span> <span class="c1"># 將在光標的上方打開新的一行並進入插入模式</span>
</span></code></pre></td></tr></table></div></figure>


<h3>位置</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">w</span>  <span class="c1"># 從當前光標當前位置直到單字/單詞末尾，包括空格。</span>
</span><span class='line'><span class="n">e</span>  <span class="c1"># 從當前光標當前位置直到單字/單詞末尾，但是 *不* 包括空格。</span>
</span><span class='line'><span class="err">$</span>  <span class="c1"># 從當前光標當前位置直到當前行末。</span>
</span><span class='line'><span class="mi">0</span>  <span class="c1"># 從當前光標當前位置直到當前行首。</span>
</span></code></pre></td></tr></table></div></figure>


<h3>更改類</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">c</span> <span class="c1"># 改變一個單字/單詞的部分或者全部</span>
</span></code></pre></td></tr></table></div></figure>


<h3>刪除類</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">x</span>  <span class="c1"># 刪除光標字</span>
</span><span class='line'><span class="n">d</span>  <span class="c1"># 刪除</span>
</span><span class='line'><span class="n">dw</span> <span class="c1"># 光標處刪除至一個單字/單詞的末尾 </span>
</span><span class='line'><span class="n">dd</span> <span class="c1"># 刪除整一個當前行</span>
</span><span class='line'><span class="n">d</span><span class="err">$</span> <span class="c1"># 從當前光標刪除到行末</span>
</span></code></pre></td></tr></table></div></figure>


<h3>撤消類</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">u</span>  <span class="c1"># 撤消最後執行的命令</span>
</span><span class='line'><span class="n">U</span>  <span class="c1"># 欲撤消在一行中所做的改動</span>
</span><span class='line'><span class="no">CTRL</span><span class="o">-</span><span class="n">R</span> <span class="c1"># 欲撤消以前的撤消命令，恢復以前的操作結果</span>
</span></code></pre></td></tr></table></div></figure>


<h3>置入類</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span>  <span class="c1"># 將最後一次刪除的內容置入光標之後</span>
</span></code></pre></td></tr></table></div></figure>


<h3>替換類</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">r</span> <span class="o">[</span><span class="n">word</span><span class="o">]</span> <span class="c1"># 輸入 r 和一個字符替換光標所在位置的字符</span>
</span><span class='line'><span class="n">R</span> <span class="c1"># 可連續替換多個字符</span>
</span></code></pre></td></tr></table></div></figure>


<h3>搜索類</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/ [word] # 查找字符串</span>
</span><span class='line'><span class="sr">? [word] # 逆向查找字符串</span>
</span><span class='line'><span class="sr">n # 查找同上一次的字符串</span>
</span><span class='line'><span class="sr">N # 向相反方向查找同上一次的字</span>
</span></code></pre></td></tr></table></div></figure>


<h3>定位</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gg</span> <span class="c1"># 跳至第一行</span>
</span><span class='line'><span class="n">G</span> <span class="c1"># 跳至最後一行。</span>
</span><span class='line'><span class="o">[</span><span class="err">行號</span><span class="o">]</span> <span class="n">G</span> <span class="c1"># 直接跳到某一行</span>
</span><span class='line'><span class="n">H</span> <span class="c1"># 跳至視窗頂端</span>
</span><span class='line'><span class="n">M</span> <span class="c1"># 跳至視窗中間</span>
</span><span class='line'><span class="n">L</span> <span class="c1"># 跳至視窗底端</span>
</span></code></pre></td></tr></table></div></figure>


<h3>配對括號的查找</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">% # </span><span class="err">可以查找配對的括號</span> <span class="p">)</span><span class="err">、</span><span class="o">]</span><span class="err">、</span><span class="p">}</span><span class="err">。</span><span class="o">**</span><span class="err">，再次按</span> <span class="o">%</span> <span class="err">就可以跳回配對的第一個括號處。</span>
</span></code></pre></td></tr></table></div></figure>


<h3>修正錯誤</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">:s</span><span class="o">/</span><span class="n">old</span><span class="o">/</span><span class="kp">new</span> <span class="c1"># 在一行內替換頭一個字符串 old 為新的字符串 new </span>
</span><span class='line'><span class="ss">:s</span><span class="o">/</span><span class="n">old</span><span class="o">/</span><span class="kp">new</span><span class="o">/</span><span class="n">g</span> <span class="c1"># 在一行內替換所有的字符串 old 為新的字符串 new </span>
</span><span class='line'><span class="ss">:%</span><span class="n">s</span><span class="o">/</span><span class="n">old</span><span class="o">/</span><span class="kp">new</span><span class="o">/</span><span class="n">g</span> <span class="c1"># 在文件內替換所有的字符串 old 為新的字符串 new，請輸入 </span>
</span><span class='line'><span class="ss">:%</span><span class="n">s</span><span class="o">/</span><span class="n">old</span><span class="o">/</span><span class="kp">new</span><span class="o">/</span><span class="n">gc</span> <span class="c1"># 進行全文替換時詢問用戶確認每個替換需添加 c 選項，請輸入 </span>
</span></code></pre></td></tr></table></div></figure>


<h3>VIM 內執行外部命令的方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">:</span><span class="o">!</span> <span class="o">[</span><span class="n">command</span><span class="o">]</span> <span class="c1"># 輸入一個外部命令可以執行該外部命令。</span>
</span><span class='line'><span class="p">:</span><span class="o">!</span><span class="n">dir</span> <span class="c1"># 用于顯示當前目錄的內容。</span>
</span><span class='line'><span class="p">:</span><span class="o">!</span><span class="n">rm</span> <span class="no">FILENAME</span> <span class="c1">#用于刪除名為 FILENAME 的文件。</span>
</span></code></pre></td></tr></table></div></figure>


<h3>設定類</h3>

<p>安裝</p>

<ul>
<li><a href="https://github.com/itchyny/lightline.vim">lightline.vim</a></li>
<li><a href="https://github.com/altercation/vim-colors-solarized">vim-colors-solarized</a></li>
</ul>


<p>新增一個 <code>~/.vimrc</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot; Solarized Dark 記得要先安裝</span>
</span><span class='line'><span class="s2">syntax enable</span>
</span><span class='line'><span class="s2">set t_Co=256</span>
</span><span class='line'><span class="s2">&quot;</span> <span class="n">let</span> <span class="ss">g</span><span class="p">:</span><span class="n">solarized_termtrans</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="n">let</span> <span class="ss">g</span><span class="p">:</span><span class="n">solarized_termcolors</span><span class="o">=</span><span class="mi">256</span>
</span><span class='line'><span class="s2">&quot; 上色模式-針對亮背景上色，預設為亮背景(白色等)上色，但是終端機的初始背景色為深紫色，會出現文字失蹤 ( 例如註解為深藍色 ) 的情況。將這一行換成 :set bg=dark 即可。</span>
</span><span class='line'><span class="s2">set background=dark</span>
</span><span class='line'><span class="s2">colorscheme solarized</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> <span class="err">忽略大小寫</span> <span class="no">Ignore</span> <span class="no">Case</span>
</span><span class='line'><span class="ss">:set</span> <span class="n">ic</span>
</span><span class='line'><span class="s2">&quot; 高亮度搜尋 high light search</span>
</span><span class='line'><span class="s2">:set hlsearch</span>
</span><span class='line'><span class="s2">&quot;</span> <span class="err">在輸入搜尋樣本的期間就會開始進行搜尋</span>
</span><span class='line'><span class="ss">:set</span> <span class="n">incsearch</span>
</span><span class='line'><span class="s2">&quot; 顯示右下角的一些狀態列說明</span>
</span><span class='line'><span class="s2">:set ruler</span>
</span><span class='line'><span class="s2">&quot;</span> <span class="err">顯示行號：對於</span> <span class="n">debug</span> <span class="err">相當有幫助</span><span class="o">!</span> <span class="p">(</span><span class="err">加上</span> <span class="n">run</span> <span class="err">數字會跟著跑</span><span class="p">)</span>
</span><span class='line'><span class="ss">:set</span> <span class="n">nu</span> <span class="n">rnu</span>
</span><span class='line'><span class="s2">&quot; 自動對齊縮排：如果上一行有兩個 tab 的寬度，按 enter 繼續編輯下一行時會自動保留兩個 tab 鍵的寬度。</span>
</span><span class='line'><span class="s2">:set ai</span>
</span><span class='line'><span class="s2">&quot;</span> <span class="err">光標底線：光標所在的那一行會有底線，幫助尋找光標位置</span>
</span><span class='line'><span class="ss">:set</span> <span class="n">cursorline</span>
</span><span class='line'><span class="s2">&quot; 縮排間隔數 ( 預設為 8 個空白對齊 )，也就是說按一次 tab 鍵，游標會自動跳 4 格空白字元的寬度。雖有多個空格但實際上只有一個 tab 字元。注意：也就是說，在其他環境下，看到 tab 字元，依舊是 8 個空白寬</span>
</span><span class='line'><span class="s2">:set tabstop=4</span>
</span><span class='line'><span class="s2">&quot;</span> <span class="err">自動縮排對齊間隔數：向右或向左一個縮排的寬度</span>
</span><span class='line'><span class="ss">:set</span> <span class="n">shiftwidth</span><span class="o">=</span><span class="mi">4</span>
</span><span class='line'><span class="s2">&quot; vim底下有一個視窗，用以顯示狀態</span>
</span><span class='line'><span class="s2">:set laststatus=2</span>
</span><span class='line'><span class="s2">&quot;</span> <span class="err">有用</span> <span class="n">lightline</span> <span class="err">要加這行</span>
</span><span class='line'><span class="ss">:set</span> <span class="n">noshowmode</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Reference</h1>

<ul>
<li><a href="https://medium.com/@huntie/10-essential-vim-plugins-for-2018-39957190b7a9">10 essential Vim plugins for 2018</a></li>
<li><a href="https://vim.rtorr.com/">vim cheatsheet</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript - localStorage, sessionStorage, Location, Window, Date, Destructuring, Module]]></title>
    <link href="https://mgleon08.github.io/blog/2019/07/31/javascript-other/"/>
    <updated>2019-07-31T12:32:53+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/07/31/javascript-other</id>
    <content type="html"><![CDATA[<!-- more-->


<ul>
<li><a href="#localStorage">localStorage</a></li>
<li><a href="#sessionStorage">sessionStorage</a></li>
<li><a href="#location">location</a></li>
<li><a href="#window">Window</a></li>
<li><a href="#date">Date</a></li>
<li><a href="#destructuring">解構賦值 Destructuring</a></li>
<li><a href="#module">Module</a></li>
</ul>


<h1><span id="localStorage"> localStorage </span></h1>

<ul>
<li>優點：存放不會消失，不需擔心頁面關閉/重整/新開分頁等問題</li>
<li>缺點：因為永久存放(除非user手動清除)，必須加上時效性自行判斷，或特殊操作時要將其手動清除</li>
</ul>


<p><code>localStorage</code> 只能存 string</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">,</span> <span class="s1">&#39;bar&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">))</span>
</span><span class='line'><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">localStorage</span><span class="p">.</span><span class="nx">clear</span><span class="p">()</span> <span class="c1">// delete all</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果要存 <code>array</code>, <code>object</code> 必須先轉成 <code>string</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">userJSON</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="nx">userJSON</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">userString</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s1">&#39;user&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">userParse</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">userString</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">userParse</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span> <span class="nx">and</span> <span class="nx">$</span><span class="p">{</span><span class="nx">userParse</span><span class="p">.</span><span class="nx">age</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage">localStorage</a></li>
</ul>


<h1><span id="sessionStorage"> sessionStorage </span></h1>

<ul>
<li>優點：頁籤開著時會一直存在，重新整理也不會消失，頁籤關閉時會自動銷毀被儲存的資訊</li>
<li>缺點：只存在於當前頁籤，開新分頁並不會被傳遞</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Save data to sessionStorage</span>
</span><span class='line'><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Get saved data from sessionStorage</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Remove saved data from sessionStorage</span>
</span><span class='line'><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Remove all saved data from sessionStorage</span>
</span><span class='line'><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage">sessionStorage</a></li>
</ul>


<h1><span id="location"> location </span></h1>

<p>The Location interface represents the location (URL) of the object it is linked to</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// 轉址到 google</span>
</span><span class='line'><span class="nx">location</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="s1">&#39;http://www.google.com/&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 取得網址後面參數</span>
</span><span class='line'><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Location">Location</a></li>
</ul>


<h1><span id="window"> Window </span></h1>

<p>The Window interface represents a window containing a DOM document</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// 跨頁面同步資料, 透過 listen &#39;storage&#39; 是否改變去做同步</span>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;storage&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Will fire for localStorage changes that come from a different page</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window">window</a></li>
</ul>


<h1><span id="date"> Date </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">dateOne</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s1">&#39;March 1 2017 12:00:00&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">month</span> <span class="o">=</span> <span class="nx">dateOne</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">day</span> <span class="o">=</span> <span class="nx">dateOne</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">year</span> <span class="o">=</span> <span class="nx">dateOne</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">month</span><span class="p">}</span><span class="o">/</span><span class="nx">$</span><span class="p">{</span><span class="nx">day</span><span class="p">}</span><span class="o">/</span><span class="nx">$</span><span class="p">{</span><span class="nx">year</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">date</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s1">&#39;March 1 2017 12:00:00&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">timestamp</span> <span class="o">=</span> <span class="nx">date</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">timestamp</span><span class="p">)</span> <span class="c1">// Will print 1488387600000</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">timestamp</span> <span class="o">=</span> <span class="mi">1488387600000</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">date</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">timestamp</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date">Date</a></li>
<li><a href="https://momentjs.com/">momentjs</a></li>
</ul>


<h1><span id="destructuring"> 解構賦值 Destructuring </span></h1>

<p>透過 mapping 屬性名稱，給予賦值</p>

<p>In Object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">todo</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;ididididididid&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Pay the bills&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">completed</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kr">const</span> <span class="p">{</span> <span class="nx">text</span><span class="o">:</span> <span class="nx">todoText</span><span class="p">,</span> <span class="nx">completed</span><span class="p">,</span> <span class="nx">details</span> <span class="o">=</span> <span class="s1">&#39;No details provided&#39;</span><span class="p">,</span> <span class="p">...</span><span class="nx">others</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">todo</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">todoText</span><span class="p">)</span> <span class="c1">// &quot;Pay the bills&quot;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">completed</span><span class="p">)</span> <span class="c1">// false</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">details</span><span class="p">)</span> <span class="c1">// &quot;No details provided&quot;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">others</span><span class="p">)</span> <span class="c1">// { id: &quot;ididididididid&quot; }</span>
</span></code></pre></td></tr></table></div></figure>


<p>In function arguments</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">todo</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;asdfpoijwermasdf&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Pay the bills&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">completed</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">printTodo</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">text</span><span class="p">,</span> <span class="nx">completed</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">text</span><span class="p">}</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">completed</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">printTodo</span><span class="p">(</span><span class="nx">todo</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>In Array</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">age</span> <span class="o">=</span> <span class="p">[</span><span class="mi">65</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span>
</span><span class='line'><span class="kr">const</span> <span class="p">[</span><span class="nx">firstAge</span><span class="p">,</span> <span class="p">...</span><span class="nx">otherAges</span><span class="p">]</span> <span class="o">=</span> <span class="nx">age</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">firstAge</span><span class="p">)</span> <span class="c1">// 65</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">otherAges</span><span class="p">)</span> <span class="c1">// [0, 13]</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Object</code> 解構是以名稱做對應，<code>Array</code> 則是以順序為對應</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="p">[</span><span class="nx">a</span><span class="p">,</span> <span class="p">,</span> <span class="nx">c</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">c</span><span class="p">)</span> <span class="c1">// 1, 3</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="p">{</span><span class="nx">a</span><span class="p">,</span> <span class="p">,</span><span class="nx">c</span><span class="p">}</span> <span class="o">=</span> <span class="p">{</span><span class="nx">a</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span> <span class="nx">b</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span> <span class="nx">c</span><span class="o">:</span><span class="mi">3</span><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span> <span class="c1">// Error</span>
</span></code></pre></td></tr></table></div></figure>


<p>解構用於提取 json 值時，非常方便</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">foo</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">a</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">b</span><span class="o">:</span> <span class="s1">&#39;bar&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">c</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">d</span><span class="o">:</span> <span class="s1">&#39;hi&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">e</span><span class="o">:</span> <span class="s1">&#39;hello&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="p">{</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">foo</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span><span class="p">)</span>
</span><span class='line'><span class="c1">// 1 &#39;bar&#39; { d: &#39;hi&#39;, e: &#39;hello&#39; }</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment">Destructuring assignment</a></li>
<li><a href="https://pjchender.blogspot.com/2017/01/es6-object-destructuring.html">[筆記] JavaScript ES6 中的物件解構賦值（object destructuring）</a></li>
</ul>


<h1><span id="module"> Module </span></h1>

<h3>Named export</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// utilities.js</span>
</span><span class='line'><span class="kr">export</span> <span class="kr">const</span> <span class="nx">add</span> <span class="o">=</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span>
</span><span class='line'><span class="kr">export</span> <span class="kr">const</span> <span class="nx">subtract</span> <span class="o">=</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// index.js</span>
</span><span class='line'><span class="kr">import</span> <span class="p">{</span> <span class="nx">add</span><span class="p">,</span> <span class="nx">subtract</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;./utilities&#39;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span> <span class="c1">// 33</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">subtract</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span> <span class="c1">//  31</span>
</span></code></pre></td></tr></table></div></figure>


<h3>default export</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// utilities.js</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">add</span> <span class="o">=</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">subtract</span> <span class="o">=</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">square</span> <span class="o">=</span> <span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span>
</span><span class='line'><span class="kr">export</span> <span class="p">{</span> <span class="nx">add</span><span class="p">,</span> <span class="nx">subtract</span><span class="p">,</span> <span class="nx">square</span> <span class="nx">as</span> <span class="k">default</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// index.js</span>
</span><span class='line'><span class="kr">import</span> <span class="nx">otherSquare</span><span class="p">,</span> <span class="p">{</span> <span class="nx">add</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;./utilities&#39;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span> <span class="c1">// 33</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">otherSquare</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span> <span class="c1">// 100</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import">import</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export">export</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript - HTTP Request, Promise, Async/await]]></title>
    <link href="https://mgleon08.github.io/blog/2019/07/30/javascript-http-request/"/>
    <updated>2019-07-30T12:32:23+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/07/30/javascript-http-request</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><a href="#XMLHttpRequest">XMLHttpRequest</a></li>
<li><a href="#promise">Promise</a></li>
<li><a href="#async_await">Async/Await</a></li>
</ul>


<p>Asynchronous(異步/非同步) vs. Synchronous(同步)</p>

<ul>
<li><code>Asynchronous</code>: 不需等待，可以繼續做別的事</li>
<li><code>Synchronous</code>: 必須等待事情完成，才能繼續做別的事</li>
</ul>


<h1><span id="XMLHttpRequest"> XMLHttpRequest </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">()</span>
</span><span class='line'><span class="nx">request</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;readystatechange&#39;</span><span class="p">,</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 4 代表已 request 完成，已經有 response</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'><span class="nx">request</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;http://puzzle.mead.io/puzzle&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">request</span><span class="p">.</span><span class="nx">send</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>透過 <code>callback function</code> 可以當 response 回來時，在執行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">getPuzzle</span> <span class="o">=</span> <span class="nx">callback</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">const</span> <span class="nx">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">request</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;readystatechange&#39;</span><span class="p">,</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">status</span> <span class="o">===</span> <span class="mi">200</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kr">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">callback</span><span class="p">(</span><span class="kc">undefined</span><span class="p">,</span> <span class="nx">data</span><span class="p">.</span><span class="nx">puzzle</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">callback</span><span class="p">(</span><span class="s1">&#39;An error has taken place&#39;</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="nx">request</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;http://puzzle.mead.io/puzzle?wordCount=3&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">request</span><span class="p">.</span><span class="nx">send</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// callback function</span>
</span><span class='line'><span class="nx">getPuzzle</span><span class="p">((</span><span class="nx">error</span><span class="p">,</span> <span class="nx">puzzle</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nb">Error</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">error</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">puzzle</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest">XMLHttpRequest</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Callback_function">Callback function</a></li>
<li><a href="https://medium.com/@hyWang/%E9%9D%9E%E5%90%8C%E6%AD%A5-asynchronous-%E8%88%87%E5%90%8C%E6%AD%A5-synchronous-%E7%9A%84%E5%B7%AE%E7%95%B0-c7f99b9a298a">非同步(Asynchronous)與同步(Synchronous)的差異</a></li>
</ul>


<h1><span id="promise"> Promise </span></h1>

<p>簡單的來說，<code>Promise</code> 主要用來處理非同步狀態(async), 就是承諾當任務完成時，通知下一個任務可以開始，不會像上面一樣要一直寫 <code>callback</code> 導致一些 <code>callback hell</code></p>

<p>Promise 的生命週期</p>

<ul>
<li><code>pending</code> - 等待中的初始狀態</li>
<li><code>fulfillment</code> - 完成</li>
<li><code>rejecttion</code> - 失敗</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Callback</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">getDataCallBack</span> <span class="o">=</span> <span class="nx">callback</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">callback</span><span class="p">(</span><span class="kc">undefined</span><span class="p">,</span> <span class="s1">&#39;This is the callback data&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">},</span> <span class="mi">2000</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">getDataCallBack</span><span class="p">((</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Promise</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">myPromise</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 成功做什麼事</span>
</span><span class='line'>    <span class="nx">resolve</span><span class="p">(</span><span class="s1">&#39;This is the promise resolve&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">// 失敗做什麼事</span>
</span><span class='line'>    <span class="nx">reject</span><span class="p">(</span><span class="s1">&#39;This is the promise reject&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">},</span> <span class="mi">2000</span><span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">myPromise</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span>
</span><span class='line'>  <span class="nx">data</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Promise chain</h3>

<p>用 <code>catch</code> 取代 error handler <code>err =&gt; {}</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">getDataPromise</span> <span class="o">=</span> <span class="nx">num</span> <span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">new</span> <span class="nx">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">typeof</span> <span class="nx">num</span> <span class="o">===</span> <span class="s1">&#39;number&#39;</span> <span class="o">?</span> <span class="nx">resolve</span><span class="p">(</span><span class="nx">num</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span> <span class="o">:</span> <span class="nx">reject</span><span class="p">(</span><span class="s1">&#39;Number must be provided&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">},</span> <span class="mi">2000</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">getDataPromise</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">getDataPromise</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="c1">// 40</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>      <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// better way</span>
</span><span class='line'><span class="nx">getDataPromise</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">getDataPromise</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="c1">// 40</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>也有一些非同步模式的變體可以使用</p>

<ul>
<li><code>Promise.all</code>: 等所有都完成再進行下一步</li>
<li><code>Promise.race</code>: 只要一個先完成就進行下一步</li>
</ul>


<h3>fetch</h3>

<p><code>fetch</code> 會回傳 <code>promise object</code>，因此也可以用 <code>then</code> 去接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">fetch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;node-fetch&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">fetch</span><span class="p">(</span><span class="s1">&#39;http://puzzle.mead.io/puzzle&#39;</span><span class="p">,</span> <span class="p">{})</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">status</span> <span class="o">===</span> <span class="mi">200</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Unable to fetch the puzzle&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">puzzle</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a></li>
<li><a href="https://developers.google.com/web/fundamentals/primers/promises">JavaScript Promises: an Introduction</a></li>
<li><a href="https://medium.com/@xyz030206/promise-%E4%BB%8B%E7%B4%B9%E8%88%87%E4%BD%BF%E7%94%A8-66605ef56e34">Promise — 介紹與使用</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Response">Response</a></li>
<li><a href="https://cythilya.github.io/2018/10/31/promise/">你懂 JavaScript 嗎？#24 Promise</a></li>
</ul>


<h1><span id="async_await"> Async/Await </span></h1>

<p><code>async function</code> 也會回傳 Promise 的函式</p>

<ul>
<li><code>async</code>: 定義一個 <code>function</code> 為 <code>async</code></li>
<li><code>await</code>: 等待某一 <code>function</code> return 後再繼續執行，必須包在 <code>async</code> 裡面</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">test</span> <span class="o">=</span> <span class="nx">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{}</span>
</span><span class='line'><span class="nx">test</span><span class="p">()</span> <span class="c1">// Promise {&lt;resolved&gt;: undefined}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">processData</span> <span class="o">=</span> <span class="nx">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// throw new Error(&#39;error&#39;)</span>
</span><span class='line'>  <span class="k">return</span> <span class="s1">&#39;hi&#39;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">processData</span><span class="p">()</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// node need to require</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">fetch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;node-fetch&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">getPuzzle</span> <span class="o">=</span> <span class="nx">async</span> <span class="nx">wordCount</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">const</span> <span class="nx">response</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">fetch</span><span class="p">(</span><span class="err">`</span><span class="nx">http</span><span class="o">:</span><span class="c1">//puzzle.mead.io/puzzle?wordCount=${wordCount}`)</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">status</span> <span class="o">===</span> <span class="mi">200</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">()</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">data</span><span class="p">.</span><span class="nx">puzzle</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Unable to get puzzle&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">getPuzzle</span><span class="p">(</span><span class="s1">&#39;2&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">puzzle</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">puzzle</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nb">Error</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">err</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function">async</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await">await</a></li>
<li><a href="https://noob.tw/js-async/">我要學會 JS(三)：callback、Promise 和 async/await 那些事兒</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript - Functions, Object, Classes, This, Closures, Array]]></title>
    <link href="https://mgleon08.github.io/blog/2019/07/29/javascript-functions-object/"/>
    <updated>2019-07-29T12:31:12+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/07/29/javascript-functions-object</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><a href="#default">Default function parameters</a></li>
<li><a href="#IIFE">立即函示 IIFE(Immediately Invoked Function Expression)</a></li>
<li><a href="#arrow">Arrow Function</a></li>
<li><a href="#this">this 識別字（this Identifier)</a></li>
<li><a href="#closures">Closures 閉包</a></li>
<li><a href="#object">Object</a></li>
<li><a href="#methods">Methods</a></li>
<li><a href="#prototype">Prototype Object</a></li>
<li><a href="#array">Array</a></li>
<li><a href="#constructor">Constructor</a></li>
<li><a href="#classes">Classes</a></li>
</ul>


<h1><span id="default"> Default function parameters </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">getScoreText</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39;Anonymous&#39;</span><span class="p">,</span> <span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">name</span><span class="p">}</span> <span class="nx">Score</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">score</span><span class="p">}</span><span class="err">`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">text</span> <span class="o">=</span> <span class="nx">getScoreText</span><span class="p">(</span><span class="kc">undefined</span><span class="p">,</span> <span class="mi">11</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span> <span class="c1">// Anonymous Score: 11</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters">Default parameters</a></li>
</ul>


<h1><span id="IIFE"> 立即函示 IIFE(Immediately Invoked Function Expression) </span></h1>

<p>可立刻執行的函示，好處不會污染到 global，在函示後面加上 <code>()</code> 即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="c1">// 3</span>
</span><span class='line'><span class="p">})()</span>
</span><span class='line'>
</span><span class='line'><span class="nx">a</span> <span class="c1">// a is not defined</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="arrow"> Arrow Function <span></h1>

<p>ES6 新增的寫法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">squareLong1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">num</span> <span class="o">*</span> <span class="nx">num</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">squareLong1</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">squareLong2</span> <span class="o">=</span> <span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">num</span> <span class="o">*</span> <span class="nx">num</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">squareLong2</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">squareLong3</span> <span class="o">=</span> <span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">num</span> <span class="o">*</span> <span class="nx">num</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">squareLong3</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Arrow Function don&rsquo;t bind <code>arguments</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">add1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add1</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span> <span class="c1">// 3</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">add2</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add2</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// [object Object]function require(path) {</span>
</span><span class='line'><span class="c1">//     try {</span>
</span><span class='line'><span class="c1">//       exports.requireDepth += 1;</span>
</span><span class='line'><span class="c1">//       return mod.require(path);</span>
</span><span class='line'><span class="c1">//     } finally {</span>
</span><span class='line'><span class="c1">//       exports.requireDepth -= 1;</span>
</span><span class='line'><span class="c1">//     }</span>
</span><span class='line'><span class="c1">//   }</span>
</span></code></pre></td></tr></table></div></figure>


<p>Arrow Function don&rsquo;t bind <code>this</code></p>

<p>因為 <code>arrow function</code> 沒有綁定 <code>this</code> 因此會 <code>undefined</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// arrow function</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">pet1</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Hal&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">getGreeting</span><span class="o">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="err">`</span><span class="nx">Hello</span> <span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="o">!</span><span class="err">`</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">pet1</span><span class="p">.</span><span class="nx">getGreeting</span><span class="p">())</span> <span class="c1">// Hello undefined!</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 原本寫法</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">pet2</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Hal&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">getGreeting</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="err">`</span><span class="nx">Hello</span> <span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="o">!</span><span class="err">`</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">pet2</span><span class="p">.</span><span class="nx">getGreeting</span><span class="p">())</span> <span class="c1">// Hello Hal!</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 原本寫法縮寫</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">pet3</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Hal&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">getGreeting</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="err">`</span><span class="nx">Hello</span> <span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="o">!</span><span class="err">`</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">pet3</span><span class="p">.</span><span class="nx">getGreeting</span><span class="p">())</span> <span class="c1">// Hello Hal!</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions">Arrow_functions</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Shorter_functions">Shorter_functions</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions#Description">ES6 Method definitions</a></li>
</ul>


<h1><span id="constructor"> Constructor <span></h1>

<p>constructor 的用法就是 <code>function</code> 搭配 <code>new</code> 關鍵字：</p>

<p>可以透過 <code>Constructor function</code> 達成 <code>Object-oriented programming (OOP)</code>，就像是 <code>class</code> 那樣</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">Person</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s1">&#39;Leon&#39;</span><span class="p">,</span> <span class="s1">&#39;Ji&#39;</span><span class="p">,</span> <span class="mi">27</span><span class="p">)</span>
</span><span class='line'><span class="c1">// me.[[prototype]] = Person.prototype 實際上會做此連結 hidden internal property</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">me</span><span class="p">)</span> <span class="c1">// Person {firstName: &quot;Leon&quot;, lastName: &quot;Ji&quot;, age: 27}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>建議使用大寫開頭</li>
<li>透過 <code>new</code> 建立新的 instance</li>
</ul>


<h3>new 會進行以下操作</h3>

<ul>
<li>建立一個物件（<code>{}</code>)</li>
<li>將這個新物件的 constructor 屬性設為另一個物件(<code>Person</code>)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">me</span><span class="p">.</span><span class="nx">constructor</span> <span class="o">==</span> <span class="nx">Person</span> <span class="c1">// true</span>
</span><span class='line'><span class="nx">me</span> <span class="k">instanceof</span> <span class="nx">Person</span> <span class="c1">// true</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>讓新物件繼承 <code>Person.prototype</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">Person</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">say</span> <span class="o">=</span> <span class="s1">&#39;hi&#39;</span>
</span><span class='line'><span class="nx">me</span><span class="p">.</span><span class="nx">say</span> <span class="c1">// hi</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>如果該函式沒有返回物件，則返回 this</li>
</ul>


<p>這裡的 <code>this</code> 就是 <code>Person</code></p>

<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new">new</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Using_a_constructor_function">Using a constructor function</a></li>
<li><a href="https://andyyou.github.io/2016/09/22/js-contrstructors-prototypes-new/">筆記 Javascript 的 constructors, prototypes, new 關鍵字</a></li>
</ul>


<h1><span id="classes"> Classes <span></h1>

<p>後來出的新語法 <code>class</code>，讓原本的 <code>function</code> 寫法更乾淨，更像 OOP 一點</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">class</span> <span class="nx">Person</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">likes</span> <span class="o">=</span> <span class="p">[])</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">likes</span> <span class="o">=</span> <span class="nx">likes</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">getBio</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">let</span> <span class="nx">bio</span> <span class="o">=</span> <span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="p">}</span> <span class="nx">is</span> <span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="p">}.</span><span class="err">`</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">likes</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">like</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">bio</span> <span class="o">+=</span> <span class="err">`</span> <span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="p">}</span> <span class="nx">likes</span> <span class="nx">$</span><span class="p">{</span><span class="nx">like</span><span class="p">}.</span><span class="err">`</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">bio</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">setName</span><span class="p">(</span><span class="nx">fullName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">fullName</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">name</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">name</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s1">&#39;Leon&#39;</span><span class="p">,</span> <span class="s1">&#39;Ji&#39;</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Teaching&#39;</span><span class="p">,</span> <span class="s1">&#39;Biking&#39;</span><span class="p">])</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">me</span><span class="p">.</span><span class="nx">getBio</span><span class="p">())</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s1">&#39;Clancey&#39;</span><span class="p">,</span> <span class="s1">&#39;Turner&#39;</span><span class="p">,</span> <span class="mi">51</span><span class="p">)</span>
</span><span class='line'><span class="nx">person2</span><span class="p">.</span><span class="nx">setName</span><span class="p">(</span><span class="s1">&#39;Leon Ji&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">getBio</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Leon is 27. Leon likes Teaching. Leon likes Biking.</span>
</span><span class='line'><span class="c1">// Leon is 51.</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Subclass</h3>

<p>可以在建立一個 class，去繼承其他的 class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// stu -&gt; Student.prototype -&gt; Person.prototype -&gt; Object.prototype -&gt; null</span>
</span><span class='line'>
</span><span class='line'><span class="kr">class</span> <span class="nx">Student</span> <span class="kr">extends</span> <span class="nx">Person</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">constructor</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">grade</span><span class="p">,</span> <span class="nx">likes</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// super 用於 call 上層的 constructor</span>
</span><span class='line'>    <span class="kr">super</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">likes</span><span class="p">)</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">grade</span> <span class="o">=</span> <span class="nx">grade</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">updateGrade</span><span class="p">(</span><span class="nx">change</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">grade</span> <span class="o">+=</span> <span class="nx">change</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">getBio</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">status</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">grade</span> <span class="o">&gt;=</span> <span class="mi">70</span> <span class="o">?</span> <span class="s1">&#39;passing&#39;</span> <span class="o">:</span> <span class="s1">&#39;failing&#39;</span>
</span><span class='line'>    <span class="k">return</span> <span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="p">}</span> <span class="nx">is</span> <span class="nx">$</span><span class="p">{</span><span class="nx">status</span><span class="p">}</span> <span class="nx">the</span> <span class="kr">class</span><span class="p">.</span><span class="err">`</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">stu</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Student</span><span class="p">(</span><span class="s1">&#39;Leon&#39;</span><span class="p">,</span> <span class="s1">&#39;Ji&#39;</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Teaching&#39;</span><span class="p">,</span> <span class="s1">&#39;Biking&#39;</span><span class="p">])</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">stu</span><span class="p">.</span><span class="nx">getBio</span><span class="p">())</span>
</span><span class='line'><span class="nx">student</span><span class="p">.</span><span class="nx">updateGrade</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">stu</span><span class="p">.</span><span class="nx">getBio</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Leon is failing the class.</span>
</span><span class='line'><span class="c1">// Leon is passing the class.</span>
</span></code></pre></td></tr></table></div></figure>


<h3>getter &amp; setter</h3>

<ul>
<li>The <code>get</code> syntax binds an object property to a function that will be called when that property is looked up.</li>
<li>The <code>set</code> syntax binds an object property to a function to be called when there is an attempt to set that property.</li>
</ul>


<p>執行時，就跟變數一樣，不需加上 <code>()</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">human</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">firstName</span><span class="o">:</span> <span class="s1">&#39;Leon&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">lastName</span><span class="o">:</span> <span class="s1">&#39;Ji&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">get</span> <span class="nx">name</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="p">}</span> <span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">}</span><span class="err">`</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">set</span> <span class="nx">name</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">names</span> <span class="o">=</span> <span class="nx">name</span><span class="p">.</span><span class="nx">trim</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">names</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">names</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">human</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39; Leon Ji &#39;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">human</span><span class="p">.</span><span class="nx">firstName</span><span class="p">)</span> <span class="c1">// Leon</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">human</span><span class="p">.</span><span class="nx">lastName</span><span class="p">)</span> <span class="c1">// Ji</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes">Classes</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/extends">extends</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get">getter</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set">setter</a></li>
</ul>


<h1><span id="this"> this 識別字（this Identifier) <span></h1>

<p>this 是 function 執行時所屬的物件，而 this 是在執行時期做繫結，其值和函式在哪裡被呼叫（call-site）有關。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">foo</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">bar</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">bar</span> <span class="o">=</span> <span class="s1">&#39;global&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">obj1</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">bar</span><span class="o">:</span> <span class="s1">&#39;obj1&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">foo</span><span class="o">:</span> <span class="nx">foo</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">obj2</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">bar</span><span class="o">:</span> <span class="s1">&#39;obj2&#39;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">foo</span><span class="p">()</span> <span class="c1">// &#39;global&#39;</span>
</span><span class='line'><span class="nx">obj1</span><span class="p">.</span><span class="nx">foo</span><span class="p">()</span> <span class="c1">// &#39;obj1&#39;</span>
</span><span class='line'><span class="nx">foo</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">obj2</span><span class="p">)</span> <span class="c1">// &#39;obj2&#39;</span>
</span><span class='line'><span class="k">new</span> <span class="nx">foo</span><span class="p">()</span> <span class="c1">// undefined</span>
</span></code></pre></td></tr></table></div></figure>


<p>匹配的優先順序由高至低排列</p>

<ol>
<li>new 繫結：<code>this</code> 會指向 <code>new</code> 出來的物件。

<ul>
<li><code>new foo()</code> sets <code>this</code> to a brand new empty object.</li>
</ul>
</li>
<li>明確繫結：使用 <code>call</code>、<code>apply</code>、<code>bind</code>，明確指出要繫結給 <code>this</code> 的物件。

<ul>
<li><code>foo.call(obj2)</code> sets <code>this</code> to the <code>obj2</code> object.</li>
</ul>
</li>
<li>隱含繫結：當函式為物件的方法（method）時，在執行階段 <code>this</code> 就會被繫結至該物件。

<ul>
<li><code>obj1.foo()</code> sets <code>this</code> to the <code>obj1</code> object.</li>
</ul>
</li>
<li><p>預設繫結：當其他規則都不適用時，意即沒有使用 <code>call</code>、<code>apply</code>、<code>bind</code> 或不屬於任何物件的 method，就套用預設繫結，在非嚴格模式下，瀏覽器環境 <code>this</code> 的值就是預設值全域物件 window，而在嚴格模式下，<code>this</code> 的值就是 <code>undefined</code>。</p></li>
<li><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this">this</a></p></li>
<li><a href="https://cythilya.github.io/2018/10/10/intro-2/">你懂 JavaScript 嗎？#3 暖身 (๑•̀ㅂ•́)و✧ Part 2 - 變數、嚴格模式、IIFEs、閉包、模組、this、原型、Polyfill 與 Transpiler</a></li>
<li><a href="https://github.com/getify/You-Dont-Know-JS/blob/master/up%20%26%20going/ch2.md#this-identifier">this-identifier</a></li>
</ol>


<h1><span id="closures"> Closures 閉包 <span></h1>

<blockquote><p>A closure is the combination of a function and the lexical environment within which that function was declared.</p></blockquote>

<p>閉包 (Closure) 是一種特殊的函式，他能夠存取被宣告當下的環境中的變數。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">createCounter</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">count</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">counter</span> <span class="o">=</span> <span class="nx">createCounter</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">counter</span><span class="p">())</span> <span class="c1">// 0</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// return 一個 function，baseTip 已被存取</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">createTipper</span> <span class="o">=</span> <span class="nx">baseTip</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">amount</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">baseTip</span> <span class="o">*</span> <span class="nx">amount</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">tip20</span> <span class="o">=</span> <span class="nx">createTipper</span><span class="p">(</span><span class="mf">0.2</span><span class="p">)</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">tip30</span> <span class="o">=</span> <span class="nx">createTipper</span><span class="p">(</span><span class="mf">0.3</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">tip20</span><span class="p">(</span><span class="mi">100</span><span class="p">))</span> <span class="c1">// 20</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">tip20</span><span class="p">(</span><span class="mi">80</span><span class="p">))</span>  <span class="c1">// 16</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">tip30</span><span class="p">(</span><span class="mi">100</span><span class="p">))</span> <span class="c1">// 30</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">echo</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">test</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">200</span>
</span><span class='line'>  <span class="nx">echo</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">test</span><span class="p">()</span> <span class="c1">// 100</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures">Closures</a></li>
<li><a href="http://shubo.io/javascript-closure/">[教學] 史上最簡單！3分鐘看懂JavaScript閉包 (Closure)</a></li>
<li><a href="https://blog.techbridge.cc/2018/12/08/javascript-closure/">所有的函式都是閉包：談 JS 中的作用域與 Closure</a></li>
</ul>


<h1><span id="object"> Object <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">myBook</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;1984&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">author</span><span class="o">:</span> <span class="s1">&#39;George Orwell&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">pageCount</span><span class="o">:</span> <span class="mi">326</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">myBook</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span> <span class="nx">by</span> <span class="nx">$</span><span class="p">{</span><span class="nx">myBook</span><span class="p">.</span><span class="nx">author</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'><span class="nx">myBook</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="s1">&#39;Leon&#39;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">myBook</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a></li>
</ul>


<h1>Object Reference</h1>

<p>output 出相同的值，因為 function 裡的 object 是 reference 到同一個 memory，</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">myAccount</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Leon&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">expenses</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">income</span><span class="o">:</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">addExpense</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">account</span><span class="p">,</span> <span class="nx">amount</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">account</span><span class="p">.</span><span class="nx">expenses</span> <span class="o">=</span> <span class="nx">account</span><span class="p">.</span><span class="nx">expenses</span> <span class="o">+</span> <span class="nx">amount</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">account</span><span class="p">)</span> <span class="c1">// {name: &quot;Leon&quot;, expenses: 2000, income: 0}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">addExpense</span><span class="p">(</span><span class="nx">myAccount</span><span class="p">,</span> <span class="mi">2000</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">myAccount</span><span class="p">)</span> <span class="c1">// {name: &quot;Leon&quot;, expenses: 2000, income: 0}</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是當 assign 一個新的 object 給 account，就會是不一樣的 object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Both logs print differen things</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">myAccount</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Leon&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">expenses</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">income</span><span class="o">:</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">addExpense</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">account</span><span class="p">,</span> <span class="nx">amount</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">account</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="nx">account</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">account</span><span class="p">)</span> <span class="c1">// {age: 1}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">addExpense</span><span class="p">(</span><span class="nx">myAccount</span><span class="p">,</span> <span class="mi">2000</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">myAccount</span><span class="p">)</span> <span class="c1">// {name: &quot;Leon&quot;, expenses: 0, income: 0}</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="methods"> Methods <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">restaurant</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;ASB&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">guestCapacity</span><span class="o">:</span> <span class="mi">75</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">guestCount</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">checkAvailability</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">partySize</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">let</span> <span class="nx">seatsLeft</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">guestCapacity</span> <span class="o">-</span> <span class="k">this</span><span class="p">.</span><span class="nx">guestCount</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">partySize</span> <span class="o">&lt;=</span> <span class="nx">seatsLeft</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">restaurant</span><span class="p">.</span><span class="nx">checkAvailability</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>String methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39;Leon&#39;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">name</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">name</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">())</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">name</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">password</span> <span class="o">=</span> <span class="s1">&#39;abc123asdf098&#39;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">password</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s1">&#39;password&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Number &amp; Math methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="mf">103.941</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">num</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">num</span><span class="p">))</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">num</span><span class="p">))</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">num</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">min</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">max</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">randomNum</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="p">(</span><span class="nx">max</span> <span class="o">-</span> <span class="nx">min</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span> <span class="o">+</span> <span class="nx">min</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">String methods</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">Number methods</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math">Math methods</a></li>
</ul>


<h1><span id="prototype"> Prototype Object <span></h1>

<p>Prototype 可說是物件的一種 fallback 機制，當在此物件找不到指定屬性時，就會透過原型鏈結（prototype link / prototype reference）追溯到其父物件上。</p>

<p>透過 <code>prototype</code> 可以 shared 給每個 <code>instance</code>，因為 <code>instance</code> 都是繼承自 <code>prototype property</code></p>

<p>以下 <code>new</code> 出來的 instance 都繼承自 <code>Person prototype</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">Person</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">likes</span> <span class="o">=</span> <span class="p">[])</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">likes</span> <span class="o">=</span> <span class="nx">likes</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Person</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getBio</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">bio</span> <span class="o">=</span> <span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="p">}</span> <span class="nx">is</span> <span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="p">}.</span><span class="err">`</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">likes</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">like</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">bio</span> <span class="o">+=</span> <span class="err">`</span> <span class="nx">$</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">firstName</span><span class="p">}</span> <span class="nx">likes</span> <span class="nx">$</span><span class="p">{</span><span class="nx">like</span><span class="p">}.</span><span class="err">`</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">bio</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Person</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setName</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">fullName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">const</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">fullName</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">name</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">name</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s1">&#39;Leon&#39;</span><span class="p">,</span> <span class="s1">&#39;Ji&#39;</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Teaching&#39;</span><span class="p">,</span> <span class="s1">&#39;Biking&#39;</span><span class="p">])</span>
</span><span class='line'><span class="c1">// me.[[prototype]] = Person.prototype 實際上會做此連結 hidden internal property</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">me</span><span class="p">.</span><span class="nx">getBio</span><span class="p">())</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s1">&#39;Clancey&#39;</span><span class="p">,</span> <span class="s1">&#39;Turner&#39;</span><span class="p">,</span> <span class="mi">51</span><span class="p">)</span>
</span><span class='line'><span class="nx">person2</span><span class="p">.</span><span class="nx">setName</span><span class="p">(</span><span class="s1">&#39;Leon Ji&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person2</span><span class="p">.</span><span class="nx">getBio</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<p>所有 object 都有 <code>hasOwnProperty</code> 是因爲都繼承自 <code>Object.prototype</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// myObject --&gt; Object.prototype --&gt; null</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">myObject</span> <span class="o">=</span> <span class="p">{}</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">myObject</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s1">&#39;doesNotExist&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 因為 myObject 本身並沒有 hasOwnProperty，而是繼承而來</span>
</span><span class='line'><span class="nx">myObject</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s1">&#39;hasOwnProperty&#39;</span><span class="p">)</span> <span class="c1">// false</span>
</span><span class='line'><span class="c1">// __proto__ 上一層</span>
</span><span class='line'><span class="nx">myObject</span><span class="p">.</span><span class="nx">__proto__</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s1">&#39;hasOwnProperty&#39;</span><span class="p">)</span> <span class="c1">// true</span>
</span></code></pre></td></tr></table></div></figure>


<p>基本型別 Primitives values 的 prototype</p>

<p><code>string</code>, <code>number</code>, <code>boolean</code>, <code>undefined</code>, <code>null</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Array: myArray --&gt; Array.prototype --&gt; Object.prototype --&gt; null</span>
</span><span class='line'><span class="c1">// Function: myFunc --&gt; Function.prototype --&gt; Object.prototype --&gt; null</span>
</span><span class='line'><span class="c1">// String: myString --&gt; String.prototype --&gt; Object.prototype --&gt; null</span>
</span><span class='line'><span class="c1">// Number: myNumber --&gt; Number.prototype --&gt; Object.prototype --&gt; null</span>
</span><span class='line'><span class="c1">// Boolean: myBoolean --&gt; Boolean.prototype --&gt; Object.prototype --&gt; null</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain">Inheritance and the prototype chain</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype">Object prototype</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype">Array.prototype</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype">Function.prototype</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/prototype">String.prototype</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/prototype">Number.prototype</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/prototype">Boolean.prototype</a></li>
</ul>


<h1><span id="array"> Array <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="nx">nums</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
</span><span class='line'><span class="nx">nums</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="c1">// [3, 1, 12]</span>
</span><span class='line'>
</span><span class='line'><span class="nx">nums</span><span class="p">.</span><span class="nx">pop</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="c1">// [3, 1]</span>
</span><span class='line'>
</span><span class='line'><span class="nx">nums</span><span class="p">.</span><span class="nx">shift</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="c1">// [1]</span>
</span><span class='line'>
</span><span class='line'><span class="nx">nums</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="c1">// [1, 2]</span>
</span><span class='line'><span class="nx">nums</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="c1">// [1, 3, 2]</span>
</span><span class='line'><span class="nx">nums</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">99</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="c1">// [1, 99]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>forEach</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">todos</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Order cat food&#39;</span><span class="p">,</span> <span class="s1">&#39;Clean kitchen&#39;</span><span class="p">,</span> <span class="s1">&#39;Buy food&#39;</span><span class="p">,</span> <span class="s1">&#39;Do work&#39;</span><span class="p">,</span> <span class="s1">&#39;Exercise&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="nx">todos</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">todo</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">const</span> <span class="nx">num</span> <span class="o">=</span> <span class="nx">index</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">num</span><span class="p">}.</span> <span class="nx">$</span><span class="p">{</span><span class="nx">todo</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">num</span> <span class="o">&lt;=</span> <span class="nx">todos</span><span class="p">.</span><span class="nx">length</span> <span class="p">;</span> <span class="nx">num</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">num</span><span class="p">}.</span> <span class="nx">$</span><span class="p">{</span><span class="nx">todos</span><span class="p">[</span><span class="nx">num</span><span class="p">]}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>indexOf</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">places</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">]</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">places</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;c&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span> <span class="c1">// 2</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">index2</span> <span class="o">=</span> <span class="nx">places</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;d&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">index2</span><span class="p">)</span> <span class="c1">// -1</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 無法用在 object 因為 {} === {} false，兩個 object 會是不同的 memory</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">testObject</span> <span class="o">=</span> <span class="p">[{}]</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">testObject</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">({}))</span> <span class="c1">// -1</span>
</span></code></pre></td></tr></table></div></figure>


<h3>findIndex</h3>

<p>for object should use <code>findIndex</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">notes</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;My next trip&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">body</span><span class="o">:</span> <span class="s1">&#39;I would like to go to Spain&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Habbits to work on&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">body</span><span class="o">:</span> <span class="s1">&#39;Exercise. Eating a bit better.&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Office modification&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">body</span><span class="o">:</span> <span class="s1">&#39;Get a new seat&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">notes</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">note</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">note</span><span class="p">.</span><span class="nx">title</span> <span class="o">===</span> <span class="s1">&#39;Habbits to work on&#39;</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span> <span class="c1">// 1</span>
</span></code></pre></td></tr></table></div></figure>


<h3>find</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">notes</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;My next trip&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">body</span><span class="o">:</span> <span class="s1">&#39;I would like to go to Spain&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Habbits to work on&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">body</span><span class="o">:</span> <span class="s1">&#39;Exercise. Eating a bit better.&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Office modification&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">body</span><span class="o">:</span> <span class="s1">&#39;Get a new seat&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">findNote</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">notes</span><span class="p">,</span> <span class="nx">noteTitle</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">notes</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">note</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">note</span><span class="p">.</span><span class="nx">title</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span> <span class="o">===</span> <span class="nx">noteTitle</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">note</span> <span class="o">=</span> <span class="nx">findNote</span><span class="p">(</span><span class="nx">notes</span><span class="p">,</span> <span class="s1">&#39;my next trip&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">note</span><span class="p">)</span> <span class="c1">// Will print the first object from our array above</span>
</span></code></pre></td></tr></table></div></figure>


<h3>filter</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;spray&#39;</span><span class="p">,</span> <span class="s1">&#39;limit&#39;</span><span class="p">,</span> <span class="s1">&#39;elite&#39;</span><span class="p">,</span> <span class="s1">&#39;exuberant&#39;</span><span class="p">,</span> <span class="s1">&#39;destruction&#39;</span><span class="p">,</span> <span class="s1">&#39;present&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">words</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">word</span> <span class="o">=&gt;</span> <span class="nx">word</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">6</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</span><span class='line'><span class="c1">// expected output: Array [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">todos</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Order cat food&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">completed</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Clean kitchen&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">completed</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Do work&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">completed</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">getThingsToDo</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">todos</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">todos</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">todo</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">!</span><span class="nx">todo</span><span class="p">.</span><span class="nx">completed</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getThingsToDo</span><span class="p">(</span><span class="nx">todos</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h3>sorting</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">months</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;March&#39;</span><span class="p">,</span> <span class="s1">&#39;Jan&#39;</span><span class="p">,</span> <span class="s1">&#39;Feb&#39;</span><span class="p">,</span> <span class="s1">&#39;Dec&#39;</span><span class="p">]</span>
</span><span class='line'><span class="nx">months</span><span class="p">.</span><span class="nx">sort</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">months</span><span class="p">)</span>
</span><span class='line'><span class="c1">// expected output: Array [&quot;Dec&quot;, &quot;Feb&quot;, &quot;Jan&quot;, &quot;March&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">array1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">100000</span><span class="p">]</span>
</span><span class='line'><span class="nx">array1</span><span class="p">.</span><span class="nx">sort</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">array1</span><span class="p">)</span>
</span><span class='line'><span class="c1">// expected output: Array [1, 100000, 21, 30, 4]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">todos</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Buy food&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">completed</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Do work&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">completed</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;Exercise&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">completed</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">sortTodos</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">todos</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">todos</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">completed</span> <span class="o">&amp;&amp;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">completed</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">completed</span> <span class="o">&amp;&amp;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">completed</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">0</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">sortTodos</span><span class="p">(</span><span class="nx">todos</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">todos</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rest Parameter</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">calculateAverage</span> <span class="o">=</span> <span class="p">(...</span><span class="nx">numbers</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">numbers</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">num</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="nx">sum</span> <span class="o">+=</span> <span class="nx">num</span><span class="p">))</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">sum</span> <span class="o">/</span> <span class="nx">numbers</span><span class="p">.</span><span class="nx">length</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">calculateAverage</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">88</span><span class="p">,</span> <span class="mi">64</span><span class="p">))</span> <span class="c1">// Will print: 63</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">printTeam</span> <span class="o">=</span> <span class="p">(</span><span class="nx">teamName</span><span class="p">,</span> <span class="nx">coach</span><span class="p">,</span> <span class="p">...</span><span class="nx">players</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">Team</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">teamName</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">Coach</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">coach</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">Players</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">players</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">printTeam</span><span class="p">(</span><span class="s1">&#39;Liberty&#39;</span><span class="p">,</span> <span class="s1">&#39;Casey Penn&#39;</span><span class="p">,</span> <span class="s1">&#39;Marge&#39;</span><span class="p">,</span> <span class="s1">&#39;Aiden&#39;</span><span class="p">,</span> <span class="s1">&#39;Herbert&#39;</span><span class="p">,</span> <span class="s1">&#39;Sherry&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Spread Syntax</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">printTeam</span> <span class="o">=</span> <span class="p">(</span><span class="nx">teamName</span><span class="p">,</span> <span class="nx">coach</span><span class="p">,</span> <span class="p">...</span><span class="nx">players</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">Team</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">teamName</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">Coach</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">coach</span><span class="p">}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="err">`</span><span class="nx">Players</span><span class="o">:</span> <span class="nx">$</span><span class="p">{</span><span class="nx">players</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)}</span><span class="err">`</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">team</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Libery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">coach</span><span class="o">:</span> <span class="s1">&#39;Casey Penn&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">players</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;Marge&#39;</span><span class="p">,</span> <span class="s1">&#39;Aiden&#39;</span><span class="p">,</span> <span class="s1">&#39;Herbert&#39;</span><span class="p">,</span> <span class="s1">&#39;Sherry&#39;</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">printTeam</span><span class="p">(</span><span class="nx">team</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span> <span class="nx">team</span><span class="p">.</span><span class="nx">coach</span><span class="p">,</span> <span class="p">...</span><span class="nx">team</span><span class="p">.</span><span class="nx">players</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">cities</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Barcelona&#39;</span><span class="p">,</span> <span class="s1">&#39;Cape Town&#39;</span><span class="p">,</span> <span class="s1">&#39;Bordeaux&#39;</span><span class="p">]</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">citiesClone</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">cities</span><span class="p">,</span> <span class="s1">&#39;Santiago&#39;</span><span class="p">]</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">cities</span><span class="p">)</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">citiesClone</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// [ &#39;Barcelona&#39;, &#39;Cape Town&#39;, &#39;Bordeaux&#39; ]</span>
</span><span class='line'><span class="c1">// [ &#39;Barcelona&#39;, &#39;Cape Town&#39;, &#39;Bordeaux&#39;, &#39;Santiago&#39; ]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array">Array</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters">Rest parameters</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax">Spread syntax</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript - Flow Control]]></title>
    <link href="https://mgleon08.github.io/blog/2019/07/28/javascript-flow-control/"/>
    <updated>2019-07-28T12:29:41+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/07/28/javascript-flow-control</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><a href="#booleans">Booleans - Truthy &amp; Falsy</a></li>
<li><a href="#comparison">Comparison Operators</a></li>
<li><a href="#if">if&hellip;else</a></li>
<li><a href="#switch">switch</a></li>
<li><a href="#loop">loop</a></li>
<li><a href="#logical">邏輯運算子 Logical operators</a></li>
<li><a href="#bitwise">位元運算子 Bitwise operators</a></li>
<li><a href="#catch_error">Catching and Throwing Errors</a></li>
</ul>


<h1><span id="booleans"> Booleans - Truthy &amp; Falsy <span></h1>

<p>以下 6 個為 <code>Falsy</code> 其他都是 <code>Truthy</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Falsy</span>
</span><span class='line'><span class="kc">false</span>
</span><span class='line'><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">0</span>
</span><span class='line'><span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="kc">null</span>
</span><span class='line'><span class="kc">undefined</span>
</span><span class='line'><span class="kc">NaN</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Truthy</span>
</span><span class='line'><span class="s1">&#39;Hello World&#39;</span>
</span><span class='line'><span class="mi">8</span>
</span><span class='line'><span class="p">[],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="p">{},</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;leon&#39;</span> <span class="p">}</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">foo</span><span class="p">()</span> <span class="p">{}</span>
</span><span class='line'><span class="kc">true</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以用 <code>!!</code> 來做確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">!!</span><span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="c1">// false</span>
</span><span class='line'><span class="o">!!</span><span class="p">[]</span>
</span><span class='line'><span class="c1">// true</span>
</span><span class='line'><span class="o">!!</span><span class="mi">0</span>
</span><span class='line'><span class="c1">// false</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">Boolean</a></li>
</ul>


<h1><span id="comparison"> Comparison Operators <span></h1>

<ul>
<li><code>===</code>：不做轉型，因此型別對比較是有影響的。</li>
<li><code>==</code>：會強制轉型

<ul>
<li>布林轉數字</li>
<li>字串轉數字</li>
<li>使用 <code>valueOf()</code> 或 <code>toString()</code> 將物件取得基本型別的值，再做比較</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="mi">1</span> <span class="o">==</span> <span class="mf">1.0</span>          <span class="c1">// true</span>
</span><span class='line'><span class="s1">&#39;1&#39;</span> <span class="o">==</span> <span class="mi">1</span>          <span class="c1">// true</span>
</span><span class='line'><span class="s1">&#39;1&#39;</span> <span class="o">==</span> <span class="mf">1.0</span>        <span class="c1">// true</span>
</span><span class='line'><span class="kc">null</span> <span class="o">==</span> <span class="kc">undefined</span> <span class="c1">// true</span>
</span><span class='line'><span class="kc">NaN</span> <span class="o">==</span> <span class="kc">NaN</span>        <span class="c1">// false</span>
</span><span class='line'><span class="p">{}</span> <span class="o">==</span> <span class="p">{}</span>          <span class="c1">// false</span>
</span><span class='line'><span class="p">[]</span> <span class="o">==</span> <span class="p">[]</span>          <span class="c1">// false</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span> <span class="o">===</span> <span class="mf">1.0</span>          <span class="c1">// true</span>
</span><span class='line'><span class="s1">&#39;1&#39;</span> <span class="o">===</span> <span class="mi">1</span>          <span class="c1">// false</span>
</span><span class='line'><span class="s1">&#39;1&#39;</span> <span class="o">===</span> <span class="mf">1.0</span>        <span class="c1">// false</span>
</span><span class='line'><span class="kc">null</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="c1">// false</span>
</span><span class='line'><span class="kc">NaN</span> <span class="o">===</span> <span class="kc">NaN</span>        <span class="c1">// false</span>
</span><span class='line'><span class="p">{}</span> <span class="o">===</span> <span class="p">{}</span>          <span class="c1">// false</span>
</span><span class='line'><span class="p">[]</span> <span class="o">===</span> <span class="p">[]</span>          <span class="c1">// false</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// reference same memory (object, array)</span>
</span><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'><span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span>
</span><span class='line'><span class="nx">a</span> <span class="o">==</span> <span class="nx">b</span> <span class="c1">// true</span>
</span><span class='line'><span class="nx">a</span> <span class="o">===</span> <span class="nx">b</span> <span class="c1">// true</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// 字串以字典的字母順序為主</span>
</span><span class='line'><span class="s1">&#39;ab&#39;</span> <span class="o">&lt;</span> <span class="s1">&#39;cd&#39;</span> <span class="c1">// true</span>
</span><span class='line'><span class="c1">// 字串 &#39;99&#39; 被強制轉型為數字 99</span>
</span><span class='line'><span class="s1">&#39;99&#39;</span> <span class="o">&gt;</span> <span class="mi">98</span> <span class="c1">// true</span>
</span><span class='line'><span class="c1">// 字串 &#39;Hello World&#39; 無法轉為數字，變成 NaN</span>
</span><span class='line'><span class="s1">&#39;Hello World&#39;</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="c1">// false</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators">Comparison operators</a></li>
</ul>


<h1><span id="if"> if&hellip;else <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="mi">26</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">isChild</span> <span class="o">=</span> <span class="nx">age</span> <span class="o">&lt;=</span> <span class="mi">7</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">isSenior</span> <span class="o">=</span> <span class="nx">age</span> <span class="o">&gt;=</span> <span class="mi">65</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">isChild</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Welcome! You are free.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">isSenior</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Welcome! You get a discount.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Welcome!&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>三元運算 Condition Ternary Operator</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">getFee</span><span class="p">(</span><span class="nx">isMember</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">isMember</span> <span class="o">?</span> <span class="s1">&#39;$2.00&#39;</span> <span class="o">:</span> <span class="s1">&#39;$10.00&#39;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getFee</span><span class="p">(</span><span class="kc">true</span><span class="p">))</span> <span class="c1">// &quot;$2.00&quot;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getFee</span><span class="p">(</span><span class="kc">false</span><span class="p">))</span> <span class="c1">// &quot;$10.00&quot;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getFee</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span> <span class="c1">// &quot;$2.00&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else">if&hellip;else</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator">Conditional Operator</a></li>
</ul>


<h1><span id="switch"> switch <span></h1>

<ul>
<li><code>break</code> - 如果不加的話會繼續執行下去</li>
<li><code>default</code> - 如果上面都沒有執行，就會執行這行</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">expr</span> <span class="o">=</span> <span class="s1">&#39;Papayas&#39;</span>
</span><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="nx">expr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="s1">&#39;Oranges&#39;</span><span class="o">:</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Oranges are $0.59 a pound.&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">break</span>
</span><span class='line'>  <span class="k">case</span> <span class="s1">&#39;Mangoes&#39;</span><span class="o">:</span>
</span><span class='line'>  <span class="k">case</span> <span class="s1">&#39;Papayas&#39;</span><span class="o">:</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Mangoes and papayas are $2.79 a pound.&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">// expected output: &quot;Mangoes and papayas are $2.79 a pound.&quot;</span>
</span><span class='line'>    <span class="k">break</span>
</span><span class='line'>  <span class="k">default</span><span class="o">:</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Sorry, we are out of &#39;</span> <span class="o">+</span> <span class="nx">expr</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/switch">switch</a></li>
</ul>


<h1><span id="loop"> loop <span></h1>

<h3>for</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">str</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">9</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">str</span> <span class="o">=</span> <span class="nx">str</span> <span class="o">+</span> <span class="nx">i</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">str</span><span class="p">)</span> <span class="c1">// &quot;012345678&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>for..in</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">string1</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">object1</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">a</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">b</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">c</span><span class="o">:</span> <span class="mi">3</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">property1</span> <span class="k">in</span> <span class="nx">object1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">string1</span> <span class="o">+=</span> <span class="nx">object1</span><span class="p">[</span><span class="nx">property1</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">string1</span><span class="p">)</span> <span class="c1">// &quot;123&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>while</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">n</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="nx">n</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">n</span><span class="o">++</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="c1">// 3</span>
</span></code></pre></td></tr></table></div></figure>


<h3>do..while</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">do</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">i</span> <span class="o">=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">result</span> <span class="o">=</span> <span class="nx">result</span> <span class="o">+</span> <span class="nx">i</span>
</span><span class='line'><span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="c1">// &quot;12345&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for">for</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in">for&hellip;in</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while">while</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/do...while">do&hellip;while</a></li>
</ul>


<h1><span id="logical"> 邏輯運算子 Logical operators <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="o">-</span><span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">b</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="c1">// false</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="nx">b</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="c1">// true</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="nx">b</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">))</span> <span class="c1">// false</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators">Logical operators</a></li>
</ul>


<h1><span id="bitwise"> 位元運算子 Bitwise operators <span></h1>

<p>將運算元轉乘 32 位元的 0 和 1，<code>&amp;</code> 兩個都是 1 就是 1，<code>|</code> 一個是 1 才是 1，最後在轉換成數字</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">5</span> <span class="o">&amp;</span> <span class="mi">13</span><span class="p">)</span> <span class="c1">// 0101 &amp; 1101 = 0101</span>
</span><span class='line'><span class="c1">// 5</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="s1">&#39;0101&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">&amp;</span> <span class="nb">parseInt</span><span class="p">(</span><span class="s1">&#39;1101&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="c1">// 5</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">5</span> <span class="o">&amp;</span> <span class="mi">13</span> <span class="o">&amp;</span> <span class="mi">3</span><span class="p">)</span> <span class="c1">// 0101 &amp; 1101 &amp; 0011 = 0001</span>
</span><span class='line'><span class="c1">// 1</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">5</span> <span class="o">|</span> <span class="mi">13</span><span class="p">)</span> <span class="c1">// 0101 | 1101 = 1101</span>
</span><span class='line'><span class="c1">// 13</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators">Bitwise operators</a></li>
</ul>


<h1><span id="catch_error"> Catching and Throwing Errors <span></h1>

<ul>
<li><code>try..catch</code>: 捕獲 <code>error</code>，嘗試做其他處理</li>
<li><code>throw</code>: 拋出 <code>error</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">getTip</span> <span class="o">=</span> <span class="nx">amount</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">amount</span> <span class="o">!==</span> <span class="s1">&#39;number&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Argument must be a number&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">amount</span> <span class="o">*</span> <span class="mf">0.25</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">try</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">getTip</span><span class="p">(</span><span class="s1">&#39;12&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span> <span class="c1">// Argument must be a number</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch">try&hellip;catch</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript - Variables]]></title>
    <link href="https://mgleon08.github.io/blog/2019/07/27/javascript-variables/"/>
    <updated>2019-07-27T12:28:47+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/07/27/javascript-variables</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><a href="#naming">命名規則</a></li>
<li><a href="#declare">宣告 var、let、const</a></li>
<li><a href="#scope">Variable Scope</a></li>
<li><a href="#undefine_null">undefine and null</a></li>
<li><a href="#type_coercion">Type Coercion</a></li>
<li><a href="#strict">嚴格模式 Strict Mode</a></li>
</ul>


<h1><span id="naming"> 命名規則 <span></h1>

<blockquote><p>A JavaScript identifier must start with a letter, underscore (_), or dollar sign ($) subsequent characters can also be digits (0-9). Because JavaScript is case sensitive, letters include the characters &ldquo;A&rdquo; through &ldquo;Z&rdquo; (uppercase) and the characters &ldquo;a&rdquo; through &ldquo;z&rdquo; (lowercase).</p></blockquote>

<p>From <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Variables">MDN Variables</a></p>

<h3>關鍵字 keyword &amp; 保留字 reserved word</h3>

<p>在變數命名時，要注意不要跟這些字一樣</p>

<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Reserved_keywords_as_of_ECMAScript_2015">keyword</a> - 指在目前 ECMAScript 中有特定用途的英文字詞</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Future_reserved_keywords">Future reserved keywords</a> - 系統留用，雖然目前尚未用到但未來可能有其他用途的字彙。</li>
</ul>


<h1><span id="declare"> 宣告 var、let、const <span></h1>

<ul>
<li><code>var</code>

<ul>
<li>函式作用域(<code>function scope</code>)</li>
<li>可重複宣告</li>
<li>可重新賦值</li>
</ul>
</li>
<li><code>let</code> (ES6)

<ul>
<li>區塊作用域(<code>block scope</code>)</li>
<li>不可重複宣告</li>
<li>可重新賦值</li>
</ul>
</li>
<li><code>const</code> (ES6)

<ul>
<li>區塊作用域(<code>block scope</code>)是</li>
<li>不可重複宣告</li>
<li>不可重新賦值</li>
<li><code>const</code> 主要用於常數，像是圓面積的 <code>π</code> <code>const PI = 3.14</code></li>
</ul>
</li>
</ul>


<p>因此 <code>var</code> 在 <code>function</code> 不會被外部讀取到，但在 <code>if</code>, <code>else</code>, <code>for</code>, <code>while</code> 等等區塊語句宣告時，則會變成 <code>global variable</code>，導致一些無法預期的事發生，如果希望都以區塊當範圍，則改用 <code>let</code></p>

<h3>重複宣告</h3>

<p>當使用 <code>let</code> 和 <code>const</code> 時，不可以重複宣告一樣的變數名稱 (<code>var</code> 可以覆蓋，所以建議改用 <code>let</code> 和 <code>const</code>)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39;hi&#39;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39;hello&#39;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="c1">// hello</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39;hi&#39;</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39;hello&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// SyntaxError: Identifier &#39;name&#39; has already been declared</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example 1</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">test</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">3</span> <span class="c1">// scope 是 function，因此可以改變 a = 1 的值</span>
</span><span class='line'>    <span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="mi">4</span> <span class="c1">// scope 是 block，只存在於 if(){}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="c1">// 3</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span> <span class="c1">// 2</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">test</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example 2</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">},</span> <span class="mi">1000</span> <span class="o">*</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 5 5 5 5 5</span>
</span></code></pre></td></tr></table></div></figure>


<p>原因在於 <code>var</code> 宣告後，會變成 <code>global variable</code> 而變成以下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">i</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">},</span> <span class="mi">1000</span> <span class="o">*</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>解法改用 <code>let</code> 或是 <code>IIFE 立即函示 (Immediately Invoked Function Expression)</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// let</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">},</span> <span class="mi">1000</span> <span class="o">*</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 0 1 2 3 4</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// IIFE</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">setTimeout</span><span class="p">((</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">})(</span><span class="nx">i</span><span class="p">),</span> <span class="mi">1000</span> <span class="o">*</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 0 1 2 3 4</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements#Declarations">Declarations</a></li>
</ul>


<h1>String Variable</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">city</span> <span class="o">=</span> <span class="s1">&#39;Taipei&#39;</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">country</span> <span class="o">=</span> <span class="s1">&#39;Taiwan&#39;</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">myLocation</span> <span class="o">=</span> <span class="nx">country</span> <span class="o">+</span> <span class="s1">&#39; &#39;</span> <span class="o">+</span> <span class="nx">city</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Template literals</h3>

<p>使用 ` 包起來，裡面的變數則用 <code>${}</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">template_location</span> <span class="o">=</span> <span class="err">`</span><span class="nx">$</span><span class="p">{</span><span class="nx">country</span><span class="p">}</span> <span class="nx">$</span><span class="p">{</span><span class="nx">city</span><span class="p">}</span><span class="err">`</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></li>
</ul>


<h1>Numbers Variable</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">number</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="p">.</span><span class="mi">3</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">number2</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">-</span> <span class="o">-</span><span class="mi">2</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">number3</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">number4</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="kd">let</span> <span class="nx">studentScore</span> <span class="o">=</span> <span class="mi">18</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">maxScore</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">percent</span> <span class="o">=</span> <span class="p">(</span><span class="nx">studentScore</span> <span class="o">/</span> <span class="nx">maxScore</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators">Arithmetic operators</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">Number</a></li>
</ul>


<h1>String + Number</h1>

<p>兩邊的值資料型別不同，當其中一方是字串時，<code>+</code> 所代表的就是字串運算子，而將數字強制轉型為字串</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s1">&#39;100&#39;</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">number</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">total</span> <span class="o">=</span> <span class="nx">string</span> <span class="o">+</span> <span class="nx">number</span> <span class="c1">// &quot;100100&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>透過 <code>Number()</code> 先將字串轉為數字即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">string</span> <span class="o">=</span> <span class="s1">&#39;100&#39;</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">number</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">total</span> <span class="o">=</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">string</span><span class="p">)</span> <span class="o">+</span> <span class="nx">number</span> <span class="c1">// 200</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="scope"> Variable Scope <span></h1>

<h2>Global Scope vs Local Scope</h2>

<ul>
<li><code>Global Scope 全域變數</code> - 在 <code>function scope(var)</code>和 <code>block scope(let, const)</code> 之外宣告的變數，全域變數在整個程式中都可以被存取與修改。</li>
<li><code>Local Scope 區域變數</code> - 在 <code>function scope(var)</code> 和 <code>block scope(let, const)</code> 內宣告，每次執行函式時，就會建立區域變數再予以摧毀，而且函式之外的所有程式碼都不能存取這個變數。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// global scope</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">varOne</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// local scope, block scope</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">varTwo</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">test</span><span class="p">(){</span>
</span><span class='line'>  <span class="c1">// local scope, function scope</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">varThree</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>variable shadowing</h2>

<p>指在某變數可視範圍內，定義了同名變數，在後者的可視範圍中，取用同一名稱時所用的是後者的定義。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// global scope</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">x</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// local scope</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="c1">// 2</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="c1">// 1</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Leaked global</h2>

<p>當沒有用 <code>var</code> <code>let</code> <code>const</code> 宣告時，要取得 global variable 時，找不到會自動 create 一個</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Example 1: Leaked global</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">leakedGlobal</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">score</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">score</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">leakedGlobal</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">score</span><span class="p">)</span> <span class="c1">// 3</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Example 2: No leaked global</span>
</span><span class='line'><span class="kd">let</span> <span class="nx">leakedGlobal</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">score</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">score</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">score</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">leakedGlobal</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">score</span><span class="p">)</span> <span class="c1">// Will throw an error as score wasn&#39;t leaked to the global scope</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Hoisting 拉升</h2>

<blockquote><p>在程式執行前，編譯器（compiler）會先由上到下逐行將程式碼轉為電腦可懂的命令，然後再執行編譯後的指令。在這個編譯的階段，編譯器找出所有的變數並繫結所屬範疇，但不賦值，所以此刻變數所帶的值是 undefined；而在執行階段，JavaScript 引擎才會處理給值的事情。</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">8</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">hoisting1</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">hoisting1</span><span class="p">()</span> <span class="c1">// undefined</span>
</span></code></pre></td></tr></table></div></figure>


<p>相當於底下，x 編譯時先被提升到上面</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">8</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">hoisting2</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x</span> <span class="c1">// 編譯時期的工作</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span> <span class="c1">// 執行時期的工作</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">hoisting2</span><span class="p">()</span> <span class="c1">// undefined</span>
</span></code></pre></td></tr></table></div></figure>


<p>改成用 <code>let</code> 就會出現 error</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">8</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">hoisting3</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">hoisting3</span><span class="p">()</span> <span class="c1">// Cannot access &#39;x&#39; before initialization</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="undefine_null"> undefine and null <span></h1>

<ul>
<li><code>undefine</code> - 當宣告變數但沒給值，<code>default argument</code>，或是沒 return 值時，就會是 <code>undefine</code>，也可以像一般值一樣 assign</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">test1</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">test1</span><span class="p">)</span> <span class="c1">// undefined</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">foo</span><span class="p">(</span><span class="nx">num</span><span class="p">){</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">num</span> <span class="o">===</span> <span class="kc">undefined</span><span class="p">){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="c1">// undefined</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">test2</span> <span class="o">=</span> <span class="nx">foo</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nx">test3</span> <span class="o">=</span> <span class="kc">undefined</span> <span class="c1">// undefined 也可以 assign</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>null</code> - 可以像一般值一樣 assign，或是像 <code>match</code> 沒有和匹配時，就會是 <code>null</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="s1">&#39;leon&#39;</span>
</span><span class='line'><span class="nx">name</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">name</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;No name is set!&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">getVowels</span><span class="p">(</span><span class="nx">str</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">m</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/[aeiou]/gi</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">m</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getVowels</span><span class="p">(</span><span class="s1">&#39;sky&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined">undefined</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a></li>
</ul>


<h1><span id="type_coercion">  Type Coercion <span></h1>

<p>typeof</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="mi">43</span><span class="p">)</span>            <span class="c1">// number</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">NaN</span><span class="p">)</span>           <span class="c1">// number</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="s1">&#39;Andrew&#39;</span><span class="p">)</span>      <span class="c1">// string</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">undefined</span><span class="p">)</span>     <span class="c1">// undefined</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{})</span> <span class="c1">// function</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">null</span><span class="p">)</span>          <span class="c1">// object</span>
</span></code></pre></td></tr></table></div></figure>


<p>因為 js 會強制轉型，不會 error 導致會發生一些無法預期的行為</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">value</span> <span class="o">=</span> <span class="kc">false</span> <span class="o">+</span> <span class="mi">12</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">type</span> <span class="o">=</span> <span class="k">typeof</span> <span class="nx">value</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">type</span><span class="p">)</span>  <span class="c1">// &quot;number&quot;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="c1">// 0</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// false 會轉成 0</span>
</span><span class='line'><span class="c1">// true 會轉成 1</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof">typeof</a></li>
<li><a href="https://github.com/getify/You-Dont-Know-JS/blob/master/types%20%26%20grammar/ch4.md">Coercion</a></li>
</ul>


<h1><span id="strict"> 嚴格模式 Strict Mode <span></h1>

<p>預防開發者的一些不小心或錯誤的行為，JavaScript 引擎協助做了一些檢測的工作(防止像 <code>Leaked global</code>)</p>

<p>未宣告變數而賦值的狀況下，會無預警的產生一個全域變數，使用 Strict Mode 則會禁止</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="s1">&#39;use strict&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span> <span class="c1">// Uncaught ReferenceError: a is not defined</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="s1">&#39;use strict&#39;</span>
</span><span class='line'><span class="c1">// let data // 加上這行就可以了</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">processData</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">data</span> <span class="o">=</span> <span class="s1">&#39;1230987234&#39;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">processData</span><span class="p">()</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="c1">// Uncaught ReferenceError: data is not defined</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode">Strict mode</a></li>
<li><a href="http://dmitrysoshnikov.com/ecmascript/es5-chapter-2-strict-mode/">ECMA-262-5 in detail. Chapter 2. Strict Mode.</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Functional Programming 函式程式設計]]></title>
    <link href="https://mgleon08.github.io/blog/2019/07/26/functional-programming/"/>
    <updated>2019-07-26T14:57:55+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/07/26/functional-programming</id>
    <content type="html"><![CDATA[<!-- more -->


<p>之前一直沒有特別研究什麼事 <code>Function Programming</code>，這次就好好的來研究一下</p>

<h1>介紹</h1>

<p><code>函式式程式設計 Functional Programming (FP)</code> 是 <code>程式設計 programming paradigm</code> 的其中一種，是一類典型的程式設計風格，其他像是 <code>物件導向程式設計 Object-oriented programming (OOP)</code> 也是其中一種。</p>

<p>不同的程式設計，有不同的設計概念，因此用來解決問題的<code>思考</code>方式也大不相同，所以必須先瞭解這些語言的理念，才有辦法對症下藥。</p>

<p>必須符合以下的一項或多項重要概念(最重要的屬於前兩項)</p>

<blockquote><p>函式就算定義為「高階函式」，也不一定就能稱為「函式程式設計」，符合函式程式設計有一定的要件，你還必須確保該函式要能「避免改變狀態」、「避免可變的資料」以及擁有「純函式」等特性。</p></blockquote>

<h1>1. First-class 一等公民</h1>

<p>對待函式(Function) 如同對待其他資料型別一樣，例如可以像變數一樣 <code>直接賦予值</code> 或是 <code>當作參數傳遞</code> (<code>javascript</code> 就屬於此特性)</p>

<ul>
<li>直接賦予值</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// variable</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// function</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// 3</span>
</span></code></pre></td></tr></table></div></figure>


<h1>2. higher-order functions 高階函式</h1>

<p>至少會滿足下列其中一項條件</p>

<ul>
<li>可以將函式(至少一個)當成參數傳入另一個函式</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">calc</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">op</span><span class="p">,</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">op</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// add 傳入 calc</span>
</span><span class='line'><span class="nx">calc</span><span class="p">(</span><span class="nx">add</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// 3</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>可以將函式當成另一個函式的回傳值</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span><span class="p">;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">addOne</span> <span class="o">=</span> <span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="nx">addOne</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// 3</span>
</span></code></pre></td></tr></table></div></figure>


<h1>3. pure functions 純函式</h1>

<p>意指將相同的傳入 (Input)丟入函式，永遠會回傳相同的 output 結果，而且在過程中完全沒有任何的副作用。</p>

<p>意指函式在執行的時候，完全相同的參數傳入 (Input)，永遠會回傳相同的傳出 (Output)，而且在過程中<code>完全沒有任何副作用</code>，且函式程式設計更加強調「執行的結果」而非「執行的過程」，倡導利用幾個簡單的函式來計算結果，</p>

<p>副作用包括像是</p>

<ul>
<li>狀態改變</li>
<li>資料改變</li>
<li>更改外部變數或者物件屬性(例如：全域變數、父類別範圍內的變數等)</li>
<li>寫入console.log、檔案</li>
<li>觸發外部流程</li>
<li>呼叫任何有副作用的函式(Functions)</li>
<li>&hellip;</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// slice: Pure Function</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span><span class='line'><span class="nx">arr</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// output = [1, 2, 3], arr = [1, 2, 3, 4, 5, 6]</span>
</span><span class='line'><span class="nx">arr</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// output = [1, 2, 3], arr = [1, 2, 3, 4, 5, 6]</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// splice: not Pure Function</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>
</span><span class='line'><span class="nx">arr</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// output = [1, 2, 3], arr = [4, 5, 6]</span>
</span><span class='line'><span class="nx">arr</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// output = [4, 5, 6], arr = []</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以發現到，<code>slice()</code> 每次 output 都會是一樣，而 <code>splice()</code> 則會不同</p>

<h1>Declarative vs Imperative</h1>

<p><code>函式程式設計 Functional Programming</code> 屬於 <code>宣告式程式設計 Declarative Paradigm</code> 的一種</p>

<ul>
<li>指令式程式設計(Imperative Paradigm)

<ul>
<li>程式碼具體表達需要做什麼來達到目標。描述該做什麼(how to do)以及流程控制(flow control)。</li>
<li>ex: C、JAVA</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;spray&#39;</span><span class="p">,</span> <span class="s1">&#39;limit&#39;</span><span class="p">,</span> <span class="s1">&#39;elite&#39;</span><span class="p">,</span> <span class="s1">&#39;exuberant&#39;</span><span class="p">,</span> <span class="s1">&#39;destruction&#39;</span><span class="p">,</span> <span class="s1">&#39;present&#39;</span><span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">words</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">word</span> <span class="o">=</span> <span class="nx">words</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">word</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">6</span><span class="p">){</span>
</span><span class='line'>      <span class="nx">result</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">word</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</span><span class='line'><span class="c1">// expected output: Array [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>宣告式程式設計(Declarative Paradigm)

<ul>
<li>較為抽象的程式碼，可以藉由自然語言直觀的理解該行程式碼想要達到什麼樣的結果。描述該在哪做什麼(what to do)以及資料流程(data flow)。</li>
<li>ex: HTML、SQL</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;spray&#39;</span><span class="p">,</span> <span class="s1">&#39;limit&#39;</span><span class="p">,</span> <span class="s1">&#39;elite&#39;</span><span class="p">,</span> <span class="s1">&#39;exuberant&#39;</span><span class="p">,</span> <span class="s1">&#39;destruction&#39;</span><span class="p">,</span> <span class="s1">&#39;present&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">words</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">word</span> <span class="o">=&gt;</span> <span class="nx">word</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">6</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</span><span class='line'><span class="c1">// expected output: Array [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>js 裡的 <code>fliter</code> <code>map</code> 和 <code>reduce</code> 屬於高階函式</p>

<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">Array.prototype.filter()
</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map">Array.prototype.map()</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce">Array.prototype.reduce()
</a></li>
</ul>


<h1>結語</h1>

<p>之前接觸的大多是 <code>Object-oriented programming (OOP)</code> 透過這次更加了解 <code>Functional Programming (FP)</code>，不然之前都以為 <code>javascript</code> == <code>Functional Programming</code>，原來指的不是語言，而是設計風格啊~</p>

<h1>Reference</h1>

<ul>
<li><a href="https://en.wikipedia.org/wiki/Functional_programming">Functional programming Wiki</a></li>
<li><a href="https://medium.com/@totoroLiu/javascript-functional-programming-%E5%87%BD%E5%BC%8F%E7%B7%A8%E7%A8%8B%E6%A6%82%E5%BF%B5-e8f4e778fc08">JavaScript: Functional Programming 函式程式設計概念</a></li>
<li><a href="https://blog.miniasp.com/post/2016/12/10/Functional-Programming-in-JavaScript">前端工程研究：理解函式程式設計核心概念與如何進行 JavaScript 函式程式設計</a></li>
<li><a href="http://reactivex.io/learnrx/">Functional Programming in Javascript 教學網頁</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang Tricks]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/18/golang-tricks/"/>
    <updated>2019-06-18T22:11:30+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/18/golang-tricks</id>
    <content type="html"><![CDATA[<!-- more -->


<ol>
<li><a href="#defer1">Defer 執行順序</a></li>
<li><a href="#range">Range &amp; Foreach</a></li>
<li><a href="#closure">golang 執行的隨機性和閉包</a></li>
<li><a href="#combination_inherit">golang 的組合繼承</a></li>
<li><a href="#select">Select 隨機性</a></li>
<li><a href="#defer2">Defer 執行順序</a></li>
<li><a href="#make_append">make 預設值和 append</a></li>
<li><a href="#map_concurrent">map 執行緒安全</a></li>
<li><a href="#chan_buffer">chan緩存池</a></li>
<li><a href="#interface_implement">interface 實作方式</a></li>
<li><a href="#interface_internal">interface內部結構</a></li>
<li><a href="#type_assertion">Type Assertion</a></li>
<li><a href="#return_value_naming">Return Value Naming</a></li>
<li><a href="#defer3">defer和函式返回值</a></li>
<li><a href="#new_make">new &amp; make</a></li>
<li><a href="#slice_append">slice append</a></li>
<li><a href="#struct_compare">Struct Compare</a></li>
<li><a href="#return_type">Return Type</a></li>
<li><a href="#iota">iota</a></li>
<li><a href="#short_variable_declarations">Short variable declarations</a></li>
<li><a href="#const_address">Const Address</a></li>
<li><a href="#goto">goto 位置</a></li>
<li><a href="#type_alias">Type Alias</a></li>
<li><a href="#variable_scope">if 變數作用域</a></li>
</ol>


<h1><span id='defer1'> Defer 執行順序 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">defer_call</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">defer_call</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;1&quot;</span><span class="p">)</span> <span class="p">}()</span>
</span><span class='line'>    <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;2&quot;</span><span class="p">)</span> <span class="p">}()</span>
</span><span class='line'>    <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;3&quot;</span><span class="p">)</span> <span class="p">}()</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">panic</span><span class="p">(</span><span class="s">&quot;exception&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/Zpbiau9RuGm">https://play.golang.org/p/Zpbiau9RuGm</a></p>

<ul>
<li>defer 採用後進先出(Last In First Out (LIFO))</li>
<li>panic 需等所有的 defer 結束後才會執行</li>
</ul>


<h1><span id='range'> Range &amp; Foreach </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">student</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Age</span>  <span class="kt">int</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">m</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="o">*</span><span class="nx">student</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">stus</span> <span class="o">:=</span> <span class="p">[]</span><span class="nx">student</span><span class="p">{</span>
</span><span class='line'>      <span class="p">{</span><span class="nx">Name</span><span class="p">:</span> <span class="s">&quot;zhou&quot;</span><span class="p">,</span> <span class="nx">Age</span><span class="p">:</span> <span class="mi">24</span><span class="p">},</span>
</span><span class='line'>      <span class="p">{</span><span class="nx">Name</span><span class="p">:</span> <span class="s">&quot;li&quot;</span><span class="p">,</span> <span class="nx">Age</span><span class="p">:</span> <span class="mi">23</span><span class="p">},</span>
</span><span class='line'>      <span class="p">{</span><span class="nx">Name</span><span class="p">:</span> <span class="s">&quot;wang&quot;</span><span class="p">,</span> <span class="nx">Age</span><span class="p">:</span> <span class="mi">22</span><span class="p">},</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">stu</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">stus</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">m</span><span class="p">[</span><span class="nx">stu</span><span class="p">.</span><span class="nx">Name</span><span class="p">]</span> <span class="p">=</span> <span class="o">&amp;</span><span class="nx">stu</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="nx">k</span><span class="p">,</span> <span class="nx">v</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">m</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span> <span class="s">&quot;=&gt;&quot;</span><span class="p">,</span> <span class="nx">v</span><span class="p">.</span><span class="nx">Name</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/ocNj5lp0W0_4">https://play.golang.org/p/ocNj5lp0W0_4</a></p>

<ul>
<li>range 是用 copy 的方式，因此每個 key 都指向同一個 point，最後的值就會是最後一個指向的 value</li>
<li><p>解決方式，改用 index 的方式</p>

<pre><code class="go">for i := 0; i &lt; len(stus); i++ {
  m[stus[i].Name] = &amp;stus[i]
}

for k, v := range m {
  fmt.Println(k, "=&gt;", v.Name)
}

for i, _ := range stus {
  m[stus[i].Name] = &amp;stus[i]
}

for k, v := range m {
  fmt.Println(k, "=&gt;", v.Name)
}
</code></pre></li>
</ul>


<h1><span id='closure'> golang 執行的隨機性和閉包 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;runtime&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">runtime</span><span class="p">.</span><span class="nx">GOMAXPROCS</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">wg</span> <span class="o">:=</span> <span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">wg</span><span class="p">.</span><span class="nx">Add</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;A address: %p, value: %v\n&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">i</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">wg</span><span class="p">.</span><span class="nx">Done</span><span class="p">()</span>
</span><span class='line'>      <span class="p">}()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">go</span> <span class="kd">func</span><span class="p">(</span><span class="nx">i</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;B address: %p, value: %v\n&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">i</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">wg</span><span class="p">.</span><span class="nx">Done</span><span class="p">()</span>
</span><span class='line'>      <span class="p">}(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">wg</span><span class="p">.</span><span class="nx">Wait</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/EzCWf8r1wnt">https://play.golang.org/p/EzCWf8r1wnt</a></p>

<ul>
<li>第一個 func 沒有將 i 帶入，取得的 i 是 for 外部的 i，並且 i 會一直加 1 直到 10，因此最後輸出的 A 全部都是 10</li>
<li>第二個 func 則是每次都會帶入 i，每個 i 都會做 copy 帶入 func，因此外部的 ++ 不會影響到</li>
</ul>


<h1><span id='combination_inherit'> golang 的組合繼承 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">People</span> <span class="kd">struct</span><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="o">*</span><span class="nx">People</span><span class="p">)</span> <span class="nx">ShowA</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;showA&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">p</span><span class="p">.</span><span class="nx">ShowB</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">p</span> <span class="o">*</span><span class="nx">People</span><span class="p">)</span> <span class="nx">ShowB</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;showB&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Teacher</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">People</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">Teacher</span><span class="p">)</span> <span class="nx">ShowB</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;teacher showB&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">t</span> <span class="o">:=</span> <span class="nx">Teacher</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">t</span><span class="p">.</span><span class="nx">ShowA</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/eSGvASIBn5K">https://play.golang.org/p/eSGvASIBn5K</a></p>

<ul>
<li>透過組合的方式，來實現 OO 的繼承，當 struct 有 <code>anonymous struct field</code>，就會被當成 <code>promoted fields</code>，簡單的來說原本 people 的方法(必須是匿名)就可以直接被 teacher 給調用</li>
<li>當呼叫了 showA() 裡面在 call showB() 時，此時 People 類型並不知道自己會被什麼類型組合，因此無法去使用未知的組合者 Teacher 類型的 func</li>
</ul>


<h1><span id='select'> Select隨機性 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;runtime&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">runtime</span><span class="p">.</span><span class="nx">GOMAXPROCS</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">int_chan</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">string_chan</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">int_chan</span> <span class="o">&lt;-</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">string_chan</span> <span class="o">&lt;-</span> <span class="s">&quot;hello&quot;</span>
</span><span class='line'>  <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="nx">value</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">int_chan</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span>
</span><span class='line'>  <span class="k">case</span> <span class="nx">value</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">string_chan</span><span class="p">:</span>
</span><span class='line'>      <span class="nb">panic</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/ntESh6QYaYT">https://play.golang.org/p/ntESh6QYaYT</a></p>

<ul>
<li>select 擁有隨機性，因此都有可能觸發</li>
<li>當只要有個 case 可以 return 就可以立即執行</li>
<li>都能 return 則隨機</li>
<li>都不行則跑 default</li>
</ul>


<h1><span id='defer2'> Defer 執行順序 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">calc</span><span class="p">(</span><span class="nx">index</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ret</span> <span class="o">:=</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">ret</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">ret</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">a</span> <span class="o">:=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">b</span> <span class="o">:=</span> <span class="mi">2</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">calc</span><span class="p">(</span><span class="s">&quot;A&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">calc</span><span class="p">(</span><span class="s">&quot;C&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">a</span> <span class="p">=</span> <span class="mi">3</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">calc</span><span class="p">(</span><span class="s">&quot;B&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">calc</span><span class="p">(</span><span class="s">&quot;D&quot;</span><span class="p">,</span> <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">b</span> <span class="p">=</span> <span class="mi">4</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/BrhIs-_chN_y">https://play.golang.org/p/BrhIs-_chN_y</a></p>

<ul>
<li>defer 採用後進先出(Last In First Out (LIFO))</li>
</ul>


<h1><span id='make_append'> make 預設值和 append </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">s</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">s</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/7VHcPYjenWw">https://play.golang.org/p/7VHcPYjenWw</a></p>

<ul>
<li>make 初始化時，後面直有一個值的話，代表 len 和 cap，因此裡面預設就有 5 個 default 0，所以在 append 時，會再繼續加上去</li>
</ul>


<h1><span id='map_concurrent'> map 執行緒安全 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">UserAges</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ages</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span>
</span><span class='line'>  <span class="nx">sync</span><span class="p">.</span><span class="nx">Mutex</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">ua</span> <span class="o">*</span><span class="nx">UserAges</span><span class="p">)</span> <span class="nx">Add</span><span class="p">(</span><span class="nx">name</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">age</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ua</span><span class="p">.</span><span class="nx">Lock</span><span class="p">()</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">ua</span><span class="p">.</span><span class="nx">Unlock</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">ua</span><span class="p">.</span><span class="nx">ages</span><span class="p">[</span><span class="nx">name</span><span class="p">]</span> <span class="p">=</span> <span class="nx">age</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">ua</span> <span class="o">*</span><span class="nx">UserAges</span><span class="p">)</span> <span class="nx">Get</span><span class="p">(</span><span class="nx">name</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">ua</span><span class="p">.</span><span class="nx">ages</span><span class="p">[</span><span class="nx">name</span><span class="p">];</span> <span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">age</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">userAge</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">UserAges</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">ages</span><span class="p">:</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">),</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">userAge</span><span class="p">.</span><span class="nx">Add</span><span class="p">(</span><span class="s">&quot;leon&quot;</span><span class="p">,</span> <span class="mi">28</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">age</span> <span class="o">:=</span> <span class="nx">userAge</span><span class="p">.</span><span class="nx">Get</span><span class="p">(</span><span class="s">&quot;leon&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">age</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/KwtbBryhP5x">https://play.golang.org/p/KwtbBryhP5x</a></p>

<ul>
<li>在讀(Get)的時候，沒有加上 Lock，可能會導致 <code>fatal error: concurrent map read and map write</code></li>
<li>更改為
<code>go
func (ua *UserAges) Get(name string) int {
  ua.Lock()
  defer ua.Unlock()
  if age, ok := ua.ages[name]; ok {
      return age
  }
  return -1
}
</code></li>
</ul>


<h1><span id='chan_buffer'> chan緩存池 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">threadSafeSet</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">sync</span><span class="p">.</span><span class="nx">RWMutex</span>
</span><span class='line'>  <span class="nx">s</span> <span class="p">[]</span><span class="kd">interface</span><span class="p">{}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">set</span> <span class="o">*</span><span class="nx">threadSafeSet</span><span class="p">)</span> <span class="nx">Iter</span><span class="p">()</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="kd">interface</span><span class="p">{}</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ch</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kd">interface</span><span class="p">{})</span>
</span><span class='line'>  <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">set</span><span class="p">.</span><span class="nx">RLock</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">elem</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">set</span><span class="p">.</span><span class="nx">s</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="nx">elem</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Iter:&quot;</span><span class="p">,</span> <span class="nx">elem</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nb">close</span><span class="p">(</span><span class="nx">ch</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">set</span><span class="p">.</span><span class="nx">RUnlock</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">ch</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">th</span> <span class="o">:=</span> <span class="nx">threadSafeSet</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">s</span><span class="p">:</span> <span class="p">[]</span><span class="kd">interface</span><span class="p">{}{</span><span class="s">&quot;1&quot;</span><span class="p">,</span> <span class="s">&quot;2&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">v</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">th</span><span class="p">.</span><span class="nx">Iter</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%s%v&quot;</span><span class="p">,</span> <span class="s">&quot;ch&quot;</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/2n2GBeo35Jo">https://play.golang.org/p/2n2GBeo35Jo</a></p>

<ul>
<li>chan 不是 buffer chan 因此，會造成阻塞，並且顯示不了所有的 value，當 range 將第一個 &ldquo;1&rdquo; 放進 chan 後，再跑第二次要放進 &ldquo;2&rdquo; 時，必須等待第一個值被取出來，因此會停在那邊，但是當取出來後，就會繼續進行下面，導致直接結束</li>
<li>改用 buffer chan
<code>go
ch := make(chan interface{},len(set.s))
</code></li>
</ul>


<h1><span id="interface_implement"> interface 實作方式 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">People</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Speak</span><span class="p">(</span><span class="kt">string</span><span class="p">)</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Stduent</span> <span class="kd">struct</span><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">stu</span> <span class="o">*</span><span class="nx">Stduent</span><span class="p">)</span> <span class="nx">Speak</span><span class="p">(</span><span class="nx">think</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="nx">talk</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">think</span> <span class="o">==</span> <span class="s">&quot;say&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">talk</span> <span class="p">=</span> <span class="s">&quot;You are a good boy&quot;</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">talk</span> <span class="p">=</span> <span class="s">&quot;hi&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">peo</span> <span class="nx">People</span> <span class="p">=</span> <span class="nx">Stduent</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">think</span> <span class="o">:=</span> <span class="s">&quot;say&quot;</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">peo</span><span class="p">.</span><span class="nx">Speak</span><span class="p">(</span><span class="nx">think</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/u1qbY4CbVNQ">https://play.golang.org/p/u1qbY4CbVNQ</a></p>

<ul>
<li>因為實作 interface 的是 pointer receiver，所以會造成 error
<code>go
var peo People = &amp;Stduent{}
</code></li>
</ul>


<h1><span id="interface_internal"> interface內部結構 <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">People</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Show</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Student</span> <span class="kd">struct</span><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">stu</span> <span class="o">*</span><span class="nx">Student</span><span class="p">)</span> <span class="nx">Show</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">live</span><span class="p">()</span> <span class="nx">People</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">stu</span> <span class="o">*</span><span class="nx">Student</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">stu</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">live</span><span class="p">()</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;AAAAAAA&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;BBBBBBB&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/2nBU-dMwW6b">https://play.golang.org/p/2nBU-dMwW6b</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Foo</span><span class="p">(</span><span class="nx">x</span> <span class="kd">interface</span><span class="p">{})</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">x</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;empty interface&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;non-empty interface&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x</span> <span class="o">*</span><span class="kt">int</span> <span class="p">=</span> <span class="kc">nil</span>
</span><span class='line'>  <span class="nx">Foo</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/lx6W61O66P">https://play.golang.org/p/lx6W61O66P</a></p>

<ul>
<li>golang 中的 interface 分兩種，但底層結構稍微不同，因此 data 指向了 <code>nil</code> 並不代表 interface 是 <code>nil</code>

<ul>
<li><pre><code class="go">var in interface{}
</code></pre></li>
<li><pre><code class="go">type People interface {
    Show()
}
</code></pre></li>
</ul>
</li>
<li>第二個改成 <code>var x interface{}</code> 則為 <code>empty interface</code></li>
<li><a href="https://i6448038.github.io/2018/10/01/Golang-interface/">Go語言interface底層實現</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27055513">Go介面詳解</a></li>
</ul>


<h1><span id="type_assertion"> Type Assertion <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">i</span> <span class="o">:=</span> <span class="nx">GetValue</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">switch</span> <span class="nx">i</span><span class="p">.(</span><span class="kd">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="kt">int</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;int&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">case</span> <span class="kt">string</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;string&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">case</span> <span class="kd">interface</span><span class="p">{}:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;interface&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">default</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;unknown&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">GetValue</span><span class="p">()</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/-OiFMCcYttw">https://play.golang.org/p/-OiFMCcYttw</a></p>

<ul>
<li>Type Assertion 只能用於 interface</li>
</ul>


<h1><span id="return_value_naming"> Return Value Naming <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">i</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">funcMui</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">funcMui</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span> <span class="kt">int</span><span class="p">)(</span><span class="nx">sum</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">error</span><span class="p">){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">x</span><span class="o">+</span><span class="nx">y</span><span class="p">,</span><span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/nH6KTCel6ns">https://play.golang.org/p/nH6KTCel6ns</a></p>

<ul>
<li>只要有一個返回值有命名，全部就必須命名</li>
<li>如果兩個 type 一樣，則可以只寫一個</li>
</ul>


<h1><span id="defer3"> defer和函式返回值 <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nb">println</span><span class="p">(</span><span class="nx">DeferFunc1</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="nb">println</span><span class="p">(</span><span class="nx">DeferFunc2</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="nb">println</span><span class="p">(</span><span class="nx">DeferFunc3</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">DeferFunc1</span><span class="p">(</span><span class="nx">i</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="nx">t</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">t</span> <span class="p">=</span> <span class="nx">i</span>
</span><span class='line'>  <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">t</span> <span class="o">+=</span> <span class="mi">3</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">t</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">DeferFunc2</span><span class="p">(</span><span class="nx">i</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">t</span> <span class="o">:=</span> <span class="nx">i</span>
</span><span class='line'>  <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">t</span> <span class="o">+=</span> <span class="mi">3</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">t</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">DeferFunc3</span><span class="p">(</span><span class="nx">i</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="nx">t</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">t</span> <span class="o">+=</span> <span class="nx">i</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">2</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/HpOb3huRV-0">https://play.golang.org/p/HpOb3huRV-0</a></p>

<ul>
<li>defer 需要在 func 結束前執行</li>
<li>func return 名字會在函式起始處被初始化為對應類型的零值並且作用域為整個函式</li>
<li>DeferFunc1 - t 作用域為整個 func，因此 return 前會將 t 更改</li>
<li>DeferFunc2 - t 作用域為裡面的 func，因此不影響外面的 t</li>
<li>DeferFunc3 - t 作用域為整個 func，跟 Func 1 一樣</li>
</ul>


<h1><span id="new_make"> new &amp; make <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">list</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">([]</span><span class="kt">int</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">list</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">list</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">list</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/CEwGhsmQfZx">https://play.golang.org/p/CEwGhsmQfZx</a></p>

<ul>
<li>new 可以用來初始化泛型，並且返回儲存位址</li>
<li>new 會自動用 zeroed value 來初始化型別

<ul>
<li><code>string</code> => &ldquo;&rdquo;</li>
<li><code>int</code>, <code>float</code> => 0</li>
<li><code>channel</code>, <code>func</code>, <code>map</code>, <code>slice</code> => <code>nil</code></li>
</ul>
</li>
<li>必須改用 make([]int, 0), 初始化 slice (make 不會回傳指標)</li>
<li><a href="https://draveness.me/golang-make-and-new">Go 語言中的 make 和 new</a></li>
<li><a href="https://medium.com/d-d-mag/golang-%E7%AD%86%E8%A8%98-make-%E8%88%87-new-%E7%9A%84%E5%B7%AE%E5%88%A5-68b05c7ce016">golang 筆記：make 與 new 的差別</a></li>
<li><a href="https://golang.org/doc/effective_go.html#allocation_new">Allocation with new</a></li>
<li><a href="https://golang.org/doc/effective_go.html#allocation_make">Allocation with make</a></li>
</ul>


<h1><span id="slice_append"> slice append <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">s1</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">s2</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">s1</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">s1</span><span class="p">,</span> <span class="nx">s2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">s1</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/xOWsWj0Evni">https://play.golang.org/p/xOWsWj0Evni</a></p>

<ul>
<li>append slice 必須加上 <code>...</code> 展開 <code>s2...</code></li>
</ul>


<h1><span id="struct_compare"> Struct Compare <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">sn1</span> <span class="o">:=</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">age</span>  <span class="kt">int</span>
</span><span class='line'>      <span class="nx">name</span> <span class="kt">string</span>
</span><span class='line'>  <span class="p">}{</span><span class="nx">age</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span> <span class="nx">name</span><span class="p">:</span> <span class="s">&quot;qq&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">sn2</span> <span class="o">:=</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">age</span>  <span class="kt">int</span>
</span><span class='line'>      <span class="nx">name</span> <span class="kt">string</span>
</span><span class='line'>  <span class="p">}{</span><span class="nx">age</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span> <span class="nx">name</span><span class="p">:</span> <span class="s">&quot;qq&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">sn1</span> <span class="o">==</span> <span class="nx">sn2</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;sn1 == sn2&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">sm1</span> <span class="o">:=</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">age</span> <span class="kt">int</span>
</span><span class='line'>      <span class="nx">m</span>   <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">string</span>
</span><span class='line'>  <span class="p">}{</span><span class="nx">age</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span> <span class="nx">m</span><span class="p">:</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">string</span><span class="p">{</span><span class="s">&quot;a&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">}}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">sm2</span> <span class="o">:=</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">age</span> <span class="kt">int</span>
</span><span class='line'>      <span class="nx">m</span>   <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">string</span>
</span><span class='line'>  <span class="p">}{</span><span class="nx">age</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span> <span class="nx">m</span><span class="p">:</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">string</span><span class="p">{</span><span class="s">&quot;a&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">}}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">sm1</span> <span class="o">==</span> <span class="nx">sm2</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;sm1 == sm2&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/3cEX9aYtvsR">https://play.golang.org/p/3cEX9aYtvsR</a></p>

<ul>
<li>struct 只能在相同類型才能做比較，順序也會有差

<ul>
<li>這樣也不能做比較</li>
<li><pre><code class="go">sn3 := struct {
    age  int
    name string
  }{age: 11, name: "qq"}
</code></pre></li>
</ul>
</li>
<li>map 和 slice 則不可比較，如果要比較要用 <code>reflect.DeepEqual</code>

<ul>
<li><pre><code class="go">if reflect.DeepEqual(sm1, sm2) {
      fmt.Println("sm1 == sm2")
  }
</code></pre></li>
</ul>
</li>
</ul>


<h1><span id="return_type"> Return Type <span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">GetValue</span><span class="p">(</span><span class="nx">m</span> <span class="kd">map</span><span class="p">[</span><span class="kt">int</span><span class="p">]</span><span class="kt">string</span><span class="p">,</span> <span class="nx">id</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">exist</span> <span class="o">:=</span> <span class="nx">m</span><span class="p">[</span><span class="nx">id</span><span class="p">];</span> <span class="nx">exist</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;存在數據&quot;</span><span class="p">,</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">nil</span><span class="p">,</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">intmap</span> <span class="o">:=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">int</span><span class="p">]</span><span class="kt">string</span><span class="p">{</span>
</span><span class='line'>      <span class="mi">1</span><span class="p">:</span> <span class="s">&quot;a&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="mi">2</span><span class="p">:</span> <span class="s">&quot;bb&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="mi">3</span><span class="p">:</span> <span class="s">&quot;ccc&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">v</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">GetValue</span><span class="p">(</span><span class="nx">intmap</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/noHSLgTvdEq">https://play.golang.org/p/noHSLgTvdEq</a></p>

<ul>
<li><code>nil</code> 可以用作 <code>interface</code>、<code>function</code>、<code>pointer</code>、<code>map</code>、<code>slice</code> 和 <code>channel</code> 的"空值"。</li>
</ul>


<h1><span id="iota"> iota </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">x</span> <span class="p">=</span> <span class="kc">iota</span>
</span><span class='line'>  <span class="nx">y</span>
</span><span class='line'>  <span class="nx">z</span> <span class="p">=</span> <span class="s">&quot;zz&quot;</span>
</span><span class='line'>  <span class="nx">k</span>
</span><span class='line'>  <span class="nx">p</span> <span class="p">=</span> <span class="kc">iota</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">,</span> <span class="nx">z</span><span class="p">,</span> <span class="nx">k</span><span class="p">,</span> <span class="nx">p</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/XwtR_I0fQdp">https://play.golang.org/p/XwtR_I0fQdp</a></p>

<h1><span id="short_variable_declarations"> Short variable declarations </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span><span class="p">(</span>
</span><span class='line'>    <span class="nx">size</span> <span class="o">:=</span> <span class="mi">1024</span>
</span><span class='line'>    <span class="nx">max_size</span> <span class="p">=</span> <span class="nx">size</span><span class="o">*</span><span class="mi">2</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">size</span><span class="p">,</span><span class="nx">max_size</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/AUfpBHZg-F4">https://play.golang.org/p/AUfpBHZg-F4</a></p>

<ul>
<li><code>:=</code> 是聲明並賦值，並且系統自動推斷類型，必須放在 main function 裡面</li>
</ul>


<h1><span id="const_address"> Const Address </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="nx">cl</span>  <span class="p">=</span> <span class="mi">100</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">bl</span>    <span class="p">=</span> <span class="mi">123</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">bl</span><span class="p">,</span><span class="nx">bl</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">cl</span><span class="p">,</span><span class="nx">cl</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/dbK6-maWceJ">https://play.golang.org/p/dbK6-maWceJ</a></p>

<ul>
<li>常量不同於變數的在運行期分配記憶體，常量通常會被編譯器在預處理階段直接展開，作為指令數據使用</li>
<li><a href="https://stackoverflow.com/questions/35146286/find-address-of-constant-in-go">pointers - Find address of constant in go</a></li>
</ul>


<h1><span id="goto"> goto 位置 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">loop</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">goto</span> <span class="nx">loop</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/-0KuesWC3kM">https://play.golang.org/p/-0KuesWC3kM</a></p>

<ul>
<li>goto 必須放在 func 裡面</li>
</ul>


<h1><span id="type_alias"> Type Alias </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">type</span> <span class="nx">MyInt1</span> <span class="kt">int</span>
</span><span class='line'>  <span class="kd">type</span> <span class="nx">MyInt2</span> <span class="p">=</span> <span class="kt">int</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">i</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">9</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">i1</span> <span class="nx">MyInt1</span> <span class="p">=</span> <span class="nx">i</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">i2</span> <span class="nx">MyInt2</span> <span class="p">=</span> <span class="nx">i</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">i1</span><span class="p">,</span> <span class="nx">i2</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/ELp_QFf5-o2">https://play.golang.org/p/ELp_QFf5-o2</a></p>

<ul>
<li>基於一個類別型建立一個新類型，稱之為 defintion</li>
<li>基於一個類別型建立一個別名，稱之為 alias</li>
<li>MyInt1 為稱之為 defintion，雖然底層類型為 int 類型，但是不能直接賦值，需要強轉</li>
<li>MyInt2 稱之為 alias，可以直接賦值</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">User</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">MyUser1</span> <span class="nx">User</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">MyUser2</span> <span class="p">=</span> <span class="nx">User</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">i</span> <span class="nx">MyUser1</span><span class="p">)</span> <span class="nx">m1</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;MyUser1.m1&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">i</span> <span class="nx">User</span><span class="p">)</span> <span class="nx">m2</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;User.m2&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">i1</span> <span class="nx">MyUser1</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">i2</span> <span class="nx">MyUser2</span>
</span><span class='line'>  <span class="nx">i1</span><span class="p">.</span><span class="nx">m1</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">i2</span><span class="p">.</span><span class="nx">m2</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/2fsGAqTmUrH">https://play.golang.org/p/2fsGAqTmUrH</a></p>

<ul>
<li><code>i2.m1()</code> 會 error，因為 m1() 是 <code>MyUser1</code> 才有的 func，不是 User</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">T1</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">t</span> <span class="nx">T1</span><span class="p">)</span> <span class="nx">m1</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;T1.m1&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">T2</span> <span class="p">=</span> <span class="nx">T1</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">MyStruct</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">T1</span>
</span><span class='line'>  <span class="nx">T2</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">my</span> <span class="o">:=</span> <span class="nx">MyStruct</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">my</span><span class="p">.</span><span class="nx">m1</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/zwvjqUFLHax">https://play.golang.org/p/zwvjqUFLHax</a></p>

<ul>
<li>重複會不知道該 call 哪一個導致 error (<code>ambiguous selector my.m1</code>)，把其中一個拿掉就可以 work，或是改為 <code>my.T1.m1()</code> + <code>my.T2.m1()</code></li>
</ul>


<h1><span id="variable_scope"> if 變數作用域 </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%p\n&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">a</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%p\n&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">b</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">if</span> <span class="kc">true</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span> <span class="o">:=</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%p\n&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">b</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%p\n&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">c</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/CvqxnzGSAG9">https://play.golang.org/p/CvqxnzGSAG9</a></p>

<ul>
<li>if 的變數會遮罩函式作用域內的變數，導致裡面的 b 是新的 address</li>
</ul>


<h1><span id="closure"> closure </span></h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">test</span><span class="p">()</span> <span class="p">[]</span><span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">funs</span> <span class="p">[]</span><span class="kd">func</span><span class="p">()</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">funs</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">funs</span><span class="p">,</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">i</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">funs</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">funs</span> <span class="o">:=</span> <span class="nx">test</span><span class="p">()</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">f</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">funs</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">f</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/8RL7gO5_4EF">https://play.golang.org/p/8RL7gO5_4EF</a></p>

<ul>
<li><code>funx</code> 裡的 i 都是同一個，要不一樣要先 assign 到新的 value
<code>go
for i:=0;i&lt;2 ;i++  {
      x:=i
      funs = append(funs, func() {
          println(&amp;x,x)
      })
}
</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">test</span><span class="p">(</span><span class="nx">x</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="kd">func</span><span class="p">(),</span> <span class="kd">func</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">x</span> <span class="o">+=</span> <span class="mi">10</span>
</span><span class='line'>      <span class="p">},</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">a</span><span class="p">,</span> <span class="nx">b</span> <span class="o">:=</span> <span class="nx">test</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">a</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">b</span><span class="p">()</span>
</span><span class='line'>  
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://play.golang.org/p/5ReC78kUM3c">https://play.golang.org/p/5ReC78kUM3c</a></p>

<ul>
<li>閉包引用相同變數</li>
</ul>


<h1>Reference</h1>

<ul>
<li><a href="https://my.oschina.net/qiangmzsx/blog/1478739">Golang面試題解析</a></li>
<li><a href="https://bit.ly/2WSSgGe">Go面試題答案與解析</a></li>
<li><a href="https://my.oschina.net/qiangmzsx/blog/1515173">Golang面試題解析（二）</a></li>
<li><a href="https://my.oschina.net/qiangmzsx/blog/1533839">Golang面試題解析（三) </a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[體驗 Kubernetes]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/12/try-kubernetes/"/>
    <updated>2019-06-12T10:48:25+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/12/try-kubernetes</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>minikube 只提供 signle-node Kubernetes Cluster，本身並不支援 HA (High availability) 因此不推薦實際應用上運行</p></blockquote>

<p>Minikube 是 Kubernetes 輕量化的實作，會在本機的 VM 內建立並且執行一個單一節點的 Kubernetes Cluster。</p>

<blockquote><p>本機端操作，只有一個 Node 就是 minikube</p></blockquote>

<h1>(目前 docker 有支援 Kubernetes，可以直接使用)</h1>

<h1>安裝 virtualbox</h1>

<p>minikube 會在本機端跑起一個 vm，因此要先安裝 <a href="https://www.virtualbox.org/">virtualbox</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">cask</span> <span class="n">install</span> <span class="n">virtualbox</span>
</span></code></pre></td></tr></table></div></figure>


<h1>安裝 kuberctl (Kubernetes command-line tool)</h1>

<p>可以透過此工具來部署管理 Kubernetes <a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">Install and Set Up kubectl</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># kubectl</span>
</span><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">kubernetes</span><span class="o">-</span><span class="n">cli</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以透過 curl 來安裝 kubectl 的 binary 執行檔</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 下載套件( for MacOS )</span>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="no">LO</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//s</span><span class="n">torage</span><span class="o">.</span><span class="n">googleapis</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">kubernetes</span><span class="o">-</span><span class="n">release</span><span class="o">/</span><span class="n">release</span><span class="o">/</span><span class="err">$</span><span class="p">(</span><span class="n">curl</span> <span class="o">-</span><span class="n">s</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//s</span><span class="n">torage</span><span class="o">.</span><span class="n">googleapis</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">kubernetes</span><span class="o">-</span><span class="n">release</span><span class="o">/</span><span class="n">release</span><span class="o">/</span><span class="n">stable</span><span class="o">.</span><span class="n">txt</span><span class="p">)</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">darwin</span><span class="o">/</span><span class="n">amd64</span><span class="o">/</span><span class="n">kubectl</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 給予執行權限</span>
</span><span class='line'><span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="o">.</span><span class="n">/kubectl</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 將kubectl移到PATH下</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">mv</span> <span class="o">.</span><span class="n">/kubectl</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">kubectl</span>
</span></code></pre></td></tr></table></div></figure>


<h1>安裝 minikube</h1>

<p><a href="https://github.com/kubernetes/minikube">minikube</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">cask</span> <span class="n">install</span> <span class="n">minikube</span>
</span></code></pre></td></tr></table></div></figure>


<p>啟動 minkkube</p>

<blockquote><p>第一次啟動會自動建立下載映像檔來建立 VM 所以會比較久</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 啟用 minkkube 叢集</span>
</span><span class='line'><span class="n">minikube</span> <span class="n">start</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 停用 minkkube 叢集</span>
</span><span class='line'><span class="n">minikube</span> <span class="n">stop</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 查看狀態</span>
</span><span class='line'><span class="n">minikube</span> <span class="n">status</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 啟用 GUI dashboard</span>
</span><span class='line'><span class="n">minikube</span> <span class="n">dashboard</span>
</span><span class='line'>
</span><span class='line'><span class="n">where</span> <span class="n">minikube</span>
</span><span class='line'><span class="c1"># /usr/local/bin/minikube</span>
</span><span class='line'>
</span><span class='line'><span class="n">minikube</span> <span class="n">version</span>
</span><span class='line'><span class="c1"># minikube version: v0.32.0</span>
</span></code></pre></td></tr></table></div></figure>


<p>啟動 minikube 之後，HOME 目錄會多一個 <code>.kube</code> 的資料夾，而 kubectl 就是透過該資料夾底下的 configuration 與 minikube 溝通</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cat</span> <span class="o">~</span><span class="sr">/.kube/</span><span class="n">config</span>
</span><span class='line'>
</span><span class='line'><span class="ss">apiVersion</span><span class="p">:</span> <span class="n">v1</span>
</span><span class='line'><span class="ss">clusters</span><span class="p">:</span>
</span><span class='line'><span class="o">-</span> <span class="ss">cluster</span><span class="p">:</span>
</span><span class='line'>    <span class="n">certificate</span><span class="o">-</span><span class="ss">authority</span><span class="p">:</span> <span class="sr">/Users/</span><span class="o">[</span><span class="n">username</span><span class="o">]/.</span><span class="n">minikube</span><span class="o">/</span><span class="n">ca</span><span class="o">.</span><span class="n">crt</span>
</span><span class='line'>    <span class="ss">server</span><span class="p">:</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="mi">192</span><span class="o">.</span><span class="mi">168</span><span class="o">.</span><span class="mi">99</span><span class="o">.</span><span class="mi">100</span><span class="p">:</span><span class="mi">8443</span>
</span><span class='line'>  <span class="nb">name</span><span class="p">:</span> <span class="n">minikube</span>
</span><span class='line'><span class="ss">contexts</span><span class="p">:</span>
</span><span class='line'><span class="o">-</span> <span class="ss">context</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">cluster</span><span class="p">:</span> <span class="n">minikube</span>
</span><span class='line'>    <span class="ss">user</span><span class="p">:</span> <span class="n">minikube</span>
</span><span class='line'>  <span class="nb">name</span><span class="p">:</span> <span class="n">minikube</span>
</span><span class='line'><span class="n">current</span><span class="o">-</span><span class="ss">context</span><span class="p">:</span> <span class="n">minikube</span>
</span><span class='line'><span class="ss">kind</span><span class="p">:</span> <span class="no">Config</span>
</span><span class='line'><span class="ss">preferences</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'><span class="ss">users</span><span class="p">:</span>
</span><span class='line'><span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">minikube</span>
</span><span class='line'>  <span class="ss">user</span><span class="p">:</span>
</span><span class='line'>    <span class="n">client</span><span class="o">-</span><span class="ss">certificate</span><span class="p">:</span> <span class="sr">/Users/</span><span class="o">[</span><span class="n">username</span><span class="o">]/.</span><span class="n">minikube</span><span class="o">/</span><span class="n">client</span><span class="o">.</span><span class="n">crt</span>
</span><span class='line'>    <span class="n">client</span><span class="o">-</span><span class="ss">key</span><span class="p">:</span> <span class="sr">/Users/</span><span class="o">[</span><span class="n">username</span><span class="o">]/.</span><span class="n">minikube</span><span class="o">/</span><span class="n">client</span><span class="o">.</span><span class="n">key</span>
</span></code></pre></td></tr></table></div></figure>


<h1>執行 hello-minikube</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">kubectl</span> <span class="n">run</span> <span class="n">hello</span><span class="o">-</span><span class="n">minikube</span> <span class="o">--</span><span class="n">image</span><span class="o">=</span><span class="n">gcr</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">google_containers</span><span class="o">/</span><span class="ss">echoserver</span><span class="p">:</span><span class="mi">1</span><span class="o">.</span><span class="mi">8</span> <span class="o">--</span><span class="n">port</span><span class="o">=</span><span class="mi">8080</span>
</span><span class='line'><span class="c1"># deployment &quot;hello-minikube&quot; created</span>
</span><span class='line'>
</span><span class='line'><span class="n">kubectl</span> <span class="n">expose</span> <span class="n">deployment</span> <span class="n">hello</span><span class="o">-</span><span class="n">minikube</span> <span class="o">--</span><span class="n">type</span><span class="o">=</span><span class="no">NodePort</span>
</span><span class='line'><span class="c1"># service &quot;hello-minikube&quot; exposed</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 得到 server 的 url，每次產生的 url 是系統決定的</span>
</span><span class='line'><span class="n">minikube</span> <span class="n">service</span> <span class="n">hello</span><span class="o">-</span><span class="n">minikube</span> <span class="o">--</span><span class="n">url</span>
</span><span class='line'><span class="c1"># http://192.168.99.100:32023</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 列出所有 services 資源</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">services</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 顯示關於資源的詳細資料</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">describe</span> <span class="n">services</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 從 Pod 列印日誌</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">logs</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 從 Pod 執行命令</span>
</span><span class='line'><span class="n">kubectl</span> <span class="nb">exec</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 查看 cluster 狀態</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">cluster</span><span class="o">-</span><span class="n">info</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>run</code>：建立一個 Deployment 或是 Job 來管理被建立的 Container</li>
<li><code>--image</code>：Image 的來源，這裡是用 gcp 提供的 image</li>
<li><code>--port</code>：指定埠號</li>
<li><code>expose</code>：讓存取 hello-minikube 服務可以被存取</li>
</ul>


<h1>執行自己的 container</h1>

<h3>啟動 Pod</h3>

<ul>
<li><code>--port</code>: container 對應到 pod 的 port</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># --image: 指定 docker images 位置和版本</span>
</span><span class='line'><span class="c1"># port: container 對外 port</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">run</span> <span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span> <span class="o">--</span><span class="n">image</span><span class="o">=</span><span class="n">docker</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">mgleon08</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="ss">demo</span><span class="p">:</span><span class="n">v1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span> <span class="o">--</span><span class="n">port</span> <span class="mi">8080</span>
</span><span class='line'><span class="c1"># deployment.apps &quot;docker-golang-demo&quot; created</span>
</span></code></pre></td></tr></table></div></figure>


<h3>查看 node 裡面的 pod</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 可以查看 pods / services / deployments</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">pod</span>
</span><span class='line'><span class="c1"># NAME                                 READY     STATUS    RESTARTS   AGE</span>
</span><span class='line'><span class="c1"># docker-golang-demo-d8c764787-fxs4v   1/1       Running   0          7m</span>
</span></code></pre></td></tr></table></div></figure>


<h3>expose service 讓外部訪問</h3>

<p>default Pod 只允許 cluster 內部訪問，因此透過 expose 將 container 的 port 對應到 Node 的 port</p>

<ul>
<li><code>expose</code>: 把 deployment expose 成對外 service</li>
<li><code>--type=NodePort</code>: 把 Deployment 透過 Kubernetes Cluster 的 port 讓 Cluster 外部可以訪問</li>
</ul>


<p>service 將 <code>docker-golang-demo</code> 的 <code>8080</code> port 與 minikube 上的 <code>31754</code> port 做 mapping</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">kubectl</span> <span class="n">expose</span> <span class="n">deployment</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span> <span class="o">--</span><span class="n">type</span><span class="o">=</span><span class="no">NodePort</span> <span class="o">--</span><span class="n">port</span> <span class="mi">8080</span>
</span><span class='line'><span class="c1"># service &quot;docker-golang-demo&quot; exposed</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 隨機分發 port 31754</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">services</span>
</span><span class='line'><span class="c1"># NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE</span>
</span><span class='line'><span class="c1"># docker-golang-demo   NodePort    10.103.48.219   &lt;none&gt;        8080:31754/TCP   1m</span>
</span></code></pre></td></tr></table></div></figure>


<h3>取得外部 url</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">minikube</span> <span class="n">service</span> <span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span> <span class="o">--</span><span class="n">url</span>
</span><span class='line'><span class="c1"># http://192.168.99.100:31754</span>
</span></code></pre></td></tr></table></div></figure>


<h3>scale pod</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#  default 只有一個 一個副本 replication</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">deployments</span>
</span><span class='line'><span class="c1"># NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span>
</span><span class='line'><span class="c1"># docker-golang-demo   1         1         1            1           7m</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># scale 3 個副本</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">scale</span> <span class="n">deployments</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span> <span class="o">--</span><span class="n">replicas</span><span class="o">=</span><span class="mi">3</span>
</span><span class='line'><span class="c1"># deployment.extensions &quot;docker-golang-demo&quot; scaled</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># deployment 設定變成 3 個</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">deployment</span>
</span><span class='line'><span class="c1"># NAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span>
</span><span class='line'><span class="c1"># docker-golang-demo   3         3         3            3           31m</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 檢查副本</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">replicasets</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 可以看到 pod scale 成 3 個</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">pod</span>
</span><span class='line'><span class="c1"># NAME                                 READY     STATUS    RESTARTS   AGE</span>
</span><span class='line'><span class="c1"># docker-golang-demo-d8c764787-4shjd   1/1       Running   0          11s</span>
</span><span class='line'><span class="c1"># docker-golang-demo-d8c764787-fxs4v   1/1       Running   0          30m</span>
</span><span class='line'><span class="c1"># docker-golang-demo-d8c764787-v9lq6   1/1       Running   0          11s</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Update Container</h3>

<p>將 container update 成 v2 版本</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">kubectl</span> <span class="n">set</span> <span class="n">image</span> <span class="n">deployments</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span> <span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span><span class="o">=</span><span class="n">docker</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">mgleon08</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="ss">demo</span><span class="p">:</span><span class="n">v2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>或是編輯 deployment 更改成 v2，儲存後會自動 update</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">kubectl</span> <span class="n">edit</span> <span class="n">deployment</span> <span class="o">[</span><span class="n">deploymentName</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>打開一樣的網址 <code>http://192.168.99.100:31754</code> 會發現頁面變成 v2 了</p>

<h3>Rollout Container</h3>

<p>將 container rollout 成 v1 版本</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">kubectl</span> <span class="n">rollout</span> <span class="n">undo</span> <span class="n">deployments</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># check rollout 狀態</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">rollout</span> <span class="n">status</span> <span class="n">deployments</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 萬一有問題可以暫停</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">rollout</span> <span class="n">pause</span> <span class="n">deployments</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 歷史紀錄</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">rollout</span> <span class="n">history</span> <span class="n">deployments</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span>
</span></code></pre></td></tr></table></div></figure>


<h3>將服務刪除</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 只刪除 pod，會馬上自動在 create 新的</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">delete</span> <span class="n">pod</span> <span class="o">[</span><span class="nb">name</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 其他兩個還是會在</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">delete</span> <span class="n">service</span> <span class="o">[</span><span class="nb">name</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 刪除 deployment, service 還會留著</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">delete</span> <span class="n">deployment</span> <span class="o">[</span><span class="nb">name</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h1>透過 yaml 執行 pod</h1>

<p>demo-pod.yaml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">apiVersion</span><span class="p">:</span> <span class="n">v1</span>
</span><span class='line'><span class="ss">kind</span><span class="p">:</span> <span class="no">Pod</span>
</span><span class='line'><span class="ss">metadata</span><span class="p">:</span>
</span><span class='line'>  <span class="nb">name</span><span class="p">:</span> <span class="n">demo</span><span class="o">-</span><span class="n">pod</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">app</span><span class="p">:</span> <span class="n">webserver</span>
</span><span class='line'><span class="ss">spec</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">containers</span><span class="p">:</span>
</span><span class='line'>  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span><span class="o">-</span><span class="n">pod</span>
</span><span class='line'>    <span class="ss">image</span><span class="p">:</span> <span class="n">mgleon08</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="ss">demo</span><span class="p">:</span><span class="n">v1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'>    <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>    <span class="o">-</span> <span class="ss">containerPort</span><span class="p">:</span> <span class="mi">8080</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>apiVersion</code>: Kubernetes 版本號</li>
<li><code>kind</code>：說明 Kubernetes Object 是什麼類別</li>
<li><code>metadata</code>

<ul>
<li><code>name</code>: 指定 pod 的名稱</li>
<li><code>labels</code>: 透過 Label Selector 將Pod分群管理</li>
<li><code>annotations</code>    : 相較於labels，annotations 通常是使用者任意自定義的附加資訊，提供外部進行查詢使用，像是版本號，發佈日期等等</li>
</ul>
</li>
<li><code>spec</code>

<ul>
<li><code>container.name</code>: container 的名稱</li>
<li><code>container.image</code>: 根據 Docker Registry 提供的可下載路徑</li>
<li><code>container.ports</code>: 該 container 有哪些 port number 是允許外部資源存取</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">kubectl</span> <span class="n">create</span> <span class="o">-</span><span class="n">f</span> <span class="n">demo</span><span class="o">-</span><span class="n">pod</span><span class="o">.</span><span class="n">yaml</span>
</span><span class='line'><span class="c1"># 或 kubectl apply -f demo-pod.yaml</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">pod</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 看更多資訊</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">describe</span> <span class="n">pods</span> <span class="n">my</span><span class="o">-</span><span class="n">pod</span>
</span></code></pre></td></tr></table></div></figure>


<h3>如何與 Pod 中的 container 互動</h3>

<ul>
<li>透過 kubectl port-forward</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># port-forward 能將 pod 中的某個 port number，與本機端的 port 做 mapping</span>
</span><span class='line'><span class="c1"># 本機 3000 對應到 8080</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">port</span><span class="o">-</span><span class="n">forward</span> <span class="n">demo</span><span class="o">-</span><span class="n">pod</span> <span class="mi">3000</span><span class="p">:</span><span class="mi">8080</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>建立一個 Service</li>
</ul>


<blockquote><p>Kubernetes Cluster 內部會有一套網路系統，會替每個 Pod 建立一個內部隨機產生的 Cluster IP。這個 Cluster IP 只有Cluster內部資源可以使用；外部資源是無法透過 Cluster IP 與 Pods 互動，所以我們需要再建立一個 Service 元件作為一個橋樑，讓 Cluster 以外的服務也可以與 Pod 做互動。</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">kubectl</span> <span class="n">expose</span> <span class="n">pod</span> <span class="n">demo</span><span class="o">-</span><span class="n">pod</span> <span class="o">--</span><span class="n">type</span><span class="o">=</span><span class="no">NodePort</span> <span class="o">--</span><span class="nb">name</span><span class="o">=</span><span class="n">demo</span><span class="o">-</span><span class="n">pod</span><span class="o">-</span><span class="n">service</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">services</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 8080 對應到 minukube vm 的 31956 port</span>
</span><span class='line'><span class="c1"># NAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE</span>
</span><span class='line'><span class="c1"># demo-pod-service   NodePort    10.97.180.196   &lt;none&gt;        8080:31956/TCP   28s</span>
</span></code></pre></td></tr></table></div></figure>


<p>取得 url</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">minikube</span> <span class="n">service</span> <span class="n">demo</span><span class="o">-</span><span class="n">pod</span><span class="o">-</span><span class="n">service</span> <span class="o">--</span><span class="n">url</span>
</span><span class='line'><span class="c1"># http://192.168.99.100:31956</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用 alpine 查看 cluster 狀況</h3>

<p>alpine 提供非常輕量級的 Docker Image，藉由 Kubernetes Cluster 中，會給每個 Pod 一個 Cluster IP 且只有在 Cluster 裡才可以存取的特性，透過 alpine 來訪問其他 pod</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 先取得 IP 172.17.0.5</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">describe</span> <span class="n">pod</span> <span class="n">demo</span><span class="o">-</span><span class="n">pod</span>
</span><span class='line'><span class="c1"># 建立 alpine</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">run</span> <span class="o">-</span><span class="n">i</span> <span class="o">--</span><span class="n">tty</span> <span class="n">alpine</span> <span class="o">--</span><span class="n">image</span><span class="o">=</span><span class="n">alpine</span> <span class="o">--</span><span class="n">restart</span><span class="o">=</span><span class="no">Never</span> <span class="o">--</span> <span class="n">sh</span>
</span><span class='line'><span class="c1"># 安裝 curl</span>
</span><span class='line'><span class="n">apk</span> <span class="n">add</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">cache</span> <span class="n">curl</span>
</span><span class='line'><span class="c1"># 發 request</span>
</span><span class='line'><span class="n">curl</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="mi">172</span><span class="o">.</span><span class="mi">17</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="p">:</span><span class="mi">8080</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Pod 相關指令</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 取得目前所有的 pod</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">pods</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 顯示全部的 pod</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">pods</span> <span class="o">--</span><span class="n">show</span><span class="o">-</span><span class="n">all</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># pod 詳細資料</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">describe</span> <span class="n">pod</span> <span class="o">&lt;</span><span class="n">pod</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 將 Pod 中指定的 port number expose 出來讓外部服務存取(建立一個新的 Service 物件)</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">expose</span> <span class="n">pod</span> <span class="o">&lt;</span><span class="n">pod</span><span class="o">&gt;</span> <span class="o">--</span><span class="n">port</span><span class="o">=&lt;</span><span class="n">port</span><span class="o">&gt;</span> <span class="o">--</span><span class="nb">name</span><span class="o">=&lt;</span><span class="n">service</span><span class="o">-</span><span class="nb">name</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 將 Pod 中指定的 port number mapping 到本機端的某一特定 port number</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">port</span><span class="o">-</span><span class="n">forward</span> <span class="o">&lt;</span><span class="n">pod</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">external</span><span class="o">-</span><span class="n">port</span><span class="o">&gt;</span><span class="p">:</span><span class="o">&lt;</span><span class="n">pod</span><span class="o">-</span><span class="n">port</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 進到 container 裡面</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">attach</span> <span class="o">&lt;</span><span class="n">pod</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">i</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 對 pod 下指令</span>
</span><span class='line'><span class="n">kubectl</span> <span class="nb">exec</span> <span class="o">&lt;</span><span class="n">pod</span><span class="o">&gt;</span> <span class="o">--</span> <span class="o">&lt;</span><span class="n">command</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 新增 Pod 的 Labels</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">label</span> <span class="n">pods</span> <span class="n">demo</span><span class="o">-</span><span class="n">pod</span> <span class="n">version</span><span class="o">=</span><span class="n">latest</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 顯示所有 labels</span>
</span><span class='line'><span class="n">kubectl</span> <span class="n">get</span> <span class="n">pods</span>  <span class="o">--</span><span class="n">show</span><span class="o">-</span><span class="n">labels</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Deployment</h1>

<ul>
<li><a href="https://github.com/googlecodelabs/orchestrate-with-kubernetes/blob/master/kubernetes/deployments/auth.yaml">Deployment Example</a></li>
</ul>


<blockquote><p>管理 containers 橫向擴展(Horizontal scaling)，透過增加更多的機器節點，獲取更多資源</p></blockquote>

<ul>
<li>管理 Pod 的 replicas（副本) 和狀態維持在使用者所定義的副本數</li>
<li>Replication Controller 都有屬於自己的 yaml 檔</li>
<li>在Replication Controller設定檔中可以指定同時有多少個相同的 Pods</li>
<li>當 Pod 發生 crash, failed，而無法提供服務時，Replication Controller 會自動的砍掉無法正常執行的 Pod，並且重新建立一個新的 Pod 來維持 replicas 的數量</li>
<li>當機器重新開啟時，之前在機器上運行的 Replication Controller 會自動被建立，確保 pod 隨時都在運行。</li>
<li>ReplicaSet 和 Replication Controller 本質上是相同的，差別在於 ReplicaSet 支援集合式的 selector，而 Replication Controller 只支援等式的 selector</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">apiVersion</span><span class="p">:</span> <span class="n">v1</span>
</span><span class='line'><span class="ss">kind</span><span class="p">:</span> <span class="no">Deployment</span>
</span><span class='line'><span class="ss">metadata</span><span class="p">:</span>
</span><span class='line'>  <span class="nb">name</span><span class="p">:</span> <span class="n">demo</span><span class="o">-</span><span class="n">pod</span><span class="o">-</span><span class="n">replication</span>
</span><span class='line'><span class="ss">spec</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">replicas</span><span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>  <span class="ss">selector</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">app</span><span class="p">:</span> <span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span><span class="o">-</span><span class="n">pod</span>
</span><span class='line'>  <span class="ss">template</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">metadata</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">labels</span><span class="p">:</span>
</span><span class='line'>        <span class="ss">app</span><span class="p">:</span> <span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span><span class="o">-</span><span class="n">pod</span>
</span><span class='line'>    <span class="ss">spec</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">containers</span><span class="p">:</span>
</span><span class='line'>      <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="n">demo</span><span class="o">-</span><span class="n">pod</span>
</span><span class='line'>        <span class="ss">image</span><span class="p">:</span> <span class="n">mgleon08</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">golang</span><span class="o">-</span><span class="ss">demo</span><span class="p">:</span><span class="n">v1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'>        <span class="ss">ports</span><span class="p">:</span>
</span><span class='line'>        <span class="o">-</span> <span class="ss">containerPort</span><span class="p">:</span> <span class="mi">8080</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>spec.replicas</code>: pod 副本的數量</li>
<li><code>spec.selector</code>: 指定選擇 Pod 的條件(labels)</li>
<li><code>spec.template</code>: 定義pod的資訊，包含Pod的labels以及Pod中要運行的container</li>
<li><code>spec.template.metadata</code>: Pod 的 labels，<code>metadata.labels</code> 必須被包含在select中，否則在建立Replication Controller物件時，會發生error。</li>
</ul>


<h1>Service</h1>

<ul>
<li><a href="https://github.com/googlecodelabs/orchestrate-with-kubernetes/blob/master/kubernetes/services/auth.yaml">Service example</a></li>
</ul>


<h1><span id="hellokube"> Hello Node Kubernetes <span></h1>

<h2>Create your Node.js application</h2>

<p>建立小型 server.js</p>

<p>server.js</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="p">=</span> <span class="nx">require</span><span class="p">(</span><span class="err">&#39;</span><span class="nx">http</span><span class="err">&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">handleRequest</span> <span class="p">=</span> <span class="nx">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s">&quot;Hello World!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">www</span> <span class="p">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">handleRequest</span><span class="p">);</span>
</span><span class='line'><span class="nx">www</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8080</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>建立 Dockfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">FROM</span> <span class="nx">node</span><span class="p">:</span><span class="mf">6.9.2</span>
</span><span class='line'><span class="nx">EXPOSE</span> <span class="mi">8080</span>
</span><span class='line'><span class="nx">COPY</span> <span class="nx">server</span><span class="p">.</span><span class="nx">js</span> <span class="p">.</span>
</span><span class='line'><span class="nx">CMD</span> <span class="nx">node</span> <span class="nx">server</span><span class="p">.</span><span class="nx">js</span>
</span></code></pre></td></tr></table></div></figure>


<p>Build image &amp; push image</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">docker</span> <span class="nx">build</span> <span class="o">-</span><span class="nx">t</span> <span class="nx">gcr</span><span class="p">.</span><span class="nx">io</span><span class="o">/</span><span class="nx">PROJECT_ID</span><span class="o">/</span><span class="nx">hello</span><span class="o">-</span><span class="nx">node</span><span class="p">:</span><span class="nx">v1</span> <span class="p">.</span>
</span><span class='line'><span class="nx">docker</span> <span class="nx">push</span> <span class="nx">gcr</span><span class="p">.</span><span class="nx">io</span><span class="o">/</span><span class="nx">PROJECT_ID</span><span class="o">/</span><span class="nx">hello</span><span class="o">-</span><span class="nx">node</span><span class="p">:</span><span class="nx">v1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create clusters</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">gcloud</span> <span class="nx">config</span> <span class="nx">set</span> <span class="nx">project</span> <span class="nx">PROJECT_ID</span>
</span><span class='line'><span class="nx">gcloud</span> <span class="nx">container</span> <span class="nx">clusters</span> <span class="nx">create</span> <span class="nx">hello</span><span class="o">-</span><span class="nx">world</span> \
</span><span class='line'>                <span class="o">--</span><span class="nx">num</span><span class="o">-</span><span class="nx">nodes</span> <span class="mi">2</span> \
</span><span class='line'>                <span class="o">--</span><span class="nx">machine</span><span class="o">-</span><span class="kd">type</span> <span class="nx">n1</span><span class="o">-</span><span class="nx">standard</span><span class="o">-</span><span class="mi">1</span> \
</span><span class='line'>                <span class="o">--</span><span class="nx">zone</span> <span class="nx">us</span><span class="o">-</span><span class="nx">central1</span><span class="o">-</span><span class="nx">a</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create your pod</h2>

<p>Run Kubernetes</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">run</span> <span class="nx">hello</span><span class="o">-</span><span class="nx">node</span> \
</span><span class='line'>    <span class="o">--</span><span class="nx">image</span><span class="p">=</span><span class="nx">gcr</span><span class="p">.</span><span class="nx">io</span><span class="o">/</span><span class="nx">PROJECT_ID</span><span class="o">/</span><span class="nx">hello</span><span class="o">-</span><span class="nx">node</span><span class="p">:</span><span class="nx">v1</span> \
</span><span class='line'>    <span class="o">--</span><span class="nx">port</span><span class="p">=</span><span class="mi">8080</span>
</span></code></pre></td></tr></table></div></figure>


<p>kubectl info</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">cluster</span><span class="o">-</span><span class="nx">info</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">config</span> <span class="nx">view</span>
</span></code></pre></td></tr></table></div></figure>


<p>troubleshooting</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">events</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">logs</span> <span class="p">&lt;</span><span class="nx">pod</span><span class="o">-</span><span class="nx">name</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Allow external traffic</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">expose</span> <span class="nx">deployment</span> <span class="nx">hello</span><span class="o">-</span><span class="nx">node</span> <span class="o">--</span><span class="kd">type</span><span class="p">=</span><span class="s">&quot;LoadBalancer&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>CLUSTER-IP</code> is the internal IP that is only visible inside your cloud virtual network</li>
<li><code>EXTERNAL-IP</code> is the external load-balanced IP.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">services</span>
</span><span class='line'><span class="c1">// NAME         TYPE           CLUSTER-IP     EXTERNAL-IP    PORT(S)          AGE</span>
</span><span class='line'><span class="c1">// hello-node   LoadBalancer   10.31.250.28   35.193.18.36   8080:32123/TCP   90s</span>
</span><span class='line'><span class="c1">// kubernetes   ClusterIP      10.31.240.1    &lt;none&gt;         443/TCP          14m</span>
</span><span class='line'>
</span><span class='line'><span class="nx">curl</span> <span class="nx">http</span><span class="p">:</span><span class="c1">//&lt;EXTERNAL_IP&gt;:8080</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Scale up your service</h2>

<p><img src="https://cdn.qwiklabs.com/xcK5q7mZsGBWS%2BPbytdmF0W%2BdsZxvNXdOIEPBXX13X4%3D" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">deployment</span>
</span><span class='line'><span class="c1">// NAME         DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span>
</span><span class='line'><span class="c1">// hello-node   1         1         1            1           8m35s</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">scale</span> <span class="nx">deployment</span> <span class="nx">hello</span><span class="o">-</span><span class="nx">node</span> <span class="o">--</span><span class="nx">replicas</span><span class="p">=</span><span class="mi">4</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">deployment</span>
</span><span class='line'><span class="c1">// NAME         DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span>
</span><span class='line'><span class="c1">// hello-node   4         4         4            4           8m45s</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span>
</span><span class='line'><span class="c1">// NAME                          READY   STATUS    RESTARTS   AGE</span>
</span><span class='line'><span class="c1">// hello-node-85558f76d7-5cm57   1/1     Running   0          52s</span>
</span><span class='line'><span class="c1">// hello-node-85558f76d7-fqrfs   1/1     Running   0          52s</span>
</span><span class='line'><span class="c1">// hello-node-85558f76d7-gh6r7   1/1     Running   0          52s</span>
</span><span class='line'><span class="c1">// hello-node-85558f76d7-n8dg7   1/1     Running   0          9m34s</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Roll out an upgrade to your service</h2>

<ul>
<li><a href="https://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/">Performing a Rolling Update</a></li>
</ul>


<p>Edit <code>server.js</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="p">=</span> <span class="nx">require</span><span class="p">(</span><span class="err">&#39;</span><span class="nx">http</span><span class="err">&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">handleRequest</span> <span class="p">=</span> <span class="nx">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s">&quot;Hello Kubernetes World!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">www</span> <span class="p">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">handleRequest</span><span class="p">);</span>
</span><span class='line'><span class="nx">www</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8080</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">docker</span> <span class="nx">build</span> <span class="o">-</span><span class="nx">t</span> <span class="nx">gcr</span><span class="p">.</span><span class="nx">io</span><span class="o">/</span><span class="nx">PROJECT_ID</span><span class="o">/</span><span class="nx">hello</span><span class="o">-</span><span class="nx">node</span><span class="p">:</span><span class="nx">v2</span> <span class="p">.</span>
</span><span class='line'><span class="nx">docker</span> <span class="nx">push</span> <span class="nx">gcr</span><span class="p">.</span><span class="nx">io</span><span class="o">/</span><span class="nx">PROJECT_ID</span><span class="o">/</span><span class="nx">hello</span><span class="o">-</span><span class="nx">node</span><span class="p">:</span><span class="nx">v2</span>
</span></code></pre></td></tr></table></div></figure>


<p>更改 deployment</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">edit</span> <span class="nx">deployment</span> <span class="nx">hello</span><span class="o">-</span><span class="nx">node</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// gcr.io/PROJECT_ID/hello-node:v1 to gcr.io/PROJECT_ID/hello-node:v2.</span>
</span></code></pre></td></tr></table></div></figure>


<p>更改完後 pod 也會自動重新跑新的 image</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span>
</span></code></pre></td></tr></table></div></figure>


<p>重新 <code>curl http://&lt;EXTERNAL_IP&gt;:8080</code> 會發現字就變了</p>

<h1><span id='kubegoogle'> Kubernetes in the Google Cloud </span></h1>

<h2>Example</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">run</span> <span class="nx">nginx</span> <span class="o">--</span><span class="nx">image</span><span class="p">=</span><span class="nx">nginx</span><span class="p">:</span><span class="mf">1.10.0</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span>
</span><span class='line'><span class="c1">// NAME                     READY   STATUS    RESTARTS   AGE</span>
</span><span class='line'><span class="c1">// nginx-5fc69dfb5d-sql2p   1/1     Running   0          26s</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">deployments</span>
</span><span class='line'><span class="c1">// Kubernetes has created a deployment</span>
</span><span class='line'><span class="c1">// NAME    DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span>
</span><span class='line'><span class="c1">// nginx   1         1         1            1           40s</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">services</span>
</span><span class='line'><span class="c1">// NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span>
</span><span class='line'><span class="c1">// kubernetes   ClusterIP   10.7.240.1   &lt;none&gt;        443/TCP   2m40s</span>
</span></code></pre></td></tr></table></div></figure>


<p>Expose it outside use loadbalancer</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">expose</span> <span class="nx">deployment</span> <span class="nx">nginx</span> <span class="o">--</span><span class="nx">port</span> <span class="mi">80</span> <span class="o">--</span><span class="kd">type</span> <span class="nx">LoadBalancer</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">services</span>
</span><span class='line'><span class="c1">// NAME         TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)        AGE</span>
</span><span class='line'><span class="c1">// kubernetes   ClusterIP      10.7.240.1     &lt;none&gt;           443/TCP        5m46s</span>
</span><span class='line'><span class="c1">// nginx        LoadBalancer   10.7.254.135   35.225.252.109   80:30560/TCP   76s</span>
</span></code></pre></td></tr></table></div></figure>


<p>Curl</p>

<p><code>curl http://35.225.252.109:80</code></p>

<h2>Pods</h2>

<p><img src="https://cdn.qwiklabs.com/tzvM5wFnfARnONAXX96nz8OgqOa1ihx6kCk%2BelMakfw%3D" alt="" /></p>

<p>Logical Application</p>

<ul>
<li>One or More containers and volumes</li>
<li>Shared namespaces</li>
<li>One IP per pod</li>
</ul>


<p><a href="https://github.com/googlecodelabs/orchestrate-with-kubernetes/blob/master/kubernetes/pods/monolith.yaml">pods/monolith.yaml</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// create pod</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">pods</span><span class="o">/</span><span class="nx">monolith</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span>
</span><span class='line'><span class="c1">// NAME                     READY   STATUS    RESTARTS   AGE</span>
</span><span class='line'><span class="c1">// monolith                 1/1     Running   0          58s</span>
</span><span class='line'><span class="c1">// nginx-5fc69dfb5d-sql2p   1/1     Running   0          10m</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// get more detail with pod</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">describe</span> <span class="nx">pods</span> <span class="nx">monolith</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Interacting with Pods</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// local 10080 to pod 80</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">port</span><span class="o">-</span><span class="nx">forward</span> <span class="nx">monolith</span> <span class="mi">10080</span><span class="p">:</span><span class="mi">80</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// with secure api，password &quot;password&quot; </span>
</span><span class='line'><span class="nx">TOKEN</span><span class="p">=</span><span class="err">$</span><span class="p">(</span><span class="nx">curl</span> <span class="nx">http</span><span class="p">:</span><span class="c1">//127.0.0.1:10080/login -u user|jq -r &#39;.token&#39;)</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">H</span> <span class="s">&quot;Authorization: Bearer $TOKEN&quot;</span> <span class="nx">http</span><span class="p">:</span><span class="c1">//127.0.0.1:10080/secure</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// log</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">logs</span> <span class="nx">monolith</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">logs</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">monolith</span>
</span></code></pre></td></tr></table></div></figure>


<p>Curl</p>

<p><code>curl http://127.0.0.1:10080</code></p>

<h1>Run an interactive shell</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">exec</span> <span class="nx">monolith</span> <span class="o">--</span><span class="nx">stdin</span> <span class="o">--</span><span class="nx">tty</span> <span class="o">-</span><span class="nx">c</span> <span class="nx">monolith</span> <span class="o">/</span><span class="nx">bin</span><span class="o">/</span><span class="nx">sh</span>
</span><span class='line'><span class="nx">ping</span> <span class="o">-</span><span class="nx">c</span> <span class="mi">3</span> <span class="nx">google</span><span class="p">.</span><span class="nx">com</span>
</span><span class='line'><span class="nx">exit</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Services</h2>

<p><img src="https://cdn.qwiklabs.com/Jg0T%2F326ASwqeD1vAUPBWH5w1D%2F0oZn6z5mQ5MubwL8%3D" alt="" /></p>

<p>Persistent Endpoint for pods</p>

<ul>
<li>Uses labels to select pod</li>
<li>Internal or External IPs</li>
</ul>


<p>Type</p>

<ul>
<li><code>ClusterIP (internal)</code> &ndash; the default type means that this Service is only visible inside of the cluster,</li>
<li><code>NodePort</code> gives each node in the cluster an externally accessible IP</li>
<li><code>LoadBalancer</code> adds a load balancer from the cloud provider which forwards traffic from the service to Nodes within it.</li>
</ul>


<p><a href="https://github.com/googlecodelabs/orchestrate-with-kubernetes/blob/master/kubernetes/pods/secure-monolith.yaml">pods/secure-monolith.yaml</a></p>

<p>create pod</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="nx">secret</span> <span class="nx">generic</span> <span class="nx">tls</span><span class="o">-</span><span class="nx">certs</span> <span class="o">--</span><span class="nx">from</span><span class="o">-</span><span class="nx">file</span> <span class="nx">tls</span><span class="o">/</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="nx">configmap</span> <span class="nx">nginx</span><span class="o">-</span><span class="nx">proxy</span><span class="o">-</span><span class="nx">conf</span> <span class="o">--</span><span class="nx">from</span><span class="o">-</span><span class="nx">file</span> <span class="nx">nginx</span><span class="o">/</span><span class="nx">proxy</span><span class="p">.</span><span class="nx">conf</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">pods</span><span class="o">/</span><span class="nx">secure</span><span class="o">-</span><span class="nx">monolith</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span>
</span><span class='line'><span class="c1">// NAME                     READY   STATUS    RESTARTS   AGE</span>
</span><span class='line'><span class="c1">// monolith                 1/1     Running   0          20m</span>
</span><span class='line'><span class="c1">// nginx-5fc69dfb5d-sql2p   1/1     Running   0          29m</span>
</span><span class='line'><span class="c1">// secure-monolith          2/2     Running   0          20s</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Explore the monolith service</h3>

<p><a href="https://github.com/googlecodelabs/orchestrate-with-kubernetes/blob/master/kubernetes/services/monolith.yaml">services/monolith.yaml</a></p>

<p>create service</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">services</span><span class="o">/</span><span class="nx">monolith</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">services</span>
</span><span class='line'><span class="c1">// NAME         TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)         AGE</span>
</span><span class='line'><span class="c1">// kubernetes   ClusterIP      10.7.240.1     &lt;none&gt;           443/TCP         34m</span>
</span><span class='line'><span class="c1">// monolith     NodePort       10.7.247.31    &lt;none&gt;           443:31000/TCP   8s</span>
</span><span class='line'><span class="c1">// nginx        LoadBalancer   10.7.254.135   35.225.252.109   80:30560/TCP    30m</span>
</span></code></pre></td></tr></table></div></figure>


<p>but now can&rsquo;t access because not have labels</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">describe</span> <span class="nx">services</span> <span class="nx">monolith</span>
</span><span class='line'><span class="c1">// Name:                     monolith</span>
</span><span class='line'><span class="c1">// Namespace:                default</span>
</span><span class='line'><span class="c1">// Labels:                   &lt;none&gt;</span>
</span><span class='line'><span class="c1">// Annotations:              &lt;none&gt;</span>
</span><span class='line'><span class="c1">// Selector:                 app=monolith,secure=enabled</span>
</span><span class='line'><span class="c1">// Type:                     NodePort</span>
</span><span class='line'><span class="c1">// IP:                       10.7.247.31</span>
</span><span class='line'><span class="c1">// Port:                     &lt;unset&gt;  443/TCP</span>
</span><span class='line'><span class="c1">// TargetPort:               443/TCP</span>
</span><span class='line'><span class="c1">// NodePort:                 &lt;unset&gt;  31000/TCP</span>
</span><span class='line'><span class="c1">// Endpoints:                &lt;none&gt;</span>
</span><span class='line'><span class="c1">// Session Affinity:         None</span>
</span><span class='line'><span class="c1">// External Traffic Policy:  Cluster</span>
</span><span class='line'><span class="c1">// Events:                   &lt;none&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Adding Labels to Pods</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// show label app=monolith pods</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span> <span class="o">-</span><span class="nx">l</span> <span class="s">&quot;app=monolith&quot;</span>
</span><span class='line'><span class="c1">// NAME              READY   STATUS    RESTARTS   AGE</span>
</span><span class='line'><span class="c1">// monolith          1/1     Running   0          29m</span>
</span><span class='line'><span class="c1">// secure-monolith   2/2     Running   0          9m38s</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// show label app=monolith &amp; secure=enabled pods</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span> <span class="o">-</span><span class="nx">l</span> <span class="s">&quot;app=monolith,secure=enabled&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span> <span class="o">--</span><span class="nx">show</span><span class="o">-</span><span class="nx">labels</span>
</span><span class='line'><span class="c1">// NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span>
</span><span class='line'><span class="c1">// monolith                 1/1     Running   0          31m   app=monolith</span>
</span><span class='line'><span class="c1">// nginx-5fc69dfb5d-sql2p   1/1     Running   0          41m   pod-template-hash=5fc69dfb5d,run=nginx</span>
</span><span class='line'><span class="c1">// secure-monolith          2/2     Running   0          12m   app=monolith,secure=enabled</span>
</span></code></pre></td></tr></table></div></figure>


<p>get Endpoints</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">describe</span> <span class="nx">services</span> <span class="nx">monolith</span> <span class="p">|</span> <span class="nx">grep</span> <span class="nx">Endpoints</span>
</span><span class='line'><span class="nx">gcloud</span> <span class="nx">compute</span> <span class="nx">instances</span> <span class="nx">list</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">k</span> <span class="nx">https</span><span class="p">:</span><span class="c1">//&lt;EXTERNAL_IP&gt;:31000</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Deployments</h2>

<p>Drive current state towards desired state</p>

<p><a href="https://github.com/googlecodelabs/orchestrate-with-kubernetes/tree/master/kubernetes/deployments">orchestrate-with-kubernetes/kubernetes/deployments/</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">deployments</span><span class="o">/</span><span class="nx">auth</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">services</span><span class="o">/</span><span class="nx">auth</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">deployments</span><span class="o">/</span><span class="nx">hello</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">services</span><span class="o">/</span><span class="nx">hello</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="nx">configmap</span> <span class="nx">nginx</span><span class="o">-</span><span class="nx">frontend</span><span class="o">-</span><span class="nx">conf</span> <span class="o">--</span><span class="nx">from</span><span class="o">-</span><span class="nx">file</span><span class="p">=</span><span class="nx">nginx</span><span class="o">/</span><span class="nx">frontend</span><span class="p">.</span><span class="nx">conf</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">deployments</span><span class="o">/</span><span class="nx">frontend</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">create</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">services</span><span class="o">/</span><span class="nx">frontend</span><span class="p">.</span><span class="nx">yaml</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">services</span> <span class="nx">frontend</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">k</span> <span class="nx">https</span><span class="p">:</span><span class="c1">//&lt;EXTERNAL-IP&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1><span id="tool"> Tool <span></h1>

<ul>
<li><a href="https://github.com/ahmetb/kubectx">kubectx</a></li>
<li><a href="https://github.com/junegunn/fzf">fzf</a></li>
</ul>


<p>Config setting</p>

<p><a href="https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/#set-the-kubeconfig-environment-variable">Configure Access to Multiple Clusters - Kubernetes</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">export</span> <span class="nx">KUBECONFIG</span><span class="p">=</span><span class="err">$</span><span class="nx">HOME</span><span class="o">/</span><span class="p">.</span><span class="nx">kube</span><span class="o">/</span><span class="nx">config</span><span class="p">:</span><span class="err">$</span><span class="nx">HOME</span><span class="o">/</span><span class="p">.</span><span class="nx">kube</span><span class="o">/</span><span class="nx">staging</span><span class="o">-</span><span class="mi">1</span><span class="nx">a</span><span class="p">:</span><span class="err">$</span><span class="nx">HOME</span><span class="o">/</span><span class="p">.</span><span class="nx">kube</span><span class="o">/</span><span class="nx">staging</span><span class="o">-</span><span class="mi">1</span><span class="nx">b</span><span class="p">:</span><span class="err">$</span><span class="nx">HOME</span><span class="o">/</span><span class="p">.</span><span class="nx">kube</span><span class="o">/</span><span class="nx">prod</span><span class="o">-</span><span class="mi">1</span><span class="nx">a</span><span class="p">:</span><span class="err">$</span><span class="nx">HOME</span><span class="o">/</span><span class="p">.</span><span class="nx">kube</span><span class="o">/</span><span class="nx">prod</span><span class="o">-</span><span class="mi">1</span><span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure>


<h3>change kube staging, production</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectx</span>
</span></code></pre></td></tr></table></div></figure>


<p>try connect</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span>
</span></code></pre></td></tr></table></div></figure>


<p>namespace</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span> <span class="o">--</span><span class="nx">namespace</span> <span class="nx">search</span>
</span><span class='line'><span class="nx">kubectl</span> <span class="nx">get</span> <span class="nx">pods</span> <span class="o">--</span><span class="nx">n</span> <span class="nx">search</span>
</span></code></pre></td></tr></table></div></figure>


<p>current namespace</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">config</span> <span class="nx">view</span> <span class="p">|</span> <span class="nx">grep</span> <span class="nx">namespace</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>entry another namespace pod</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="o">-</span><span class="nx">n</span> <span class="nx">search</span> <span class="nx">exec</span> <span class="o">-</span><span class="nx">it</span> <span class="p">[</span><span class="nx">pod</span> <span class="nx">name</span><span class="p">]</span> <span class="nx">sh</span>
</span></code></pre></td></tr></table></div></figure>


<p>entry container</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">kubectl</span> <span class="nx">exec</span> <span class="o">-</span><span class="nx">it</span> <span class="p">[</span><span class="nx">pod</span> <span class="nx">name</span><span class="p">]</span> <span class="nx">sh</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件</p>

<ul>
<li><a href="https://neighborhood999.github.io/2018/08/27/learing-k8s-by-minikube/">Kubernetes 初體驗 By minikube</a></li>
<li><a href="https://ithelp.ithome.com.tw/users/20103753/ironman/1590">Kubernetes 30天學習筆記</a></li>
<li><a href="https://blog.techbridge.cc/2018/12/01/kubernetes101-introduction-tutorial/">Kubernetes 與 minikube 入門教學</a></li>
<li><a href="https://blog.gcp.expert/kubernetes-gke-introduction/">GKE 系列文章(一) – 為什麼使用 Kubernetes</a></li>
<li><a href="https://google.qwiklabs.com/focuses/564?parent=catalog">Hello Node Kubernetes</a></li>
<li><a href="https://www.qwiklabs.com/focuses/557?parent=catalog">Orchestrating the Cloud with Kubernetes</a></li>
<li><a href="https://kubernetes.io/docs/reference/kubectl/overview/">Overview of kubectl</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kubernetes - 認識 Kubernetes]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/11/start-kubernetes/"/>
    <updated>2019-06-11T10:47:15+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/11/start-kubernetes</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>微服務架構的形成</h1>

<h3>傳統單體架構(Monolithic Architecture)的服務會造成巨大的不便。</h3>

<ol>
<li><code>龐大且複雜的程式碼</code>: 除錯、新增功能與測試都包在一起，變得十分複雜</li>
<li><code>容易以低效率的開發方式進行</code>: 利用新語言和新框架將更為困難，因為搬移或更動將耗費巨大成本</li>
<li><code>不利於敏捷開發</code>: 現今的服務幾乎是每天更新，單體架構會讓這件事變得很耗時間</li>
<li><code>可靠性低</code>: 單體架構是將所有的模組均建構在一個程序(process)內，當其中一環有bug時，容易牽一髮動全身</li>
</ol>


<p><img src="https://blog.gcp.expert/material/2017/02/monolithic-service.png" alt="monolithic-service" /></p>

<h3>微服務(microservices) 則將每一個具有商業邏輯的服務獨立出來。</h3>

<ol>
<li>將龐大的專案拆成幾個不同面向的小專案，當程式碼夠小、容易理解、開發效率能被提高</li>
<li>每個服務也可以依照自己的需求，選擇在不同機器上部署</li>
<li>各團隊可以依照自己的需求使用適合自己的語言、資料庫開發</li>
<li>各個服務之間也可獨立部署，不因一個服務癱瘓而癱瘓整個系統</li>
</ol>


<p><img src="https://blog.gcp.expert/material/2017/02/microservices-768x784.png" alt="microservices" /></p>

<h1>Kubernetes 好處</h1>

<blockquote><p>協助自動化部署（automating deployment)、自動擴展（scaling)、管理容器應用程式（containerized applications)、指揮調度（Orchestration）</p></blockquote>

<ul>
<li>同時部署多個 containers 到一台機器上，甚至多台機器。</li>
<li>可以很容易更新容器版本並 rollback 回之前版本</li>
<li>當定義好部屬服務需求，很容易因應流量進行 Auto Scaling，可以從一台機器，延展到多台機器共同運行。</li>
<li>自動分配容器相對應的 IP 位址，透過 Service cluster 達到 load balancing 效果</li>
<li>管理各個 container 的狀態，當 Container Application 出現 crash 時，可以根據部屬定義的需求，自動偵測重啟服務</li>
</ul>


<h1>Kubernetes 架構介紹</h1>

<p><img src="https://1.bp.blogspot.com/-VMBcuIeUCx0/W26-OBALRvI/AAAAAAAABho/ayhh3n6DgHYl_SY9CLece-B-JQs1fTq3QCLcBGAs/s1600/kubernetes%2Barchitecture%2Bexplained.jpg" alt="" /></p>

<h3>Master Node</h3>

<ol>
<li>大總管，可做為主節點</li>
<li>主要負責管理叢集，協調所有在叢集的活動，像是調度應用程式、保持應用程式的狀態，擴展應用程式，以及滾動更新。</li>
<li>包含 Etcd, API Server, Controller Manager Server</li>
</ol>


<h3>Node - Worker Machine</h3>

<ol>
<li>主要工作的節點，上面運行了許多容器</li>
<li>一個 Node 是一個 VM 或一個實體的主機</li>
<li>一台虛擬機，K8S可操控高達1,000個nodes以上</li>
<li>包含 Kubelet, Proxy, Pod, Container</li>
<li><p>一個 Node 可能有一個或者是多個 Pod</p></li>
<li><p>每個 Node 都會執行一個 Container 的 Runtime，主要是拉取 Image 並執行 Container</p></li>
</ol>


<blockquote><p>masters和nodes組成叢集(Clusters)</p></blockquote>

<h3>iptables</h3>

<ol>
<li>每個 Node 都有屬於它自己的 iptables，iptables 是 Linux 上的防火牆(firewall)，不只限制哪些連線可以連進來，也會管理網路連線，決定收到的 request 要交給哪個 Pod</li>
</ol>


<h3>Kubelet</h3>

<ol>
<li>Node 上都會有 kubelet，用於管理該 Node 上的所有 pods 以及與 master node 即時溝通</li>
</ol>


<h3>Kube-proxy</h3>

<ol>
<li>kube-proxy 會將目前該 Node 上所有 Pods 的資訊傳給 iptables，讓 iptables 即時獲得在該 Node 上所有 Pod 的最新狀態</li>
<li>舉例當一個 Pod 物件被建立時，kube-proxy 會通知 iptables，以確保該 Pod 可以被 Kubernetes Cluster 中的其他物件存取。</li>
</ol>


<p><img src="https://github.com/zxcvbnius/k8s-30-day-sharing/blob/master/Day06/kubernetes-orverview.png?raw=true" alt="" /></p>

<h3>Pod</h3>

<blockquote><p>容器是位於 pod 內部，一個 pod 包覆著一個以上的 Container，這造成 K8S 與一般容器不同的操作概念。在Docker裡，Docker container 是最小單位。</p></blockquote>

<ol>
<li>Pod 是 Kubernetes 裡面最小的單位</li>
<li>在 Pod 裡面可以有一個或多個 container，並共享相同資源，Volume、Storage、Network 資源以及配置設定</li>
<li>Pod 採取shared IP，內部所有的 container 皆使用同一個Pod IP，因此可以互相溝通，這也與Docker不同</li>
<li>Pod 內的 container 就像是生命共同體，一旦 Pod 被調度，所有 Pod 內的 container 也會一起被調度</li>
<li>一個給定的 Pod（UID 被定義）不會被調度到新的 Node 上，而是由一個全新相同而且帶著不同的 UID Pod 取代</li>
<li>Pod 在建立後，會擁有一個 Unique ID</li>
<li>Pod 擁有不確定的 <a href="https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/">Pod Lifecycle</a>，這意味著您不曉得任一pod是否會永久保留</li>
</ol>


<h3>Service</h3>

<blockquote><p>Service 元件作為一個橋樑，讓 Cluster 以外的服務也可以與 Pod 做互動。</p></blockquote>

<ol>
<li>每個Service包含著一個以上的pod</li>
<li>每個Service有個獨立且固定的IP地址 – Cluster IP，不會因為 Pod 關閉重啟而喪失原來的 IP 位置。</li>
<li>客戶端訪問Service時，會經由上述提過的proxy來達到負載平衡、與各pod連結的結果</li>
<li>利用標籤選擇器(Label Selector)，聰明地選擇那些已貼上標籤的pod</li>
</ol>


<h3>Deployments (舊版為 Replication Controller)</h3>

<blockquote><p>Deployments顧名思義掌控了部署Kubernetes服務的一切。它主要掌管了Replica Set的個數，而Replica Set的組成就是一個以上的Pod。</p></blockquote>

<ol>
<li>Deployments 的設定檔(底下以YAML格式為例)，可以指定replica，並保證在該replica的數量運作</li>
<li>Deployments 會檢查pod的狀態</li>
<li>Deployments 下可執行滾動更新或者回滾</li>
<li>Deployment 為管理 Pod 的 Controller，可視一組 Deployment 為一組應用服務</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">extensions/v1beta1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Deployment</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-deployment</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">3</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx:1.7.9</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">containerPort</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">80</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Reference</h1>

<ul>
<li><a href="https://neighborhood999.github.io/2018/08/27/learing-k8s-by-minikube/">Kubernetes 初體驗 By minikube</a></li>
<li><a href="https://ithelp.ithome.com.tw/users/20103753/ironman/1590">Kubernetes 30天學習筆記</a></li>
<li><a href="https://blog.techbridge.cc/2018/12/01/kubernetes101-introduction-tutorial/">Kubernetes 與 minikube 入門教學</a></li>
<li><a href="https://blog.gcp.expert/kubernetes-gke-introduction/">GKE 系列文章(一) – 為什麼使用 Kubernetes</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Postgres]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/04/postgres/"/>
    <updated>2019-06-04T18:56:17+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/04/postgres</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>install</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">postgresql</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Initdb</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">initdb</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="k">local</span><span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">postgres</span> <span class="o">-</span><span class="n">E</span> <span class="n">utf8</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Connect postgresql</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create DB</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">createdb</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">-- into postgres</span>
</span><span class='line'><span class="n">psql</span>
</span><span class='line'><span class="c1">-- show all database</span>
</span><span class='line'><span class="o">/</span><span class="n">l</span>
</span><span class='line'><span class="c1">-- create database</span>
</span><span class='line'><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">dbname</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Connect to database</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span>
</span><span class='line'><span class="err">\</span><span class="n">l</span>
</span><span class='line'><span class="err">\</span><span class="k">c</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="err">\</span><span class="n">l</span> <span class="c1">-- List databases</span>
</span><span class='line'><span class="err">\</span><span class="n">dt</span> <span class="o">*</span><span class="p">.</span><span class="o">*</span> <span class="c1">-- List tables from all schemas</span>
</span><span class='line'><span class="err">\</span><span class="n">dt</span> <span class="c1">-- List current path tables</span>
</span><span class='line'><span class="err">\</span><span class="n">dn</span> <span class="c1">-- List Schema</span>
</span><span class='line'><span class="err">\</span><span class="n">di</span> <span class="c1">-- List Index</span>
</span><span class='line'><span class="err">\</span><span class="n">dt</span><span class="o">+</span> <span class="c1">-- List Table</span>
</span><span class='line'><span class="err">\</span><span class="n">d</span><span class="o">+</span> <span class="o">&lt;</span><span class="n">tablename</span><span class="o">&gt;</span> <span class="c1">-- List Column</span>
</span><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="o">&lt;</span><span class="n">tablename</span><span class="o">&gt;</span> <span class="c1">-- List Record</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dump db</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">pg_dump</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">filename</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Import db</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span> <span class="o">&lt;</span><span class="n">filename</span><span class="o">&gt;</span> <span class="o">&lt;</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Connect to a remote database</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">psql</span> <span class="o">-</span><span class="n">h</span> <span class="o">&lt;</span><span class="k">host</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">p</span> <span class="o">&lt;</span><span class="n">port</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">U</span> <span class="o">&lt;</span><span class="n">username</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create User</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">createuser</span> <span class="n">testuser</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- or</span>
</span><span class='line'>
</span><span class='line'><span class="c1">--show users</span>
</span><span class='line'><span class="err">\</span><span class="n">du</span><span class="o">+</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">USER</span> <span class="o">&lt;</span><span class="n">username</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'><span class="k">GRANT</span> <span class="k">ALL</span> <span class="k">PRIVILEGES</span> <span class="k">ON</span> <span class="k">DATABASE</span> <span class="o">&lt;</span><span class="n">dbname</span><span class="o">&gt;</span> <span class="k">TO</span> <span class="o">&lt;</span><span class="n">username</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'><span class="k">GRANT</span> <span class="k">ALL</span> <span class="k">PRIVILEGES</span> <span class="k">ON</span> <span class="k">TABLE</span> <span class="o">&lt;</span><span class="n">tablename</span><span class="o">&gt;</span> <span class="k">TO</span> <span class="o">&lt;</span><span class="n">username</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'><span class="c1">-- Allow user1 to set role as user2</span>
</span><span class='line'><span class="k">GRANT</span> <span class="o">&lt;</span><span class="n">username2</span><span class="o">&gt;</span> <span class="k">to</span> <span class="o">&lt;</span><span class="n">username1</span><span class="o">&gt;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>other</h2>

<ul>
<li><a href="https://stackoverflow.com/questions/15537709/what-does-do-in-postgresql">syntax - What does :: do in PostgreSQL? - Stack Overflow</a> - A type cast specifies a conversion from one data type to another.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">trends</span> <span class="k">WHERE</span>  <span class="n">user_id</span> <span class="o">=</span> <span class="k">ANY</span><span class="p">(</span><span class="s1">&#39;{1, 2, 3}&#39;</span><span class="p">::</span><span class="nb">text</span><span class="p">[])</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">array_position</span><span class="p">(</span><span class="s1">&#39;{1, 2}&#39;</span><span class="p">::</span><span class="nb">text</span><span class="p">[],</span> <span class="n">user_id</span><span class="p">),</span> <span class="n">updated_at</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">metric_value</span> <span class="k">DESC</span> <span class="k">LIMIT</span> <span class="mi">30</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Tool</h2>

<ul>
<li><a href="https://www.pgcli.com/">pgcli</a> - Pgcli is a command line interface for Postgres with auto-completion and syntax highlighting.</li>
<li><a href="https://eggerapps.at/postico/">Postico</a> - GUI client on mac</li>
<li><a href="https://github.com/pressly/goose">goose</a> - Goose database migration tool</li>
<li><a href="https://gist.github.com/Kartones/dd3ff5ec5ea238d4c546">postgres-cheatsheet</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Mock]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/04/golang-mock/"/>
    <updated>2019-06-04T18:53:23+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/04/golang-mock</id>
    <content type="html"><![CDATA[<!-- more -->


<h3>Simple code use to test</h3>

<p><code>string.go</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Stringer</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span><span class="p">(</span><span class="nx">hi</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">human</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">name</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">h</span> <span class="o">*</span><span class="nx">human</span><span class="p">)</span> <span class="nx">Name</span><span class="p">(</span><span class="nx">hi</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">say</span> <span class="o">:=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;%v %v&quot;</span><span class="p">,</span> <span class="nx">hi</span><span class="p">,</span> <span class="nx">h</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">say</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">h</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">human</span><span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Leon&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">SayName</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">SayName</span><span class="p">(</span><span class="nx">people</span> <span class="nx">Stringer</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">people</span><span class="p">.</span><span class="nx">Name</span><span class="p">(</span><span class="s">&quot;hi&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>create mock data</h3>

<p>default is <code>.</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">mockery</span> <span class="o">-</span><span class="nx">name</span><span class="p">=</span><span class="nx">Stringer</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// Code generated by mockery v1.0.0. DO NOT EDIT.</span>
</span><span class='line'>
</span><span class='line'><span class="kn">package</span> <span class="nx">mocks</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nx">mock</span> <span class="s">&quot;github.com/stretchr/testify/mock&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Stringer is an autogenerated mock type for the Stringer type</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">Stringer</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">mock</span><span class="p">.</span><span class="nx">Mock</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Name provides a mock function with given fields: hi</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">_m</span> <span class="o">*</span><span class="nx">Stringer</span><span class="p">)</span> <span class="nx">Name</span><span class="p">(</span><span class="nx">hi</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ret</span> <span class="o">:=</span> <span class="nx">_m</span><span class="p">.</span><span class="nx">Called</span><span class="p">(</span><span class="nx">hi</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">r0</span> <span class="kt">string</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">rf</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">Get</span><span class="p">(</span><span class="mi">0</span><span class="p">).(</span><span class="kd">func</span><span class="p">(</span><span class="kt">string</span><span class="p">)</span> <span class="kt">string</span><span class="p">);</span> <span class="nx">ok</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">r0</span> <span class="p">=</span> <span class="nx">rf</span><span class="p">(</span><span class="nx">hi</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">r0</span> <span class="p">=</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">Get</span><span class="p">(</span><span class="mi">0</span><span class="p">).(</span><span class="kt">string</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">r0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Write test with mock data</h3>

<p><code>string_test.go</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;testing&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/mgleon08/mock/mocks&quot;</span>
</span><span class='line'>  <span class="s">&quot;github.com/stretchr/testify/assert&quot;</span>
</span><span class='line'>  <span class="s">&quot;github.com/stretchr/testify/mock&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Test_SayName</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// mock interface</span>
</span><span class='line'>  <span class="nx">mockStringer</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">mocks</span><span class="p">.</span><span class="nx">Stringer</span><span class="p">{}</span>
</span><span class='line'>  <span class="c1">// mock function and expected return you want data</span>
</span><span class='line'>  <span class="nx">mockStringer</span><span class="p">.</span><span class="nx">On</span><span class="p">(</span><span class="s">&quot;Name&quot;</span><span class="p">,</span> <span class="nx">mock</span><span class="p">.</span><span class="nx">Anything</span><span class="p">).</span><span class="nx">Return</span><span class="p">(</span><span class="s">&quot;hi, test&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">t</span><span class="p">.</span><span class="nx">Run</span><span class="p">(</span><span class="s">&quot;test&quot;</span><span class="p">,</span> <span class="kd">func</span><span class="p">(</span><span class="nx">t</span> <span class="o">*</span><span class="nx">testing</span><span class="p">.</span><span class="nx">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">assert</span><span class="p">.</span><span class="nx">Equal</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="s">&quot;hi, test&quot;</span><span class="p">,</span> <span class="nx">SayName</span><span class="p">(</span><span class="nx">mockStringer</span><span class="p">))</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<ul>
<li><a href="https://github.com/vektra/mockery">mockery</a></li>
<li><a href="https://github.com/stretchr/testify#mock-package">testify</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - GraphQL With Gqlgen]]></title>
    <link href="https://mgleon08.github.io/blog/2019/06/04/golang-graphql-with-gqlgen/"/>
    <updated>2019-06-04T18:50:50+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/06/04/golang-graphql-with-gqlgen</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Setup Project</h2>

<p>使用 Go Module  記得先執行 <code>export GO111MODULE=on</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">mkdir</span> <span class="nx">gqlgen</span><span class="o">-</span><span class="nx">todos</span>
</span><span class='line'><span class="nx">cd</span> <span class="nx">gqlgen</span><span class="o">-</span><span class="nx">todos</span>
</span><span class='line'><span class="k">go</span> <span class="nx">mod</span> <span class="nx">init</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="p">[</span><span class="nx">username</span><span class="p">]</span><span class="o">/</span><span class="nx">gqlgen</span><span class="o">-</span><span class="nx">todos</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Define the schema</h2>

<p>新增 <code>schema.graphql</code> 定義 <a href="https://graphql.org/learn/queries/">graphql 結構</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">Todo</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span><span class="p">:</span> <span class="nx">ID</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">text</span><span class="p">:</span> <span class="nx">String</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">done</span><span class="p">:</span> <span class="nx">Boolean</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">user</span><span class="p">:</span> <span class="nx">User</span><span class="p">!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">User</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span><span class="p">:</span> <span class="nx">ID</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">name</span><span class="p">:</span> <span class="nx">String</span><span class="p">!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Query</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">todos</span><span class="p">:</span> <span class="p">[</span><span class="nx">Todo</span><span class="p">!]!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">input</span> <span class="nx">NewTodo</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">text</span><span class="p">:</span> <span class="nx">String</span><span class="p">!</span>
</span><span class='line'>  <span class="nx">userId</span><span class="p">:</span> <span class="nx">String</span><span class="p">!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Mutation</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">createTodo</span><span class="p">(</span><span class="nx">input</span><span class="p">:</span> <span class="nx">NewTodo</span><span class="p">!):</span> <span class="nx">Todo</span><span class="p">!</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create the project skeleton</h2>

<p>透過 <code>gglgen</code> 建立 graphql 的專案初始化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="mi">99</span><span class="nx">designs</span><span class="o">/</span><span class="nx">gqlgen</span> <span class="nx">init</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>gqlgen.yml</code> — The gqlgen config file, knobs for controlling the generated code.</li>
<li><code>generated.go</code> — The GraphQL execution runtime, the bulk of the generated code.</li>
<li><code>models_gen.go</code> — Generated models required to build the graph. Often you will override these with your own models. Still very useful for input types.</li>
<li><code>resolver.go</code> — This is where your application code lives. generated.go will call into this to get the data the user has requested.</li>
<li><code>server/server.go</code> — This is a minimal entry point that sets up an http.Handler to the generated GraphQL server.</li>
</ul>


<h2>Create the database models</h2>

<p>自動生成的 Todo model 不是正確的，因為 Todo 裡面還嵌入了 User，我們希望是在使用者要求時才給予，因此要另外建立 <code>todo.go</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// todo.go</span>
</span><span class='line'><span class="kn">package</span> <span class="nx">gqlgen_todos</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Todo</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ID</span>     <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Text</span>   <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Done</span>   <span class="kt">bool</span>
</span><span class='line'>  <span class="nx">UserID</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>將新的 struct 路徑加到 <code>gqlgen.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// Todo 對應到 todo.go 裡的 struct name</span>
</span><span class='line'><span class="nx">models</span><span class="p">:</span>
</span><span class='line'>  <span class="nx">Todo</span><span class="p">:</span>
</span><span class='line'>    <span class="nx">model</span><span class="p">:</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="p">[</span><span class="nx">username</span><span class="p">]</span><span class="o">/</span><span class="nx">gqlgen</span><span class="o">-</span><span class="nx">todos</span><span class="p">.</span><span class="nx">Todo</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>重新生成檔案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="mi">99</span><span class="nx">designs</span><span class="o">/</span><span class="nx">gqlgen</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Implement the resolvers</h2>

<p>在 <code>generated.go</code> 產生了很多個 resolvers interface，接著就要實作這些，但 <code>resolver.go</code> 這個檔案，再新增新的 method 時，要重新再產生一份</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">rm</span> <span class="nx">resolver</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="mi">99</span><span class="nx">designs</span><span class="o">/</span><span class="nx">gqlgen</span>
</span></code></pre></td></tr></table></div></figure>


<p>實作 <code>resolver.go</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">gqlgen_todos</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">context</span> <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;math/rand&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Resolver</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">todos</span> <span class="p">[]</span><span class="nx">Todo</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">Resolver</span><span class="p">)</span> <span class="nx">Mutation</span><span class="p">()</span> <span class="nx">MutationResolver</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">mutationResolver</span><span class="p">{</span><span class="nx">r</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">Resolver</span><span class="p">)</span> <span class="nx">Query</span><span class="p">()</span> <span class="nx">QueryResolver</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">queryResolver</span><span class="p">{</span><span class="nx">r</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">Resolver</span><span class="p">)</span> <span class="nx">Todo</span><span class="p">()</span> <span class="nx">TodoResolver</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">todoResolver</span><span class="p">{</span><span class="nx">r</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">mutationResolver</span> <span class="kd">struct</span><span class="p">{</span> <span class="o">*</span><span class="nx">Resolver</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">mutationResolver</span><span class="p">)</span> <span class="nx">CreateTodo</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">,</span> <span class="nx">input</span> <span class="nx">NewTodo</span><span class="p">)</span> <span class="p">(</span><span class="o">*</span><span class="nx">Todo</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">todo</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="nx">Todo</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">Text</span><span class="p">:</span>   <span class="nx">input</span><span class="p">.</span><span class="nx">Text</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ID</span><span class="p">:</span>     <span class="nx">fmt</span><span class="p">.</span><span class="nx">Sprintf</span><span class="p">(</span><span class="s">&quot;T%d&quot;</span><span class="p">,</span> <span class="nx">rand</span><span class="p">.</span><span class="nx">Int</span><span class="p">()),</span>
</span><span class='line'>      <span class="nx">UserID</span><span class="p">:</span> <span class="nx">input</span><span class="p">.</span><span class="nx">UserID</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">r</span><span class="p">.</span><span class="nx">todos</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">todos</span><span class="p">,</span> <span class="o">*</span><span class="nx">todo</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">todo</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">queryResolver</span> <span class="kd">struct</span><span class="p">{</span> <span class="o">*</span><span class="nx">Resolver</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">queryResolver</span><span class="p">)</span> <span class="nx">Todos</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">)</span> <span class="p">([]</span><span class="nx">Todo</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">todos</span><span class="p">,</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">todoResolver</span> <span class="kd">struct</span><span class="p">{</span> <span class="o">*</span><span class="nx">Resolver</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">todoResolver</span><span class="p">)</span> <span class="nx">User</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">,</span> <span class="nx">obj</span> <span class="o">*</span><span class="nx">Todo</span><span class="p">)</span> <span class="p">(</span><span class="o">*</span><span class="nx">User</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">User</span><span class="p">{</span><span class="nx">ID</span><span class="p">:</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">UserID</span><span class="p">,</span> <span class="nx">Name</span><span class="p">:</span> <span class="s">&quot;user &quot;</span> <span class="o">+</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">UserID</span><span class="p">},</span> <span class="kc">nil</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Query</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// open http://localhost:8080</span>
</span><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">server</span><span class="o">/</span><span class="nx">server</span><span class="p">.</span><span class="k">go</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// create</span>
</span><span class='line'><span class="nx">mutation</span> <span class="nx">createTodo</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">createTodo</span><span class="p">(</span><span class="nx">input</span><span class="p">:{</span><span class="nx">text</span><span class="p">:</span><span class="s">&quot;todo&quot;</span><span class="p">,</span> <span class="nx">userId</span><span class="p">:</span><span class="s">&quot;1&quot;</span><span class="p">})</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">user</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">id</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">text</span>
</span><span class='line'>    <span class="nx">done</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// show</span>
</span><span class='line'><span class="nx">query</span> <span class="nx">findTodos</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">todos</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">text</span>
</span><span class='line'>      <span class="nx">done</span>
</span><span class='line'>      <span class="nx">user</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">name</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Finishing touches</h2>

<p>At the top of our resolver.go add the following line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">//go:generate go run github.com/99designs/gqlgen</span>
</span></code></pre></td></tr></table></div></figure>


<p>This magic comment tells go generate what command to run when we want to regenerate our code</p>

<h2>Example</h2>

<ul>
<li><a href="https://github.com/mgleon08/go-packages/tree/master/020.gqlgen-todos">gqlgen-todos</a></li>
</ul>


<h1>Reference</h1>

<ul>
<li><a href="https://gqlgen.com/getting-started/">gqlgen getting-started</a></li>
<li><a href="https://graphql.org/">Graphql</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Advance ElasticSearch]]></title>
    <link href="https://mgleon08.github.io/blog/2019/05/18/advanced-elasticsearch/"/>
    <updated>2019-05-18T08:55:02+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/05/18/advanced-elasticsearch</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>Bool Query</h1>

<ul>
<li><code>must</code> - 查詢必須匹配的字，並計算 <code>_score</code> (與 AND 等價)</li>
<li><code>filter</code> - 查詢必須匹配的字，不計算 <code>_score</code> (代表對評分沒有任何貢獻，只是用來過濾)</li>
<li><code>should</code> - 滿足任一匹配的字，將增加 <code>_score</code> ，否則，無任何影響，如果一個 query 中沒有 <code>must</code> 和 <code>filter</code> 則必須匹配一個或以上的 <code>should</code> (與 OR 等價)</li>
<li><code>must_not</code> - 查詢排除的字 (與 NOT 等價)</li>
<li><code>boost</code> - 權重</li>
<li><code>minimum_should_match</code> - 設定 <code>should</code> 至少要匹配幾個句子</li>
</ul>


<h2>Example 1:</h2>

<p>user 必須是 kimchy，並且過濾出 tag 是 &ldquo;tech&rdquo; (匹配多寡並不影響 <em>score)，age 範圍排除 10 ~ 20，如果 tag 有 <code>wow</code> 或是 <code>elasticsearch</code> 則 </em>score 比較高，兩個都有則更高</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;must&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;kimchy&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span> <span class="p">:</span> <span class="s">&quot;tech&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;must_not&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;range&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;age&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;from&quot;</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s">&quot;to&quot;</span> <span class="p">:</span> <span class="mi">20</span> <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;should&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span> <span class="p">:</span> <span class="s">&quot;wow&quot;</span> <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span> <span class="p">:</span> <span class="s">&quot;elasticsearch&quot;</span> <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="s">&quot;minimum_should_match&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;boost&quot;</span> <span class="p">:</span> <span class="mf">1.0</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example 2:</h2>

<blockquote><p>將 bool 帶入 filter 一樣可以不計算分數</p></blockquote>

<p>查找 <code>title</code> 字段匹配 <code>how to make millions</code> 並且不被 <code>tag</code> 為 <code>spam</code> 的文件。那些被 <code>tag</code> 為 <code>starred</code> 或在2014之後的文件，將比另外那些文件擁有更高的排名。如果 <em>兩者</em> 都滿足，那麼它排名將更高，並過濾出 <code>price</code> 必須小於等於 29.99，且 <code>category</code> 不能是 <code>ebooks</code> 這兩個條件則不影響排名</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;must&quot;</span><span class="p">:</span>     <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;how to make millions&quot;</span> <span class="p">}},</span>
</span><span class='line'>        <span class="s">&quot;must_not&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span><span class="p">:</span>   <span class="s">&quot;spam&quot;</span> <span class="p">}},</span>
</span><span class='line'>        <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;tag&quot;</span><span class="p">:</span> <span class="s">&quot;starred&quot;</span> <span class="p">}},</span>
</span><span class='line'>            <span class="p">{</span> <span class="s">&quot;range&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;date&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;gte&quot;</span><span class="p">:</span> <span class="s">&quot;2014-01-01&quot;</span> <span class="p">}}}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="s">&quot;filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                  <span class="p">{</span> <span class="s">&quot;range&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;price&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;lte&quot;</span><span class="p">:</span> <span class="mf">29.99</span> <span class="p">}}}</span>
</span><span class='line'>              <span class="p">],</span>
</span><span class='line'>              <span class="s">&quot;must_not&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                  <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;category&quot;</span><span class="p">:</span> <span class="s">&quot;ebooks&quot;</span> <span class="p">}}</span>
</span><span class='line'>              <span class="p">]</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example3: constant_score</h2>

<p>它將一個不變的常量評分應用於所有匹配的文件，比較簡潔用來取代只有一個 filter 的 bool</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;constant_score&quot;</span><span class="p">:</span>   <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;category&quot;</span><span class="p">:</span> <span class="s">&quot;ebooks&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example4: boost 權重</h2>

<p>預設為 1</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;content&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="s">&quot;query&quot;</span><span class="p">:</span>    <span class="s">&quot;full text search&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="s">&quot;operator&quot;</span><span class="p">:</span> <span class="s">&quot;and&quot;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;content&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="s">&quot;Elasticsearch&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="s">&quot;boost&quot;</span><span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;content&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="s">&quot;Lucene&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="s">&quot;boost&quot;</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}}</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example5: equle to match</h2>

<h3>OR</h3>

<p>下面兩個相等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;brown fox&quot;</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;brown&quot;</span> <span class="p">}},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;fox&quot;</span>   <span class="p">}}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>AND</h3>

<p>下面兩個相等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;query&quot;</span><span class="p">:</span>    <span class="s">&quot;brown fox&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;operator&quot;</span><span class="p">:</span> <span class="s">&quot;and&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;brown&quot;</span> <span class="p">}},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;fox&quot;</span>   <span class="p">}}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>minimum_should_match</h3>

<p>下面兩個相等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;query&quot;</span><span class="p">:</span>                <span class="s">&quot;quick brown fox&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;minimum_should_match&quot;</span><span class="p">:</span> <span class="s">&quot;75%&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;brown&quot;</span> <span class="p">}},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;fox&quot;</span>   <span class="p">}},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;quick&quot;</span> <span class="p">}}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="s">&quot;minimum_should_match&quot;</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Exact Values Search</h1>

<h3>數字查詢</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">document</span>
</span><span class='line'><span class="k">FROM</span>   <span class="n">products</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="n">price</span> <span class="o">=</span> <span class="mi">20</span>
</span></code></pre></td></tr></table></div></figure>


<p>通常精準的字查詢，就不需要計算分數，因此加上 <code>constant_score</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;constant_score&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;price&quot;</span> <span class="p">:</span> <span class="mi">20</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>text 查詢</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">product</span>
</span><span class='line'><span class="k">FROM</span>   <span class="n">products</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="n">productID</span> <span class="o">=</span> <span class="ss">&quot;XHDK-A-1293-#fJ3&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>這裡會有個問題，分析器會解析 <code>XHDK-A-1293-#fJ3</code> -> <code>XHDK</code> <code>A</code> <code>1293</code> <code>#fJ3</code>，因此查詢時會有問題</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">GET</span> <span class="o">/</span><span class="nx">my_store</span><span class="o">/</span><span class="nx">products</span><span class="o">/</span><span class="nx">_search</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;constant_score&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="s">&quot;XHDK-A-1293-#fJ3&quot;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>必須重新針對 productID 設定不要分析，重新設定前記得先刪除原本的 index</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;mappings&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;products&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;properties&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;type&quot;</span> <span class="p">:</span> <span class="s">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;index&quot;</span> <span class="p">:</span> <span class="s">&quot;not_analyzed&quot;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Combining Filters</h1>

<p>Example1</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">product</span>
</span><span class='line'><span class="k">FROM</span>   <span class="n">products</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="p">(</span><span class="n">price</span> <span class="o">=</span> <span class="mi">20</span> <span class="k">OR</span> <span class="n">productID</span> <span class="o">=</span> <span class="ss">&quot;XHDK-A-1293-#fJ3&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">AND</span>  <span class="p">(</span><span class="n">price</span> <span class="o">!=</span> <span class="mi">30</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;should&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                 <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;price&quot;</span> <span class="p">:</span> <span class="mi">20</span><span class="p">}},</span>
</span><span class='line'>                 <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="s">&quot;XHDK-A-1293-#fJ3&quot;</span><span class="p">}}</span>
</span><span class='line'>              <span class="p">],</span>
</span><span class='line'>              <span class="s">&quot;must_not&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                 <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;price&quot;</span> <span class="p">:</span> <span class="mi">30</span><span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Example2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">document</span>
</span><span class='line'><span class="k">FROM</span>   <span class="n">products</span>
</span><span class='line'><span class="k">WHERE</span>  <span class="n">productID</span>      <span class="o">=</span> <span class="ss">&quot;KDKE-B-9947-#kL5&quot;</span>
</span><span class='line'>  <span class="k">OR</span> <span class="p">(</span>     <span class="n">productID</span> <span class="o">=</span> <span class="ss">&quot;JODL-X-1937-#pV7&quot;</span>
</span><span class='line'>       <span class="k">AND</span> <span class="n">price</span>     <span class="o">=</span> <span class="mi">30</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>         <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;should&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="s">&quot;KDKE-B-9947-#kL5&quot;</span><span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;bool&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s">&quot;must&quot;</span> <span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                    <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;productID&quot;</span> <span class="p">:</span> <span class="s">&quot;JODL-X-1937-#pV7&quot;</span><span class="p">}},</span>
</span><span class='line'>                    <span class="p">{</span> <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span><span class="s">&quot;price&quot;</span> <span class="p">:</span> <span class="mi">30</span><span class="p">}}</span>
</span><span class='line'>                  <span class="p">]</span>
</span><span class='line'>                <span class="p">}}</span>
</span><span class='line'>              <span class="p">]</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Example3</p>

<ul>
<li>在收件箱中，且沒有被讀過的</li>
<li>不在 收件箱中，但被標註重要的</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;constant_score&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                 <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                    <span class="p">{</span> <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                          <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                             <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;folder&quot;</span><span class="p">:</span> <span class="s">&quot;inbox&quot;</span> <span class="p">}},</span>
</span><span class='line'>                             <span class="p">{</span> <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;read&quot;</span><span class="p">:</span> <span class="kc">false</span> <span class="p">}}</span>
</span><span class='line'>                          <span class="p">]</span>
</span><span class='line'>                    <span class="p">}},</span>
</span><span class='line'>                    <span class="p">{</span> <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                          <span class="s">&quot;must_not&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                             <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;folder&quot;</span><span class="p">:</span> <span class="s">&quot;inbox&quot;</span> <span class="p">}</span>
</span><span class='line'>                          <span class="p">},</span>
</span><span class='line'>                          <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                             <span class="s">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;important&quot;</span><span class="p">:</span> <span class="kc">true</span> <span class="p">}</span>
</span><span class='line'>                          <span class="p">}</span>
</span><span class='line'>                    <span class="p">}}</span>
</span><span class='line'>                 <span class="p">]</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Disjunction Max Query 最佳字段</h1>

<p>給予兩個字段</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">PUT</span> <span class="o">/</span><span class="nx">my_index</span><span class="o">/</span><span class="nx">my_type</span><span class="o">/</span><span class="mi">1</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Quick brown rabbits&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;Brown rabbits are commonly seen.&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">PUT</span> <span class="o">/</span><span class="nx">my_index</span><span class="o">/</span><span class="nx">my_type</span><span class="o">/</span><span class="mi">2</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Keeping pets healthy&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;My quick brown fox eats rabbits on a regular basis.&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>bool</h3>

<p>使用一般的 bool，會發現 1 的分數會比較高，主要在於 1 的兩個句字都有包含到 <code>Brown</code>，但我們希望的是比較準確的 2，因為 body 就包含了 <code>Brown fox</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;should&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Brown fox&quot;</span> <span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;Brown fox&quot;</span> <span class="p">}}</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>dis_max</h3>

<p>將任何與任一查詢匹配的文件作為結果返回，但只將最佳匹配的評分作為查詢的評分結果返回</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;dis_max&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;queries&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Brown fox&quot;</span> <span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;Brown fox&quot;</span> <span class="p">}}</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果用 dis_max 查出的兩個最佳匹配分數一樣，可以加上 tie_breaker 調優，將其他匹配的語句一起做計算並乘個比例，範圍在 0~1</p>

<blockquote><p>tie_breaker 可以是 0 到 1 之間的浮點數，其中 0 代表使用 dis_max 最佳匹配語句的普通邏輯， 1 表示所有匹配語句同等重要。最佳的精確值需要根據數據與查詢調試得出，但是合理值應該與零接近（處於 0.1 - 0.4 之間），這樣就不會顛覆 dis_max 最佳匹配性質的根本。</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;dis_max&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;queries&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;Quick pets&quot;</span> <span class="p">}},</span>
</span><span class='line'>                <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;body&quot;</span><span class="p">:</span>  <span class="s">&quot;Quick pets&quot;</span> <span class="p">}}</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="s">&quot;tie_breaker&quot;</span><span class="p">:</span> <span class="mf">0.3</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>post_filter</h1>

<p><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/_post_filter.html">post_filter</a></p>

<p>後過濾器，可以針對 query 完後的結果，做最後的 filter，並且不影響 aggregation</p>

<blockquote><p>使用場景，像是用 agg 列出 category list，當點選某一個 category 時，並不希望影響到 category list，而只針對結果進行 filter</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;size&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;make&quot;</span><span class="p">:</span> <span class="s">&quot;ford&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;post_filter&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;color&quot;</span> <span class="p">:</span> <span class="s">&quot;green&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;all_colors&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;terms&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;color&quot;</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Function Score Query</h1>

<ul>
<li><a href="https://www.scienjus.com/elasticsearch-function-score-query/">透過Function Score Query優化Elasticsearch搜索結果</a></li>
<li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/boosting-by-popularity.html">按受歡迎度提升權重</a></li>
<li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/function-score-filters.html">過濾集提升權重</a></li>
</ul>


<h1>Reference</h1>

<ul>
<li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html">Elasticsearch: 權威指南 | Elastic</a></li>
<li><a href="https://blog.csdn.net/dm_vincent/article/details/41743955">[Elasticsearch] 全文搜索 (三) - match查询和bool查询的关系，提升查询子句 - dm_vincent的专栏 - CSDN博客</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1113818">Elasticsearch DSL 常用語法介紹</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With the ElasticSearch]]></title>
    <link href="https://mgleon08.github.io/blog/2019/04/26/elasticsearch/"/>
    <updated>2019-04-26T23:36:58+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/04/26/elasticsearch</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases. As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected.</p>

<h2>Elasticsearch vs RDBMS</h2>

<ul>
<li>Node - Server</li>
<li>Indices - Databases</li>
<li>Types - Tables</li>
<li>Documents - Rows</li>
<li>Fields - Columns</li>
</ul>


<blockquote><p>After 6.0 version need add <code>-H 'Content-Type:application/json'</code></p></blockquote>

<h2>Install</h2>

<p>java</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">brew</span> <span class="nx">cask</span> <span class="nx">install</span> <span class="nx">java</span>
</span><span class='line'><span class="nx">brew</span> <span class="nx">cask</span> <span class="nx">install</span> <span class="nx">homebrew</span><span class="o">/</span><span class="nx">cask</span><span class="o">-</span><span class="nx">versions</span><span class="o">/</span><span class="nx">java8</span>
</span></code></pre></td></tr></table></div></figure>


<p>elasticsearch</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">brew</span> <span class="nx">install</span> <span class="nx">elasticsearch24</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Check</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;name&quot;</span> <span class="p">:</span> <span class="s">&quot;Crimson Daffodil&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;cluster_name&quot;</span> <span class="p">:</span> <span class="s">&quot;elasticsearch&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;cluster_uuid&quot;</span> <span class="p">:</span> <span class="s">&quot;_1W7Qb8WSByw_AoBtx3V9g&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;version&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;number&quot;</span> <span class="p">:</span> <span class="s">&quot;2.4.6&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;build_hash&quot;</span> <span class="p">:</span> <span class="s">&quot;5376dca9f70f3abef96a77f4bb22720ace8240fd&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;build_timestamp&quot;</span> <span class="p">:</span> <span class="s">&quot;2017-07-18T12:17:44Z&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;build_snapshot&quot;</span> <span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;lucene_version&quot;</span> <span class="p">:</span> <span class="s">&quot;5.5.4&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s">&quot;tagline&quot;</span> <span class="p">:</span> <span class="s">&quot;You Know, for Search&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>health</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">_cluster</span><span class="o">/</span><span class="nx">health</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;cluster_name&quot;</span> <span class="p">:</span> <span class="s">&quot;elasticsearch_leon&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;status&quot;</span> <span class="p">:</span> <span class="s">&quot;yellow&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;timed_out&quot;</span> <span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;number_of_nodes&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;number_of_data_nodes&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;active_primary_shards&quot;</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;active_shards&quot;</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;relocating_shards&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;initializing_shards&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;unassigned_shards&quot;</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;delayed_unassigned_shards&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;number_of_pending_tasks&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;number_of_in_flight_fetch&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;task_max_waiting_in_queue_millis&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;active_shards_percent_as_number&quot;</span> <span class="p">:</span> <span class="mf">50.0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>explain</h3>

<p>know how to get this result</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">explain</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Count</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">GET</span> <span class="err">&#39;</span><span class="nx">http</span><span class="p">:</span><span class="c1">//localhost:9200/_count?pretty&#39; -d &#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match_all&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;count&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_shards&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;total&quot;</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;successful&quot;</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;failed&quot;</span> <span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show all Index</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">GET</span> <span class="err">&#39;</span><span class="nx">http</span><span class="p">:</span><span class="c1">//localhost:9200/_cat/indices?v&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">health</span> <span class="nx">status</span> <span class="nx">index</span>    <span class="nx">pri</span> <span class="nx">rep</span> <span class="nx">docs</span><span class="p">.</span><span class="nx">count</span> <span class="nx">docs</span><span class="p">.</span><span class="nx">deleted</span> <span class="nx">store</span><span class="p">.</span><span class="nx">size</span> <span class="nx">pri</span><span class="p">.</span><span class="nx">store</span><span class="p">.</span><span class="nx">size</span>
</span><span class='line'><span class="nx">yellow</span> <span class="nx">open</span>   <span class="nx">accounts</span>   <span class="mi">5</span>   <span class="mi">1</span>          <span class="mi">1</span>            <span class="mi">0</span>      <span class="mf">4.1</span><span class="nx">kb</span>          <span class="mf">4.1</span><span class="nx">kb</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show all Index mapping type</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">_mapping</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;accounts&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;mappings&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;person&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;properties&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;type&quot;</span> <span class="p">:</span> <span class="s">&quot;string&quot;</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s">&quot;title&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;type&quot;</span> <span class="p">:</span> <span class="s">&quot;string&quot;</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;type&quot;</span> <span class="p">:</span> <span class="s">&quot;string&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create Index</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">weather</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;acknowledged&quot;</span><span class="p">:</span><span class="kc">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Delete Index</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">weather</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">_all</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/*</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">index_</span><span class="o">*</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;acknowledged&quot;</span><span class="p">:</span><span class="kc">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Setting Analyzer</h2>

<p><a href="https://github.com/medcl/elasticsearch-analysis-ik/">elasticsearch-analysis-ik</a></p>

<h3>index type</h3>

<ul>
<li><code>analyzed</code> - analyzed string and index it</li>
<li><code>not_analyzed</code> - index it but not not analyzed</li>
<li><code>no</code> - not index and analyzed</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="err">$</span> <span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;mappings&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;person&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;text&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;search_analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;text&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;search_analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;text&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;search_analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;ik_max_word&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">&quot;categories&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>           <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;nested&quot;</span><span class="p">,</span>
</span><span class='line'>           <span class="s">&quot;properties&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;name&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;type&quot;</span><span class="p">:</span> <span class="s">&quot;string&quot;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>update analyzer</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="err">$</span> <span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">_mapping</span><span class="o">/</span><span class="nx">person</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;properties&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;tag&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;type&quot;</span> <span class="p">:</span>    <span class="s">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;index&quot;</span><span class="p">:</span>    <span class="s">&quot;not_analyzed&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>show mapping</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="err">$</span> <span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">_mapping</span><span class="o">/</span><span class="nx">person</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>understand elastic how to analyze text</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">/</span><span class="nx">_analyze</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;analyzer&quot;</span><span class="p">:</span> <span class="s">&quot;standard&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;text&quot;</span><span class="p">:</span> <span class="s">&quot;Text to analyze&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create Document</h2>

<p>with id, also can string</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// can replace 1 to first</span>
</span><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_version&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>without id will auto create random uuid</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">POST</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;mark&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;系統管理&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">28</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Show</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// _source without other data</span>
</span><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="o">/</span><span class="nx">_source</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;AWpP4wxUKXQ2yoYJjuiA&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_version&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;found&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">20</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>not found</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">weather</span><span class="o">/</span><span class="nx">beijing</span><span class="o">/</span><span class="nx">abc</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;_index&quot;</span> <span class="p">:</span> <span class="s">&quot;weather&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_type&quot;</span> <span class="p">:</span> <span class="s">&quot;beijing&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_id&quot;</span> <span class="p">:</span> <span class="s">&quot;abc&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;found&quot;</span> <span class="p">:</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Delete</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">DELETE</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reindex (not Update)</h2>

<p>elastic can&rsquo;t update, only create new, and increase the version number</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="o">-</span><span class="nx">X</span> <span class="nx">PUT</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="mi">1</span><span class="err">&#39;</span> <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;title&quot;</span> <span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">20</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>version was change to 2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_version&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_shards&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;total&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;successful&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;failed&quot;</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s">&quot;created&quot;</span><span class="p">:</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Search keyword</h2>

<h3>Search all documents (empty search)</h3>

<ul>
<li><code>/_search</code> - all index, all type</li>
<li><code>/gb/_search</code> - gb index, all type</li>
<li><code>/gb,us/_search</code> - gb and us index, all type</li>
<li><code>/g*,u*/_search</code> - g<em> and u</em> start index, all type</li>
<li><code>/gb/user/_search</code> - gb index, user type</li>
<li><code>/gb,us/user,tweet/_search</code> - gb or us index, user and tweet type</li>
<li><code>/_all/user,tweet/_search</code> - all index, user and tweet type</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// empty body like use</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match_all&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>took - search time</li>
<li>hits - hit how many record</li>
<li>_score - match score</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;took&quot;</span> <span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;timed_out&quot;</span> <span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;_shards&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;total&quot;</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;successful&quot;</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;failed&quot;</span> <span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s">&quot;hits&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;total&quot;</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;max_score&quot;</span> <span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;hits&quot;</span> <span class="p">:</span> <span class="p">[</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;_index&quot;</span> <span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_type&quot;</span> <span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_id&quot;</span> <span class="p">:</span> <span class="s">&quot;2&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_score&quot;</span> <span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_source&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span> <span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">20</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;_index&quot;</span> <span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_type&quot;</span> <span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_id&quot;</span> <span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_score&quot;</span> <span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;_source&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;mark&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;title&quot;</span> <span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">28</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>match</code> &amp; <code>multi_match</code> Search</h3>

<p>analyzer text and search each keyword</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;multi_match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>           <span class="s">&quot;query&quot;</span><span class="p">:</span>    <span class="s">&quot;數據庫&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;fields&quot;</span><span class="p">:</span>   <span class="p">[</span> <span class="s">&quot;title&quot;</span><span class="p">,</span> <span class="s">&quot;desc&quot;</span> <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>filtered</code> &amp; <code>range</code> Search</h3>

<blockquote><p>filtered replaced by the bool</p></blockquote>

<ul>
<li><code>gt</code> - <code>&gt;</code></li>
<li><code>gte</code> - <code>&gt;=</code></li>
<li><code>lt</code> - <code>&lt;</code></li>
<li><code>lte</code> -<code>&lt;=</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;filtered&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;filter&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;range&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;age&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;gt&quot;</span> <span class="p">:</span> <span class="mi">25</span> <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>term</code> &amp; <code>terms</code> Search</h3>

<p>Exact match not to analyzer</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;term&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;terms&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s">&quot;leon&quot;</span><span class="p">,</span> <span class="s">&quot;mark&quot;</span><span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>exists</code> &amp; <code>missing</code> Search</h3>

<p>Search field <code>IS NUll</code> or <code>IS NOT NULL</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;exists&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;field&quot;</span><span class="p">:</span> <span class="s">&quot;title&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Global search</h2>

<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.0/query-dsl-match-query.html">Match Query</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;軟件&quot;</span> <span class="p">}}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="o">&amp;</span><span class="nx">q</span><span class="p">=</span><span class="nx">user</span><span class="p">:</span><span class="nx">leon</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>size</code> to limit response record</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;管理&quot;</span> <span class="p">}},</span>
</span><span class='line'>  <span class="s">&quot;size&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>from</code> to shift start index</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;管理&quot;</span> <span class="p">}},</span>
</span><span class='line'>  <span class="s">&quot;from&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;size&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>or</code> Search</h3>

<p>&ldquo;軟件 系統&rdquo; -> &ldquo;軟件&rdquo; or &ldquo;系統&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;軟件 系統&quot;</span> <span class="p">}}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>Bool</code> Search (<code>and</code>)</h3>

<p>should use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.0/query-dsl-bool-query.html">Bool Query</a></p>

<p>must have"軟件" AND &ldquo;系統&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;must&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;軟件&quot;</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span> <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;系統&quot;</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>match_phrase</code> Search</h3>

<p>must be &ldquo;軟件 系統&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match_phrase&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;desc&quot;</span> <span class="p">:</span> <span class="s">&quot;軟件 系統&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>highlight</code> Search</h3>

<p>returm search result include highlight <code>&lt;em&gt;&lt;/em&gt;</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span><span class="p">:</span>  <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match_phrase&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;highlight&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;fields&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="mf">0.30685282</span><span class="p">,</span>
</span><span class='line'> <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>   <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'> <span class="p">},</span>
</span><span class='line'> <span class="s">&quot;highlight&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="s">&quot;&lt;em&gt;leon&lt;/em&gt;&quot;</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>aggregations</code> Search like SQL <code>GROUP BY</code></h3>

<p>count each user</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;aggs&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;all_user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;terms&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span><span class="p">:</span> <span class="s">&quot;user&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">//...</span>
</span><span class='line'><span class="s">&quot;aggregations&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;all_user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;doc_count_error_upper_bound&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;sum_other_doc_count&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;buckets&quot;</span> <span class="p">:</span> <span class="p">[</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>      <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;mark&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>      <span class="p">}</span> <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="c1">//...</span>
</span></code></pre></td></tr></table></div></figure>


<p>count each user + avg age</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;all_user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;terms&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;user&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;avg&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;age&quot;</span> <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// ...</span>
</span><span class='line'>  <span class="s">&quot;aggregations&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;all_user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;doc_count_error_upper_bound&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;sum_other_doc_count&quot;</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="s">&quot;buckets&quot;</span> <span class="p">:</span> <span class="p">[</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;value&quot;</span> <span class="p">:</span> <span class="mf">28.0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;leo2222n&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;value&quot;</span> <span class="p">:</span> <span class="mf">38.0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;key&quot;</span> <span class="p">:</span> <span class="s">&quot;mark&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;doc_count&quot;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;value&quot;</span> <span class="p">:</span> <span class="mf">28.0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span> <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="c1">// ...</span>
</span></code></pre></td></tr></table></div></figure>


<p>mix query</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;all_user&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;terms&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;user&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s">&quot;aggs&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;avg_age&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;avg&quot;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&quot;field&quot;</span> <span class="p">:</span> <span class="s">&quot;age&quot;</span> <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;took&quot;</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;timed_out&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;_shards&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;total&quot;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;successful&quot;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;failed&quot;</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;hits&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;total&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;max_score&quot;</span><span class="p">:</span> <span class="mf">1.4054651</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;hits&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;8&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="mf">1.4054651</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">38</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="mf">0.30685282</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;aggregations&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;all_user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;doc_count_error_upper_bound&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;sum_other_doc_count&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;buckets&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="s">&quot;key&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;doc_count&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>                    <span class="s">&quot;avg_age&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                        <span class="s">&quot;value&quot;</span><span class="p">:</span> <span class="mi">28</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Sort</h2>

<ul>
<li>ASC</li>
<li>DESC</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;sort&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;order&quot;</span><span class="p">:</span> <span class="s">&quot;asc&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>max_score</code> &amp; <code>_score</code> is null, because not use to sort</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// ...</span>
</span><span class='line'><span class="s">&quot;hits&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;total&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;max_score&quot;</span><span class="p">:</span> <span class="nx">null</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;hits&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="s">&quot;_index&quot;</span><span class="p">:</span> <span class="s">&quot;accounts&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;_type&quot;</span><span class="p">:</span> <span class="s">&quot;person&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;_id&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="nx">null</span><span class="p">,</span>
</span><span class='line'>          <span class="s">&quot;_source&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s">&quot;user&quot;</span><span class="p">:</span> <span class="s">&quot;leon&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&quot;title&quot;</span><span class="p">:</span> <span class="s">&quot;工程師&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&quot;desc&quot;</span><span class="p">:</span> <span class="s">&quot;數據庫管理，軟件開發&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s">&quot;age&quot;</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s">&quot;sort&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>              <span class="mi">18</span>
</span><span class='line'>          <span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="c1">// ...</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// ...</span>
</span></code></pre></td></tr></table></div></figure>


<h3>mutiple sort</h3>

<p>Use level 2 sort if level 1 sort result have same age</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">curl</span> <span class="err">&#39;</span><span class="nx">localhost</span><span class="p">:</span><span class="mi">9200</span><span class="o">/</span><span class="nx">accounts</span><span class="o">/</span><span class="nx">person</span><span class="o">/</span><span class="nx">_search</span><span class="err">?</span><span class="nx">pretty</span><span class="p">=</span><span class="kc">true</span><span class="err">&#39;</span>  <span class="o">-</span><span class="nx">d</span> <span class="err">&#39;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;query&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;match&quot;</span> <span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;user&quot;</span> <span class="p">:</span> <span class="s">&quot;leon&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;sort&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span> <span class="s">&quot;age&quot;</span><span class="p">:</span>   <span class="p">{</span> <span class="s">&quot;order&quot;</span><span class="p">:</span> <span class="s">&quot;asc&quot;</span> <span class="p">}},</span>
</span><span class='line'>        <span class="p">{</span> <span class="s">&quot;_score&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;order&quot;</span><span class="p">:</span> <span class="s">&quot;desc&quot;</span> <span class="p">}}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Reference</h1>

<ul>
<li><a href="https://github.com/elastic/elasticsearch">elasticsearch</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2017/08/elasticsearch.html">全文搜索引擎 Elasticsearch 入門課程</a></li>
<li><a href="https://es.xiaoleilu.com/010_Intro/00_README.html">Elasticsearch 權威指南</a></li>
<li><a href="https://www.cnblogs.com/yjf512/p/4897294.html">elasticsearch 查詢（match和term）</a></li>
<li><a href="https://www.youtube.com/watch?v=oPObRc8tHgQ">ElasticSearch in action - Thijs Feryn(video)</a></li>
<li><a href="https://my.oschina.net/weiweiblog/blog/1574020">ElasticSearch各種查詢關鍵字的區別（重要）</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Simple RESTful]]></title>
    <link href="https://mgleon08.github.io/blog/2019/04/11/golang-simple-restful/"/>
    <updated>2019-04-11T16:27:10+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/04/11/golang-simple-restful</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Practice RESTful with golang</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">GetUsers</span>     <span class="nx">GET</span>     <span class="o">/</span><span class="nx">users</span>
</span><span class='line'><span class="nx">GetUser</span>      <span class="nx">GET</span>     <span class="o">/</span><span class="nx">users</span><span class="o">/</span><span class="p">{</span><span class="nx">id</span><span class="p">}</span>
</span><span class='line'><span class="nx">CreateUser</span>   <span class="nx">POST</span>    <span class="o">/</span><span class="nx">users</span>
</span><span class='line'><span class="nx">UpdateUser</span>   <span class="nx">UPDATE</span>  <span class="o">/</span><span class="nx">users</span><span class="o">/</span><span class="p">{</span><span class="nx">id</span><span class="p">}</span>
</span><span class='line'><span class="nx">DeleteUser</span>   <span class="nx">DELETE</span>  <span class="o">/</span><span class="nx">users</span><span class="o">/</span><span class="p">{</span><span class="nx">id</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Use <a href="https://github.com/gorilla/mux">gorilla/mux</a> package</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;net/http&quot;</span>
</span><span class='line'>  <span class="s">&quot;strconv&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/gorilla/mux&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">User</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ID</span>        <span class="kt">int</span>    <span class="s">`json:&quot;id,omitempty&quot;`</span>
</span><span class='line'>  <span class="nx">Firstname</span> <span class="kt">string</span> <span class="s">`json:&quot;firstname,omitempty&quot;`</span>
</span><span class='line'>  <span class="nx">Lastname</span>  <span class="kt">string</span> <span class="s">`json:&quot;lastname,omitempty&quot;`</span>
</span><span class='line'>  <span class="nx">Info</span>      <span class="s">`json:&quot;info,omitempty&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">Info</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">City</span>  <span class="kt">string</span> <span class="s">`json:&quot;city,omitempty&quot;`</span>
</span><span class='line'>  <span class="nx">Phone</span> <span class="kt">int</span>    <span class="s">`json:&quot;phone,omitempty&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">users</span> <span class="p">[]</span><span class="nx">User</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">GetUsers</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">users</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">GetUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span> <span class="o">:=</span> <span class="nx">convertParams</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">u</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">users</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">u</span><span class="p">.</span><span class="nx">ID</span> <span class="o">==</span> <span class="nx">id</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="s">&quot;User not found&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">CreateUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">user</span> <span class="nx">User</span>
</span><span class='line'>  <span class="nx">_</span> <span class="p">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">NewDecoder</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">Body</span><span class="p">).</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">users</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="nx">user</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">UpdateUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">user</span> <span class="nx">User</span>
</span><span class='line'>  <span class="nx">id</span> <span class="o">:=</span> <span class="nx">convertParams</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">_</span> <span class="p">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">NewDecoder</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">Body</span><span class="p">).</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">u</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">users</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">u</span><span class="p">.</span><span class="nx">ID</span> <span class="o">==</span> <span class="nx">id</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">users</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nx">user</span>
</span><span class='line'>          <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">user</span><span class="p">)</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">DeleteUser</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span> <span class="o">:=</span> <span class="nx">convertParams</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">u</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">users</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">u</span><span class="p">.</span><span class="nx">ID</span> <span class="o">==</span> <span class="nx">id</span> <span class="p">{</span>
</span><span class='line'>          <span class="nb">copy</span><span class="p">(</span><span class="nx">users</span><span class="p">[</span><span class="nx">i</span><span class="p">:],</span> <span class="nx">users</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">:])</span>
</span><span class='line'>          <span class="nx">users</span> <span class="p">=</span> <span class="nx">users</span><span class="p">[:</span><span class="nb">len</span><span class="p">(</span><span class="nx">users</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">json</span><span class="p">.</span><span class="nx">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">Encode</span><span class="p">(</span><span class="nx">users</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">convertParams</span><span class="p">(</span><span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">params</span> <span class="o">:=</span> <span class="nx">mux</span><span class="p">.</span><span class="nx">Vars</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">id</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">strconv</span><span class="p">.</span><span class="nx">Atoi</span><span class="p">(</span><span class="nx">params</span><span class="p">[</span><span class="s">&quot;id&quot;</span><span class="p">])</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatalf</span><span class="p">(</span><span class="s">&quot;err: %v&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">id</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">router</span> <span class="o">:=</span> <span class="nx">mux</span><span class="p">.</span><span class="nx">NewRouter</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">user1</span> <span class="o">:=</span> <span class="nx">User</span><span class="p">{</span><span class="nx">ID</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">Firstname</span><span class="p">:</span> <span class="s">&quot;hello&quot;</span><span class="p">,</span> <span class="nx">Lastname</span><span class="p">:</span> <span class="s">&quot;World&quot;</span><span class="p">,</span> <span class="nx">Info</span><span class="p">:</span> <span class="nx">Info</span><span class="p">{</span><span class="nx">City</span><span class="p">:</span> <span class="s">&quot;Taipei&quot;</span><span class="p">,</span> <span class="nx">Phone</span><span class="p">:</span> <span class="mi">123</span><span class="p">}}</span>
</span><span class='line'>  <span class="nx">user2</span> <span class="o">:=</span> <span class="nx">User</span><span class="p">{</span><span class="nx">ID</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">Firstname</span><span class="p">:</span> <span class="s">&quot;hello&quot;</span><span class="p">,</span> <span class="nx">Lastname</span><span class="p">:</span> <span class="s">&quot;World&quot;</span><span class="p">,</span> <span class="nx">Info</span><span class="p">:</span> <span class="nx">Info</span><span class="p">{</span><span class="nx">City</span><span class="p">:</span> <span class="s">&quot;Taipei&quot;</span><span class="p">,</span> <span class="nx">Phone</span><span class="p">:</span> <span class="mi">456</span><span class="p">}}</span>
</span><span class='line'>  <span class="nx">users</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="nx">user1</span><span class="p">,</span> <span class="nx">user2</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users&quot;</span><span class="p">,</span> <span class="nx">GetUsers</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;GET&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users/{id}&quot;</span><span class="p">,</span> <span class="nx">GetUser</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;GET&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users&quot;</span><span class="p">,</span> <span class="nx">CreateUser</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;POST&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users/{id}&quot;</span><span class="p">,</span> <span class="nx">UpdateUser</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;PUT&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">router</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/users/{id}&quot;</span><span class="p">,</span> <span class="nx">DeleteUser</span><span class="p">).</span><span class="nx">Methods</span><span class="p">(</span><span class="s">&quot;DELETE&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Starting server on port 3000...&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">http</span><span class="p">.</span><span class="nx">ListenAndServe</span><span class="p">(</span><span class="s">&quot;:3000&quot;</span><span class="p">,</span> <span class="nx">router</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>params</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;id&quot;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;firstname&quot;</span><span class="p">:</span> <span class="s">&quot;hello&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;lastname&quot;</span><span class="p">:</span> <span class="s">&quot;World&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s">&quot;info&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;city&quot;</span><span class="p">:</span> <span class="s">&quot;Taipei&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;phone&quot;</span><span class="p">:</span> <span class="mi">123</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>run</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">run</span> <span class="nx">main</span><span class="p">.</span><span class="k">go</span>
</span><span class='line'><span class="c1">// http://localhost:3000/users</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Code</h1>

<ul>
<li><a href="https://github.com/mgleon08/go-packages/blob/master/018.simple_restful/main.go">simple_restful</a></li>
</ul>


<h1>With mongodb</h1>

<ul>
<li><a href="https://github.com/mgleon08/go-packages/tree/master/019.restful_mongodb">restful_mongodb</a></li>
</ul>


<p>Reference</p>

<ul>
<li><a href="https://medium.com/@petrousov/how-to-build-a-restful-api-in-go-for-phonebook-app-d55f7234a10">How to build a RESTful API in Go for phonebook app</a></li>
<li><a href="https://medium.com/@petrousov/implementing-crud-operations-with-go-and-mongodb-cf622f2379c4">Implementing CRUD operations with Go and MongoDB</a></li>
<li><a href="https://github.com/gorilla/mux">gorilla/mux</a></li>
<li><a href="https://yourbasic.org/golang/delete-element-slice/">2 ways to delete an element from a slice</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - MongoDB]]></title>
    <link href="https://mgleon08.github.io/blog/2019/04/10/golang-mongodb/"/>
    <updated>2019-04-10T21:30:30+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/04/10/golang-mongodb</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>Install the MongoDB Go Driver</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="k">go</span> <span class="nx">get</span> <span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">mongodb</span><span class="o">/</span><span class="nx">mongo</span><span class="o">-</span><span class="k">go</span><span class="o">-</span><span class="nx">driver</span>
</span></code></pre></td></tr></table></div></figure>


<p>或使用 go module</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">go</span> <span class="nx">mode</span> <span class="nx">init</span> <span class="p">&lt;</span><span class="nx">current</span> <span class="kn">package</span> <span class="nx">name</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Connect to MongoDB using the Go Driver</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="s">&quot;github.com/mongodb/mongo-go-driver/mongo&quot;</span>
</span><span class='line'>  <span class="s">&quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">client</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">mongo</span><span class="p">.</span><span class="nx">Connect</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">(),</span> <span class="nx">options</span><span class="p">.</span><span class="nx">Client</span><span class="p">().</span><span class="nx">ApplyURI</span><span class="p">(</span><span class="s">&quot;mongodb://localhost:27017&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Check the connection</span>
</span><span class='line'>  <span class="nx">err</span> <span class="p">=</span> <span class="nx">client</span><span class="p">.</span><span class="nx">Ping</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">(),</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Connected to MongoDB!&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// handle for the trainers collection in the test database</span>
</span><span class='line'>  <span class="c1">// collection := client.Database(&quot;test&quot;).Collection(&quot;trainers&quot;)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Close the connection</span>
</span><span class='line'>  <span class="nx">err</span> <span class="p">=</span> <span class="nx">client</span><span class="p">.</span><span class="nx">Disconnect</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Connection to MongoDB closed.&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>mongo.Connect</code> Connect</li>
<li><code>client.Ping</code> Check the connection</li>
<li><code>client.Disconnect</code> Close the connection</li>
</ul>


<h1>BSON (Binary Serialized Document Format, Binary-encoded JSON)</h1>

<ul>
<li>一種二進制形式的存儲格式，採用了類似於 C 語言結構體的名稱</li>
<li>對表示方法支援內嵌的文件物件和陣列物件</li>
<li>具有輕量性、可遍歷性、高效性的特點，可以有效描述非結構化數據和結構化數據</li>
<li>schema-less的存儲形式</li>
<li>優點是靈活性高，但它的缺點是空間利用率不是很理想</li>
<li>不像一般 json 用簡單的 string 和 number，而是可以給予 type (int, long, date, floating point, and decimal128)，可以更方便的去做比較排許等等的</li>
</ul>


<h3>在 Go 中提供了兩種 BSON 的資料格式 <code>D types</code> the <code>Raw types</code></h3>

<p><code>D type</code></p>

<blockquote><p>The D family of types is used to concisely build BSON objects using native Go types. This can be particularly useful for constructing commands passed to MongoDB. The D family consists of four types:</p></blockquote>

<ul>
<li><code>D</code>: A BSON document. This type should be used in situations where order matters, such as MongoDB commands.</li>
<li><code>M</code>: An unordered map. It is the same as D, except it does not preserve order.</li>
<li><code>A</code>: A BSON array.</li>
<li><code>E</code>: A single element inside a D.</li>
</ul>


<p>Example</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// D type filter to find where the name field matches either Alice or Bob </span>
</span><span class='line'><span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="err">\</span><span class="p">{</span><span class="err">\</span><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="err">\</span><span class="p">{</span><span class="err">\</span><span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;$in&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">bson</span><span class="p">.</span><span class="nx">A</span><span class="p">{</span><span class="s">&quot;Alice&quot;</span><span class="p">,</span> <span class="s">&quot;Bob&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="p">}}</span>
</span><span class='line'><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Raw</code></p>

<blockquote><p>The Raw family of types is used for validating a slice of bytes. You can also retrieve single elements from Raw types using a <a href="https://godoc.org/go.mongodb.org/mongo-driver/bson#Raw.Lookup">Lookup</a>. This is useful if you don&rsquo;t want the overhead of having to unmarshall the BSON into another type. This tutorial will just use the D family of types.</p></blockquote>

<h1>CRUD Operations</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">Trainer</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Name</span> <span class="kt">string</span>
</span><span class='line'>  <span class="nx">Age</span>  <span class="kt">int</span>
</span><span class='line'>  <span class="nx">City</span> <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>C - Insert documents</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">ash</span> <span class="o">:=</span> <span class="nx">Trainer</span><span class="p">{</span><span class="s">&quot;Ash&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="s">&quot;Pallet Town&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nx">misty</span> <span class="o">:=</span> <span class="nx">Trainer</span><span class="p">{</span><span class="s">&quot;Misty&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="s">&quot;Cerulean City&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nx">brock</span> <span class="o">:=</span> <span class="nx">Trainer</span><span class="p">{</span><span class="s">&quot;Brock&quot;</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="s">&quot;Pewter City&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// insert one</span>
</span><span class='line'><span class="nx">insertResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">InsertOne</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">ash</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Inserted a single document: &quot;</span><span class="p">,</span> <span class="nx">insertResult</span><span class="p">.</span><span class="nx">InsertedID</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// insert many</span>
</span><span class='line'><span class="nx">trainers</span> <span class="o">:=</span> <span class="p">[]</span><span class="kd">interface</span><span class="p">{}{</span><span class="nx">misty</span><span class="p">,</span> <span class="nx">brock</span><span class="p">}</span>
</span><span class='line'><span class="nx">insertManyResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">InsertMany</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">trainers</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Inserted multiple documents: &quot;</span><span class="p">,</span> <span class="nx">insertManyResult</span><span class="p">.</span><span class="nx">InsertedIDs</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>U - Update documents</h3>

<p>需要透過 <code>bson.D</code> types 去找到 match 的 data 再做更新</p>

<ul>
<li><a href="https://docs.mongodb.com/manual/reference/operator/update-field/">Field Update Operators</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 找出 name ＝ &quot;Ash&quot;</span>
</span><span class='line'><span class="nx">filter</span> <span class="o">:=</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="p"></span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 將 age - 1</span>
</span><span class='line'><span class="nx">update</span> <span class="o">:=</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="p">{</span>
</span><span class='line'>    <span class="p">{</span><span class="s">&quot;$inc&quot;</span><span class="p">,</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="p">{</span>
</span><span class='line'>        <span class="p">{</span><span class="s">&quot;age&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
</span><span class='line'>    <span class="p">}},</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">updateResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">UpdateOne</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">filter</span><span class="p">,</span> <span class="nx">update</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Matched %v documents and updated %v documents.\n&quot;</span><span class="p">,</span> <span class="nx">updateResult</span><span class="p">.</span><span class="nx">MatchedCount</span><span class="p">,</span> <span class="nx">updateResult</span><span class="p">.</span><span class="nx">ModifiedCount</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>$inc</code> - Increments the value of the field by the specified amount.</li>
<li><code>updateResult.MatchedCount</code> - The number of documents that matched the filter.</li>
<li><code>updateResult.ModifiedCount</code> - The number of documents that were modified.</li>
</ul>


<h3>R - Find documents</h3>

<p><code>Find a document</code> use <code>collection.FindOne()</code></p>

<blockquote><p>To find a document, you will need a filter document as well as a pointer to a value into which the result can be decoded</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// create a value into which the result can be decoded</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">result</span> <span class="nx">Trainer</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 取出的值必須要 Decode</span>
</span><span class='line'><span class="nx">err</span> <span class="p">=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">FindOne</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">filter</span><span class="p">).</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">result</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Found a single document: %+v\n&quot;</span><span class="p">,</span> <span class="nx">result</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Find multiple documents</code> use <code>collection.Find()</code></p>

<blockquote><p>This method returns a Cursor. A Cursor provides a stream of documents through which you can iterate and decode one at a time. Once a Cursor has been exhausted, you should close the Cursor.</p>

<p>Here you&rsquo;ll also set some options on the operation using the options package. Specifically, you&rsquo;ll set a limit so only 2 documents are returned.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// Pass these options to the Find method</span>
</span><span class='line'><span class="nx">findOptions</span> <span class="o">:=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">Find</span><span class="p">()</span>
</span><span class='line'><span class="nx">findOptions</span><span class="p">.</span><span class="nx">SetLimit</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Here&#39;s an array in which you can store the decoded documents</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">results</span> <span class="p">[]</span><span class="o">*</span><span class="nx">Trainer</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Passing nil as the filter matches all documents in the collection</span>
</span><span class='line'><span class="c1">// 範例原本寫 nil 但是有問題所以改成 bson.D{}</span>
</span><span class='line'><span class="nx">cur</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">Find</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">D</span><span class="p">{},</span> <span class="nx">findOptions</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Finding multiple documents returns a cursor</span>
</span><span class='line'><span class="c1">// Iterating through the cursor allows us to decode documents one at a time</span>
</span><span class='line'><span class="k">for</span> <span class="nx">cur</span><span class="p">.</span><span class="nx">Next</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// create a value into which the single document can be decoded</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">elem</span> <span class="nx">Trainer</span>
</span><span class='line'>    <span class="nx">err</span> <span class="o">:=</span> <span class="nx">cur</span><span class="p">.</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">elem</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">results</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">results</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">elem</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">cur</span><span class="p">.</span><span class="nx">Err</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Close the cursor once finished</span>
</span><span class='line'><span class="nx">cur</span><span class="p">.</span><span class="nx">Close</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Found multiple documents (array of pointers): %+v\n&quot;</span><span class="p">,</span> <span class="nx">results</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">result</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">results</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%d: %+v \n&quot;</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">result</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>D - Delete Documents</h3>

<blockquote><p>delete documents using <code>collection.DeleteOne()</code> or <code>collection.DeleteMany()</code>.</p>

<p>Here you pass nil as the filter argument, which will match all documents in the collection. You could also use <a href="https://godoc.org/github.com/mongodb/mongo-go-driver/mongo#Collection.Drop">collection.Drop()</a> to delete an entire collection.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// DeleteOne</span>
</span><span class='line'><span class="nx">deleteOneResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">DeleteOne</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">M</span><span class="p">{})</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Deleted %v documents in the trainers collection\n&quot;</span><span class="p">,</span> <span class="nx">deleteOneResult</span><span class="p">.</span><span class="nx">DeletedCount</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// DeleteMany</span>
</span><span class='line'><span class="nx">deleteResult</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">collection</span><span class="p">.</span><span class="nx">DeleteMany</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">TODO</span><span class="p">(),</span> <span class="nx">bson</span><span class="p">.</span><span class="nx">M</span><span class="p">{})</span>
</span><span class='line'><span class="c1">// DELETA name = Misty &amp;&amp; age &gt; 10</span>
</span><span class='line'><span class="c1">// deleteResult, err := collection.DeleteMany(context.TODO(), bson.M{&quot;name&quot;: &quot;Misty&quot;, &quot;age&quot;: bson.M{&quot;$gte&quot;: 10}})</span>
</span><span class='line'><span class="c1">// deleteResult, err := collection.DeleteMany(context.TODO(), bson.D\{\{&quot;name&quot;, &quot;Misty&quot;}, {&quot;age&quot;, bson.M{&quot;$gte&quot;: 10}}})</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Deleted %v documents in the trainers collection\n&quot;</span><span class="p">,</span> <span class="nx">deleteResult</span><span class="p">.</span><span class="nx">DeletedCount</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Example</h1>

<ul>
<li><a href="https://github.com/mgleon08/go-packages/tree/master/017.mongodb">016.mongodb</a></li>
</ul>


<p>Reference</p>

<ul>
<li><a href="https://github.com/mongodb/mongo-go-driver/tree/master/examples/documentation_examples">documentation_examples</a></li>
<li><a href="https://godoc.org/go.mongodb.org/mongo-driver">godoc mongo-driver</a></li>
<li><a href="https://docs.mongodb.com/manual/reference/operator/">BSON Operators</a></li>
<li><a href="http://bsonspec.org/">BSON</a></li>
<li><a href="https://blog.csdn.net/m0_38110132/article/details/77716792">BSON的介紹及BSON與JSON的區別</a></li>
<li><a href="https://www.mongodb.com/blog/post/mongodb-go-driver-tutorial">MongoDB Go Driver Tutorial</a></li>
<li><a href="https://www.jianshu.com/p/0344a21e8040?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">mongodb官方的golang驅動基礎使用課程分享</a></li>
<li><a href="https://zh.shellman.me/articles/mongo-go-driver-demo/">MongoDB官方推出的Go驅動庫“mongo-go-driver”快速課程</a></li>
<li><a href="https://blog.gtwang.org/programming/getting-started-with-mongodb-shell-1/">MongoDB 基礎入門教學：MongoDB Shell 篇</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang - Context]]></title>
    <link href="https://mgleon08.github.io/blog/2019/04/10/golang-context/"/>
    <updated>2019-04-10T21:30:20+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/04/10/golang-context</id>
    <content type="html"><![CDATA[<!-- more -->


<p><code>context</code> 是控制並發的一個 package，之前在 <a href="https://mgleon08.github.io/blog/2018/05/17/golang-goroutine-channel-worker-pool-select-mutex/#worker_pool">Worker Pool</a> 也有提到過另一個 <code>WaitGroup</code>，那為什麼需要兩種，來了解一下</p>

<h1>WaitGroup</h1>

<p>當所有的 <code>goroutine</code> 都完成後，才算完成</p>

<h3>實際場景</h3>

<p>有個監控程式跑很多 <code>gorountine</code>，當要停止時，就必須通知每個 <code>gorountine</code> 並等待所有都完成，才算完成，否則會造成記憶體洩漏</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;sync&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">i</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">wg</span> <span class="o">*</span><span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;監控開始 &quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;監控 %d 結束\n&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">wg</span><span class="p">.</span><span class="nx">Done</span><span class="p">()</span> <span class="c1">// 執行完一次就 -1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">no</span> <span class="o">:=</span> <span class="mi">2</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">wg</span> <span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">no</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">wg</span><span class="p">.</span><span class="nx">Add</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>          <span class="c1">// 每次執行都 + 1</span>
</span><span class='line'>      <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">wg</span><span class="p">)</span> <span class="c1">// wg 一定要用 pointer，否則每個 goroutine 都會有各自的 WaitGroup</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">wg</span><span class="p">.</span><span class="nx">Wait</span><span class="p">()</span> <span class="c1">// 會 wait 到 0 才會繼續下一步</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;所有監控完成&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>大部分的 <code>gorountine</code> 啟動後，就會一直跑，大部分情況是等待它自己結束，如果是不會結束的 <code>gorountine</code>，就會一直跑下去，比較笨的方式就是，用一個變數去判斷是否要結束，但這樣就必須一直去檢查這個變數</p>

<p>因此可以改用 <code>chan + select</code> 來通知</p>

<h1>chan + select</h1>

<p>這方式很好的解決上述的問題，並且可以透過給予 <code>chan</code> 值來決定是否要停止，但還是有其他問題</p>

<ul>
<li>如果有很多 <code>goroutine</code> 都需要控制結束怎麼辦?</li>
<li><code>goroutine</code> 又衍生了其它更多的goroutine怎麼?</li>
</ul>


<p>即使定義很多 <code>chan</code> 也很難解決這個問題，因為 <code>goroutine</code> 的關係鏈就導致了這種場景非常複雜，因此就有另一個方式 <code>context</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">stop</span> <span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">stop</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;監控退出，停止了...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;goroutine 監控中...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">stop</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">stop</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">stop</span> <span class="o">&lt;-</span> <span class="kc">true</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;所有監控完成&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>context</h1>

<ul>
<li><a href="https://golang.org/pkg/context/">context</a></li>
</ul>


<p>上面提到的情境是多層級的 <code>goroutine</code>，因此要控制就必須跟蹤 <code>groutine</code></p>

<p>因此 golang 提供了 <code>context</code> 來控制，也就是 <code>groutine</code> 的上下文</p>

<h3>Context 使用原則</h3>

<ul>
<li>不要把 Context 放在結構體中，要以參數的方式傳遞</li>
<li>以 Context 作為參數的函式方法，應該把 Context 作為第一個參數，放在第一位。</li>
<li>給一個函式方法傳遞 Context 的時候，不要傳遞 nil，如果不知道傳遞什麼，就使用 <code>context.TODO</code></li>
<li>Context 的 Value 相關方法應該傳遞必須的數據，不要什麼數據都使用這個傳遞</li>
<li>Context 是執行緒安全的，可以放心的在多個 goroutine 中傳遞</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">Done</span><span class="p">():</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;監控退出，停止了...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;goroutine監控中...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ctx</span><span class="p">,</span> <span class="nx">cancel</span> <span class="o">:=</span> <span class="nx">context</span><span class="p">.</span><span class="nx">WithCancel</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">())</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ctx</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;通知監控停止&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">cancel</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;所有監控完成&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>context.Background()</code> 回傳一個非 nil 的空 context，不會被取消也沒有值或時間，就是 context 的根節點</li>
<li><code>context.WithCancel(parent)</code> 建立一個可取消的 <code>子 context</code> 當作參數來追蹤 <code>goroutine</code>，另外一個是 <code>cancle</code> 用於取消這個 <code>子 context</code></li>
<li><code>ctx.Done</code> 判斷是否要結束，透過 <code>cancel()</code> 來取消</li>
</ul>


<p>目前為止似乎跟 <code>chan</code> 沒什麼兩樣?接著試著控制多個 goroutine</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;context&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">,</span> <span class="nx">n</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">Done</span><span class="p">():</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="s">&quot;監控退出，停止了...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span>
</span><span class='line'>      <span class="k">default</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;goroutine %v 監控中...\n&quot;</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ctx</span><span class="p">,</span> <span class="nx">cancel</span> <span class="o">:=</span> <span class="nx">context</span><span class="p">.</span><span class="nx">WithCancel</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">Background</span><span class="p">())</span>
</span><span class='line'>  <span class="nx">n</span> <span class="o">:=</span> <span class="mi">3</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">go</span> <span class="nx">process</span><span class="p">(</span><span class="nx">ctx</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;通知監控停止&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">cancel</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;所有監控完成&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到，上面即使有多個 <code>goroutine</code> 依樣只要一個 <code>cancel()</code> 就全部都取消了</p>

<p>如果是用之前 <code>chan</code>，變成只有一個 <code>true</code> 只能夠取消一個，就結束了，導致剩下的 memory 沒辦法釋放，或是一次放三個 <code>true</code> 去控制，但是當一多起來，就會變得很複雜</p>

<h1>Context interface</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">type</span> <span class="nx">Context</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Deadline</span><span class="p">()</span> <span class="p">(</span><span class="nx">deadline</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Time</span><span class="p">,</span> <span class="nx">ok</span> <span class="kt">bool</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Done</span><span class="p">()</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="kd">struct</span><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Err</span><span class="p">()</span> <span class="kt">error</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Value</span><span class="p">(</span><span class="nx">key</span> <span class="kd">interface</span><span class="p">{})</span> <span class="kd">interface</span><span class="p">{}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>Deadline()</code> 是獲取設定的截止時間的意思

<ul>
<li><code>deadline</code> 截止時間，到了這個時間點，Context 會自動發起取消請求</li>
<li><code>ok</code> 如果是 false，表示沒有設定截止時間，如果需要取消的話，需要呼叫取消函式進行取消</li>
</ul>
</li>
<li><code>Done</code> 返回一個 <code>只讀的 chan</code>，類型為 struct{}

<ul>
<li>如果可讀取，表示 <code>parent context</code> 已發起取消的請求(<code>cancel</code>)，收到信號時就會開始清理操作，然後退出 goroutine，釋放資源</li>
</ul>
</li>
<li><code>Err</code> 返回取消的錯誤原因，因為什麼 Context 被取消</li>
<li><code>Value</code> 獲取該 Context 上繫結的值，是一個鍵值對，所以要透過一個 Key 才可以獲取對應的值，這個值一般是執行緒安全的</li>
</ul>


<h1>Other</h1>

<ul>
<li><a href="https://golang.org/pkg/context/#example_WithCancel">WithCancel</a> 主動取消</li>
<li><a href="https://golang.org/pkg/context/#example_WithDeadline">WithDeadline</a> 截止時間取消</li>
<li><a href="https://golang.org/pkg/context/#example_WithTimeout">WithTimeout</a> 超時取消</li>
<li><a href="https://golang.org/pkg/context/#example_WithValue">WithValue</a> 傳值</li>
<li>也可以不包上面的 With，直接使用 <code>context.Background()</code>，可以看到上面的 With 最後回傳的也是 <code>context Context</code></li>
</ul>


<p>Reference</p>

<ul>
<li><a href="https://golang.org/pkg/context/">context</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/58967892">Go Context</a></li>
<li><a href="https://deepzz.com/post/golang-context-package-notes.html">快速掌握 Golang context 包，簡單示例</a></li>
<li><a href="https://segmentfault.com/a/1190000017394302">Golang Context 是好的設計嗎？</a></li>
<li><a href="https://juejin.im/post/5a6873fef265da3e317e55b6">Golang Context深入理解</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
