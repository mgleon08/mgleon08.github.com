<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leon's Blogging]]></title>
  <link href="http://mgleon08.github.com/atom.xml" rel="self"/>
  <link href="http://mgleon08.github.com/"/>
  <updated>2015-12-19T12:27:09+08:00</updated>
  <id>http://mgleon08.github.com/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Debugging]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/19/ruby-on-rails-debugging/"/>
    <updated>2015-12-19T11:09:06+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/19/ruby-on-rails-debugging</id>
    <content type="html"><![CDATA[<p>當程式發生 bug 的時候，要如何來有效率的debug!?<br/>
今天就來介紹幾種方式，快速的找出這些 <code>臭蟲</code></p>

<!-- more -->


<h1>raise</h1>

<p>直接在覺得有問題的地方加上 <code>raise</code><br/>
rails會在該行指令處產生 <code>RuntimeError</code>，接著網頁就會進入錯誤畫面了<br/>
下面黑色區塊就可以給輸入指令，看到底哪裡出問題</p>

<p>這是比較陽春的方式，不用特別安裝 gem，也不用去 console 中 debug</p>

<p><img src="images/raise.png" alt="raise" /></p>

<h1><a href="https://github.com/deivid-rodriguez/byebug">byebug</a></h1>

<p>內建在裡面的一個 gem ，可以在任何的地方插入 <code>byebug</code> , 當跑到那個地方的時候就會停下來，接著就可以在 console 裡面輸入指令，測試完後就輸入 <code>continue</code> 繼續跑，或是 <code>exit</code> 離開。</p>

<p>但缺點是很吃效能，每次繼續跑就會變超慢，所以我都會直接整個重開。</p>

<p><img src="images/byebug.png" alt="byebug" /></p>

<h1><a href="https://github.com/charliesome/better_errors">better_errors</a></h1>

<p>有點像是 raise 的進階版本，更多詳細的資訊，只要有例外，就會顯示這種畫面</p>

<p><img src="images/better_errors.png" alt="better_errors" /></p>

<p><a href="http://motion-express.com/blog/20141014-debugging-rails-better-errors/">Debugging Rails 使用 better_errors 在瀏覽器中直接進行除錯</a></p>

<h1><a href="https://github.com/pry/pry">pry</a></h1>

<p>更厲害的 debug 神器，在 console 裡面，並且有顏色更加清楚，還可以進入某個變數裡面，
像是 <code>cd dir</code> 進入另一個資料夾的感覺</p>

<p><img src="images/pry.png" alt="pry" /></p>

<p><a href="http://blog.xdite.net/posts/2012/08/13/pry-the-new-debugger">Pry ：新一代 Debug 利器</a><br/>
<a href="http://motion-express.com/blog/20141015-debugging-rails-pry">Debugging Rails 沒有錯誤訊息卻還是有bug！要如何即時除錯？</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails - 用 Pow 當 HTTP Server]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/18/ruby-on-rails-pow/"/>
    <updated>2015-12-18T17:39:04+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/18/ruby-on-rails-pow</id>
    <content type="html"><![CDATA[<p>當要啟動一個專案的時候，通常都是打 <code>rails s</code><br/>
就會跑在 port 3000 接著網址打 <code>http://localhost:3000/</code>，就可以打開了!</p>

<p>那要啟動另一個勒？ 通常有以下兩種方式</p>

<!-- more -->


<ol>
<li>先關掉第一個，再開啟另一個</li>
<li>換別的 port <code>rails s -p 4000</code></li>
</ol>


<p>但是萬一facebook登入，已經設定是 <code>http://localhost:3000/</code>，那就悲劇了..<br/>
因此有另一種方式來解決這種問題</p>

<h1><a href="http://pow.cx/">pow</a></h1>

<p>安裝方式也相當簡單，照著官方網站</p>

<p>先下載到電腦上</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl get.pow.cx | sh</span></code></pre></td></tr></table></div></figure>


<p>在指向到專案裡面</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/.pow
</span><span class='line'>$ ln -s /path/to/myapp</span></code></pre></td></tr></table></div></figure>


<p>接著在 <code>open http://myapp.dev</code><br/>
就會啟動了!</p>

<h1><a href="https://github.com/Rodreegez/powder">powder</a></h1>

<p>powder 是一個整合好 pow 的 gem ，可以更方便快速的啟動一個專案</p>

<h3>安裝方式</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install powder</span></code></pre></td></tr></table></div></figure>


<h3>使用方式</h3>

<p>在專案底下輸入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>powder link</span></code></pre></td></tr></table></div></figure>


<p>就會建立起連結，接著輸入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>powder open</span></code></pre></td></tr></table></div></figure>


<p>就打開了，超方便</p>

<p>另外一定會問到，那要怎麼看 <code>log</code></p>

<ol>
<li><code>tail -f log/development.log</code></li>
<li><code>powder applog</code></li>
</ol>


<p>重新啟動 (通常有動到 app 以外的檔案，就會需要重啟)</p>

<ol>
<li><code>touch tmp/restart.txt</code></li>
<li><code>powder restart</code></li>
</ol>


<p>更多指令可以到 github 上面看<br/>
<a href="https://github.com/Rodreegez/powder">powder</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails - 簡易搜尋功能]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/18/ruby-on-rails-basic-search/"/>
    <updated>2015-12-18T16:01:02+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/18/ruby-on-rails-basic-search</id>
    <content type="html"><![CDATA[<p>在架設網站得時候，不免常常需要用到搜尋功能（增加使用者體驗)<br/>
所以在這邊介紹一個簡易的搜尋功能</p>

<!-- more -->


<p>並不需要額外加 router，直接先在 view 裡面加上</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_tag books_path, :method =</span><span class="o">&gt;</span> <span class="ss">:get</span> <span class="k">do</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx"> &lt;%= text_field_tag &quot;keyword&quot;, nil, placeholder: &#39;請輸入關鍵字...&#39;, :class=&gt;</span><span class="s2">&quot;form-control&quot;</span><span class="sx">%&gt;</span>
</span><span class='line'><span class="sx"> &lt;%= submit_tag &quot;Search&quot; %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>之後在 controller 加上</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:keyword</span><span class="o">]</span>
</span><span class='line'>  <span class="vi">@books</span> <span class="o">=</span> <span class="no">Book</span><span class="o">.</span><span class="n">where</span><span class="p">(</span> <span class="o">[</span> <span class="s2">&quot;name like ? or content like&quot;</span><span class="p">,</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:keyword</span><span class="o">]</span><span class="si">}</span><span class="s2">%&quot;</span><span class="p">,</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:keyword</span><span class="o">]</span><span class="si">}</span><span class="s2">%&quot;</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>用SQL的語法 <code>LIKE</code>，直接在資料庫裡面找尋相關的關鍵字，如果有多個欄位，再加上 <code>OR</code> 即可，其中 <code>name</code> 和 <code>content</code> 就是要搜尋的欄位。</p>

<p>記得前面後面要加上 <code>%</code> ，如果沒加上，就一定要完全跟輸入的關鍵字一樣。<br/>
加上去之後代表，前面後面都可以加上任意字組，就等於是說只有欄位裡有這個關鍵字就搜尋出來的意思。</p>

<p><code>% (百分比符號)：代表零個、一個、或數個字母。</code></p>

<p><a href="http://www.1keydata.com/tw/sql/sql-wildcard.html">SQL萬用字元</a></p>

<p>以上是比較簡易的方式來達成</p>

<h1>進階搜尋</h1>

<p>如果要更加複雜或是全文搜尋的話<br/>
可以用 gem 來取代</p>

<ul>
<li><p><a href="https://github.com/activerecord-hackery/ransack">ransack</a><br/>
比較不考慮效能</p></li>
<li><p><a href="https://github.com/outoftime/sunspot">Solr</a><br/>
<a href="http://gogojimmy.net/2012/01/25/full-text-search-in-rails-with-solr/">在 Rails 中使用 Solr 做全文搜尋</a></p></li>
<li><p><a href="https://www.elastic.co/">Elasticsearch</a><br/>
<a href="https://github.com/elastic/elasticsearch-rails">elasticsearch-rails</a><br/>
<a href="https://github.com/ankane/searchkick">第三方gem: Searchkick</a></p></li>
</ul>


<p>不過目前都還沒用過啊..改天要用到再來研究一下:D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[.nil? .empty? .blank? .present? 傻傻分不清楚？]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/16/ruby-on-rail-nil-empty-blank-present/"/>
    <updated>2015-12-16T21:29:43+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/16/ruby-on-rail-nil-empty-blank-present</id>
    <content type="html"><![CDATA[<p>在學習ruby on rails的過程中，常常會有一些非常神奇的語法<br/>
其中又有些語法非常的相像..所以常常會搞混</p>

<p>今天就來介紹一下這幾個很相似的 method</p>

<!-- more -->


<h1>.nil?</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">nil?</span>       <span class="c1">#true</span>
</span><span class='line'><span class="o">[].</span><span class="n">nil?</span>        <span class="c1">#false</span>
</span><span class='line'><span class="p">{}</span><span class="o">.</span><span class="n">nil?</span>        <span class="c1">#false</span>
</span><span class='line'><span class="s2">&quot;&quot;</span><span class="o">.</span><span class="n">nil?</span>        <span class="c1">#false</span>
</span><span class='line'><span class="s2">&quot; &quot;</span><span class="o">.</span><span class="n">nil?</span>       <span class="c1">#false</span>
</span><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">nil?</span>     <span class="c1">#false</span>
</span><span class='line'><span class="mi">123</span><span class="o">.</span><span class="n">nil?</span>       <span class="c1">#false</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ruby method</li>
<li>任何物件都是false，只有nil是true</li>
</ul>


<h1>.empty? &amp; .any?</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">empty?</span>     <span class="c1">#NoMethodError: undefined method `empty?&#39; for nil:NilClass</span>
</span><span class='line'><span class="o">[].</span><span class="n">empty?</span>      <span class="c1">#true</span>
</span><span class='line'><span class="p">{}</span><span class="o">.</span><span class="n">empty?</span>      <span class="c1">#true</span>
</span><span class='line'><span class="s2">&quot;&quot;</span><span class="o">.</span><span class="n">empty?</span>      <span class="c1">#true</span>
</span><span class='line'><span class="s2">&quot; &quot;</span><span class="o">.</span><span class="n">empty?</span>     <span class="c1">#false</span>
</span><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">empty?</span>   <span class="c1">#false</span>
</span><span class='line'><span class="mi">123</span><span class="o">.</span><span class="n">empty?</span>     <span class="c1">#NoMethodError: undefined method `empty?&#39; for 123:Fixnum</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ruby method</li>
<li>只要是空值就是 true（<code>空白</code> 不算空值）</li>
<li>相對的 method 是 <code>any?</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">any?</span>       <span class="c1">#NoMethodError: undefined method `any?&#39; for nil:NilClass</span>
</span><span class='line'><span class="o">[].</span><span class="n">any?</span>        <span class="c1">#false</span>
</span><span class='line'><span class="p">{}</span><span class="o">.</span><span class="n">any?</span>        <span class="c1">#false</span>
</span><span class='line'><span class="s2">&quot;&quot;</span><span class="o">.</span><span class="n">any?</span>        <span class="c1">#NoMethodError: undefined method `any?&#39; for &quot;&quot;:String</span>
</span><span class='line'><span class="s2">&quot; &quot;</span><span class="o">.</span><span class="n">any?</span>       <span class="c1">#NoMethodError: undefined method `any?&#39; for &quot;&quot;:String</span>
</span><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">any?</span>     <span class="c1">#NoMethodError: undefined method `any?&#39; for &quot;&quot;:String</span>
</span><span class='line'><span class="mi">123</span><span class="o">.</span><span class="n">any?</span>       <span class="c1">#NoMethodError: undefined method `any?&#39; for 123:Fixnum</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是要注意，String 並沒有提供 <code>.any?</code> 這個 method</p>

<h1>.blank? &amp; .present?</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">blank?</span>     <span class="c1">#true </span>
</span><span class='line'><span class="o">[].</span><span class="n">blank?</span>      <span class="c1">#true </span>
</span><span class='line'><span class="p">{}</span><span class="o">.</span><span class="n">blank?</span>      <span class="c1">#true </span>
</span><span class='line'><span class="s2">&quot;&quot;</span><span class="o">.</span><span class="n">blank?</span>      <span class="c1">#true</span>
</span><span class='line'><span class="s2">&quot; &quot;</span><span class="o">.</span><span class="n">blank?</span>     <span class="c1">#true</span>
</span><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">blank?</span>   <span class="c1">#false</span>
</span><span class='line'><span class="mi">123</span><span class="o">.</span><span class="n">blank?</span>     <span class="c1">#false</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Rails method</li>
<li>只要是 nil，空值都是 true</li>
<li>有點像是 <code>Object.nil? || Object.empty?</code> 的綜合體，但條件比 <code>.empty</code> 寬鬆一點，<code>空白</code> 也會是 true</li>
<li>相對的 method 是 <code>present?</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">present?</span>   <span class="c1">#false </span>
</span><span class='line'><span class="o">[].</span><span class="n">present?</span>    <span class="c1">#false </span>
</span><span class='line'><span class="p">{}</span><span class="o">.</span><span class="n">present?</span>    <span class="c1">#false </span>
</span><span class='line'><span class="s2">&quot;&quot;</span><span class="o">.</span><span class="n">present?</span>    <span class="c1">#false</span>
</span><span class='line'><span class="s2">&quot; &quot;</span><span class="o">.</span><span class="n">present?</span>   <span class="c1">#false</span>
</span><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">present?</span> <span class="c1">#true</span>
</span><span class='line'><span class="mi">123</span><span class="o">.</span><span class="n">present?</span>   <span class="c1">#true</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>經過上面這樣看來，只有 <code>.blank?</code> 和 <code>.present?</code> 不會爆錯 (所以我都用這個(誤))<br/>
主要還是要看當時的情境拉XD</p></blockquote>

<h1>.persisted? &amp; .new_record?</h1>

<p>最後來介紹一下，如何判斷 Object 是否已經存在資料庫的 method。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>   <span class="c1">#還沒存入資料庫以前</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">persisted?</span>   <span class="c1">#false</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">new_record?</span>  <span class="c1">#true</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">save</span>         <span class="c1">#存入資料庫</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">persisted?</span>   <span class="c1">#true</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">new_record?</span>  <span class="c1">#false</span>
</span></code></pre></td></tr></table></div></figure>


<h1>如何看物件有哪些方法？或是上一層是誰？</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Object</span><span class="o">.</span><span class="n">superclass</span>       <span class="err">＃查上一層是誰</span><span class="p">?</span>
</span><span class='line'><span class="no">Object</span><span class="o">.</span><span class="n">ancestors</span>        <span class="err">＃查祖宗十八代是誰</span><span class="p">?</span>
</span><span class='line'><span class="no">Object</span><span class="o">.</span><span class="n">methods</span>          <span class="err">＃查物件有哪些方法</span><span class="p">?</span>
</span><span class='line'><span class="no">Object</span><span class="o">.</span><span class="n">respond_to?</span> <span class="ss">:new</span> <span class="err">＃查物件是否有這個方法</span><span class="p">?</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：</p>

<ul>
<li><a href="http://apidock.com/ruby/Object/nil%3F">.nil?</a></li>
<li><a href="http://apidock.com/rails/ActiveRecord/Associations/CollectionProxy/empty%3F">.empty?</a></li>
<li><a href="http://apidock.com/ruby/Enumerable/any%3F">.any?</a></li>
<li><a href="http://apidock.com/rails/Object/blank%3F">.blank?</a></li>
<li><a href="http://apidock.com/rails/Object/present%3F">.persisted?</a></li>
<li><a href="http://apidock.com/rails/ActiveRecord/Base/new_record%3F">.new_record?</a></li>
<li><a href="http://apidock.com/rails/ActiveRecord/Persistence/persisted%3F">.persisted?</a></li>
<li><a href="http://apidock.com/ruby/Class/superclass">.superclass</a></li>
<li><a href="http://apidock.com/rails/ActiveRecord/Acts/Tree/InstanceMethods/ancestors">.ancestors</a></li>
<li><a href="http://apidock.com/ruby/Object/methods">.methods</a></li>
<li><a href="http://apidock.com/ruby/Object/respond_to%3F">.respond_to?</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遠端 SSH 免密碼登入(key)]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/14/ssh-no-password/"/>
    <updated>2015-12-14T19:12:27+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/14/ssh-no-password</id>
    <content type="html"><![CDATA[<p>用 ssh 連線到遠端 server 的時候，一般都要輸入帳號密碼來登入，但這會有幾點缺點</p>

<ol>
<li>輸入帳號密碼的同時，也會增加帳密被竊取的可能</li>
<li>當登入的頻率很高的時候，或是有很多台機器要登入的時候，就會覺得相當煩！！</li>
</ol>


<p>因此可以透過公開金鑰（Public Key）和私密金鑰（Private Key）對應的方式，去做登入，這樣以後就不用輸入密碼拉~</p>

<!-- more -->


<h3>Step 1.</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh root@123.123.12.1
</span><span class='line'>sudo adduser --disabled-password deploy
</span><span class='line'>sudo su deploy </span></code></pre></td></tr></table></div></figure>


<p>
首先會先連到遠端 server 開新的帳號<br/>
（因為root帳號權限很大，我們不希望每個人都用到root權限，而且root帳號是固定的，不夠安全）</p>

<p>先開個新帳號 deploy，就會產生 <code>home/deploy</code></p>

<ul>
<li><code>--disabled-password</code> 讓 deploy 無法用密碼登入</li>
<li><code>su</code> 就是切換身份</li>
</ul>


<h3>Step 2.</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa
</span><span class='line'>
</span><span class='line'>#Enter file in which to save the key (/root/.ssh/id_rsa): (不輸入，直接按Enter)
</span><span class='line'>#Enter passphrase (empty for no passphrase): (不輸入，直接按Enter)
</span><span class='line'>#Enter same passphrase again: (不輸入，直接按Enter)</span></code></pre></td></tr></table></div></figure>


<p>再（本機）輸入 <code>ssh-keygen -t rsa</code> 產生出 <code>id_rsa（private key）</code> 和 <code>id_rsa.pub （public key）</code></p>

<p>接著複製（本機）的 <code>~/.ssh/id_rsa.pub</code> 到 <code>/home/deploy/.ssh/authorized_keys</code>(自己新增 .ssh 資料夾和 authorized_keys 檔案)</p>

<blockquote><p>之後連線, 就會用（本機）的 <code>id_rsa（private key）</code> 與遠端電腦的 <code>authorized_keys(public key)</code> 做認證</p></blockquote>

<ul>
<li>可以先在 (本機) <code>cat ~/.ssh/id_rsa.pub</code> 將 &lsquo;所有&rsquo; 字串複製</li>
<li>再到 (遠端)新增 <code>vi /home/deploy/.ssh/authorized_keys</code> ，將字串貼上去後 <code>:wq</code> 離開</li>
</ul>


<h3>Step 3.</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> chmod 644 /home/deploy/.ssh/authorized_keys
</span><span class='line'> chown deploy:deploy /home/deploy/.ssh/authorized_keys</span></code></pre></td></tr></table></div></figure>


<p>更改權限，讓 group 和 other 可以讀<br/>
<code>chmod</code> 改變權限<br/>
<code>chown</code> 改變檔案擁有者</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>644 權限
</span><span class='line'>owner  = rw- = 4+2+0 = 6  
</span><span class='line'>group  = r-- = 4+0+0 = 4  
</span><span class='line'>others = r-- = 4+0+0 = 4</span></code></pre></td></tr></table></div></figure>


<p>接著就可以在 (本機) 直接  ssh <a href="&#109;&#97;&#x69;&#108;&#x74;&#x6f;&#58;&#100;&#x65;&#x70;&#x6c;&#x6f;&#x79;&#x40;&#49;&#50;&#51;&#x2e;&#49;&#50;&#x33;&#46;&#49;&#50;&#x2e;&#x31;">&#100;&#x65;&#x70;&#x6c;&#x6f;&#121;&#x40;&#x31;&#50;&#51;&#46;&#49;&#50;&#51;&#x2e;&#x31;&#x32;&#46;&#49;</a> 就連進去囉!!</p>

<p>權限指令參考：
<a href="http://linux.vbird.org/linux_basic/0210filepermission.php#chown">鳥哥的私房菜</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails - 虛擬屬性Virtual Attribute]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/14/ruby-on-rails-virtual-attribute/"/>
    <updated>2015-12-14T13:13:37+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/14/ruby-on-rails-virtual-attribute</id>
    <content type="html"><![CDATA[<p>當要操作的屬性資料，和資料庫的欄位不相同的時候，就可以在 model 裡建立 Virtual Attribute 來取代。</p>

<h3>範例1 - full_name</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">full_name</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">self</span><span class="o">.</span><span class="n">first_name</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="nb">self</span><span class="o">.</span><span class="n">last_name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">full_name</span><span class="o">=</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">first_name</span><span class="p">,</span> <span class="nb">self</span><span class="o">.</span><span class="n">last_name</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>當資料庫欄位裡面有 <code>first_name</code> 和 <code>last_name</code> 分別去存取，但顯示的時候卻不可能只顯示一個，通常都一定是要連在一起</p>

<p>這時候就能夠用 Virtual Attribute 做出一個虛擬的屬性 <code>full_name</code> ， 而它的值則是 <code>first_name</code> 和 <code>last_name</code> 合在一起</p>

<p>這樣以後要取出名字，就只要用 <code>full_name</code> 即可，就不需要每次都在那邊相加。</p>

<h3>範例2 - tag_list</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tag_list</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">tags</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">tag_list</span><span class="o">=</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="n">arr</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">tags</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>    <span class="n">tag</span> <span class="o">=</span> <span class="no">CompanyTag</span><span class="o">.</span><span class="n">find_by_name</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</span><span class='line'>    <span class="k">unless</span> <span class="n">tag</span>
</span><span class='line'>      <span class="n">tag</span> <span class="o">=</span> <span class="no">CompanyTag</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span> <span class="ss">:name</span> <span class="o">=&gt;</span> <span class="n">t</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>      <span class="n">tag</span>  <span class="c1">#沒有加這個的話，uless 最後一個回傳的會是 nil 就會爆錯</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>取出時，先將所有 tag 透過 <code>map</code> 取出所有 name 變成一個 array，再用 <code>join</code> 轉成 string</p>

<p>存取時，先用 <code>split</code> 將 string 轉 array，用 name 去判斷每個元素是否已經存在資料庫，若是沒有，就 <code>create</code> 一個新的</p>

<blockquote><p>可以另外搭配 <a href="https://select2.github.io/">select2</a> 做出比較好看的 tag !!</p></blockquote>

<p>Rails gem
<a href="https://github.com/argerim/select2-rails">select2-rails</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">script</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="err">$</span><span class="p">(</span><span class="s2">&quot;#tag_list&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">select2</span><span class="p">({</span>
</span><span class='line'>    <span class="ss">tags</span><span class="p">:</span> <span class="o">&lt;%=</span><span class="n">raw</span> <span class="no">Tags</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">name</span><span class="p">}</span><span class="sx">%&gt;,</span>
</span><span class='line'><span class="sx">    tokenSeparators: [&#39;,&#39;, &#39; &#39;]</span>
</span><span class='line'><span class="sx">  });</span>
</span><span class='line'><span class="sx">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>最後來介紹一下attr_accessor</h1>

<p>如果只要一般(沒有像上面還要取出來，單純只要讀取.存取)的虛擬屬性<br/>
（就是資料庫並不需要這個欄位，但可能要透過這個虛擬屬性，組成某個陣列裡的元素）</p>

<p>則可以直接用 <code>attr_accessor</code> 直接產生以下的結果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Girl</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">age</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@age</span> <span class="o">=</span> <span class="n">age</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># @age的getter方法</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">age</span>
</span><span class='line'>    <span class="vi">@age</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># @age的setter方法  </span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">age</span><span class="o">=</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@age</span> <span class="o">=</span> <span class="n">x</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>attr_accessor</code> 就是可以自動產生 getter 和 setter<br/>
<code>attr_reader</code> 產生 getter<br/>
<code>attr_writer</code> 產生 setter</p>

<p>網路上有一篇講的很清楚，可以去看看<br/>
<a href="http://blog.eddie.com.tw/2015/03/21/attr_accessor/">Ruby 語法放大鏡之「attr_accessor 是幹嘛的?」</a></p>

<h1>attr_accessible 和 attr_protected</h1>

<p>另外在網路上有發現兩個長個很相像的方法<br/>
仔細研究發現，這兩個主要好像都是為了防止 Mass assignment (大量賦值)</p>

<p><code>attr_accessible</code> 被設定的 attributes <code>以外</code> 不能夠被 Mass assignment<br/>
<code>attr_protected</code> 被設定的 attributes <code>自己</code> 不能夠被 Mass assignment</p>

<p>哈哈，一個是自己本身，一個是本身以外，蠻奇妙的。<br/>
原來這是在還沒有 Strong Parameter 這個功能時的防禦機制!!</p>

<p>詳情：</p>

<ul>
<li><a href="http://blog.xdite.net/posts/2012/03/05/github-hacked-rails-security/">從 Github 被 hack，談 Rails 的安全性（ mass-assignment ）</a></li>
<li><a href="http://blog.xdite.net/posts/2012/08/12/strong-parameter-mass-assignment-solution">Strong Parameter: Mass Assignment 機制的防彈衣</a></li>
</ul>


<p>官方文件：</p>

<ul>
<li><a href="http://apidock.com/rails/ActiveRecord/Base/attr_accessible/class">attr_accessible</a></li>
<li><a href="http://apidock.com/rails/ActiveRecord/Base/attr_protected/class">attr_protected</a></li>
<li><a href="http://stackoverflow.com/questions/2652907/what-is-the-difference-between-attr-accessibleattributes-attr-protectedat">stackoverflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails - Accepts_nested_attributes_for]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/13/ruby-on-rails-accepts-nested-attributes-for/"/>
    <updated>2015-12-13T18:35:13+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/13/ruby-on-rails-accepts-nested-attributes-for</id>
    <content type="html"><![CDATA[<p><code>accepts_nested_attributes_for</code> 是一個蠻常會用到的語法</p>

<p>簡單的來說，就是可以透過這個語法，在更新 data 的時候，同時更新其他 model 裡的 data<br/>
所以並不是每個 model 都必須要有 controller 才能夠做更新的動作</p>

<!-- more -->


<p>這裏有兩種情境</p>

<h1>One-to-one</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:author</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:author</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">params</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">book</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Harry Potter&#39;</span><span class="p">,</span> <span class="ss">author_attributes</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;J. K. Rowling&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">book</span> <span class="o">=</span> <span class="no">Book</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:book</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">author</span><span class="o">.</span><span class="n">name</span> <span class="c1"># =&gt; &#39;J. K. Rowling&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>透過 params 更新 Book 的 name<br/>
同時透過 <code>author_attributes: { name: 'J. K. Rowling' }</code> 更新 Author 的 name</p>

<p>當然 update 同樣適用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">params</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">book</span><span class="p">:</span> <span class="p">{</span> <span class="ss">author_attributes</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;J. K. Rowling&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">update</span> <span class="n">params</span><span class="o">[</span><span class="ss">:book</span><span class="o">]</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">author</span><span class="o">.</span><span class="n">name</span> <span class="c1"># =&gt; &#39;J. K. Rowling&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>另外值得注意的是</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">accepts_nested_attributes_for</span> <span class="ss">:author</span><span class="p">,</span> <span class="ss">:allow_destroy</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:reject_if</span> <span class="o">=&gt;</span> <span class="ss">:all_blank</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:allow_destroy =&gt; true</code> 可以在表單增加一個 _destroy 核選塊來表示刪除<br/>
<code>:reject_if =&gt; :all_blank</code> 表示在什麼條件下就當作沒有要動作， all_blank 表示如果資料都是空的，就不執行</p>

<h1>One-to-many</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:pages</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:page</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">params</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">book</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Harry Potter&#39;</span><span class="p">,</span> <span class="ss">page_attributes</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>      <span class="p">{</span> <span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;Philosopher&#39;s Stone&quot;</span> <span class="p">},</span>
</span><span class='line'>      <span class="p">{</span> <span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;Chamber of Secrets&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}}</span>
</span><span class='line'>
</span><span class='line'><span class="n">book</span> <span class="o">=</span> <span class="no">Book</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:book</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">length</span> <span class="c1"># =&gt; 2</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">title</span> <span class="c1"># =&gt; &#39;Philosopher&#39;s Stone&#39;</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">title</span> <span class="c1"># =&gt; &#39;Chamber of Secrets&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>通常會搭配 fields_for 來嵌入到同一個表單</h1>

<h3>One-to-one</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for @book do |b| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">b</span><span class="o">.</span><span class="n">label</span> <span class="ss">:name</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= b.text_field : name %&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= b.fields_for :author do |a| %&gt;</span>
</span><span class='line'><span class="sx">   &lt;%=</span> <span class="n">a</span><span class="o">.</span><span class="n">label</span> <span class="ss">:name</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">       &lt;%= a.text_field : name %&gt;</span>
</span><span class='line'>      
</span><span class='line'>        <span class="o">&lt;</span><span class="sx">% unless </span><span class="n">a</span><span class="o">.</span><span class="n">object</span><span class="o">.</span><span class="n">new_record?</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">          &lt;%= a.label :_destroy, &#39;Remove:&#39; %&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="sx">%= a.check_box :_destroy %&gt;</span>
</span><span class='line'><span class="sx">       &lt;% end %&gt;</span>
</span><span class='line'><span class="sx">  &lt;% end %&gt;</span>
</span><span class='line'><span class="sx">  </span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">b</span><span class="o">.</span><span class="n">submit</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>這樣就能夠透過原本是 @book 的表單，裡面再放入 author 的欄位進行更新。</p>

<h3>One-to-many</h3>

<p>one-to-many 會比較麻煩，因為當新增的時候，並不知道要新增幾個，因此會動用到 jquery 的動態新增，就是可以在表單上面一直增加欄位。</p>

<p>不過幸好有 gem 可以解決了，以下有幾個 gem</p>

<ul>
<li><a href="https://github.com/ryanb/nested_form">nested_form</a> ( <a href="http://motion-express.com/blog/20140722-ruby-gem-nested-form">網路上教學</a></li>
<li><a href="https://github.com/nathanvda/cocoon">cocoon</a></li>
<li><a href="https://github.com/ncri/nested_form_fields">nested_form_fields</a></li>
</ul>


<h1>strong parameter</h1>

<p>最後記得要加 strong parameter<br/>
one-to-one 和 one-to-many 都要</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">book_params</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:book</span><span class="p">)</span>
</span><span class='line'>        <span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="ss">pages_attributes</span><span class="p">:</span><span class="o">[</span><span class="ss">:title</span><span class="p">,</span> <span class="ss">:_destroy</span><span class="p">,</span> <span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>每個 gem strong parameter 的方式都有點不太一樣，記得要看一下</p></blockquote>

<h1>helper</h1>

<p>book_helper.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">setup_author</span><span class="p">(</span><span class="n">book</span><span class="p">)</span>
</span><span class='line'>    <span class="n">book</span><span class="o">.</span><span class="n">build_author</span> <span class="k">if</span> <span class="n">book</span><span class="o">.</span><span class="n">author</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>    <span class="c1">#one-to-one 用 build_author ， one-to-many 可以用 authors.build or authors.new </span>
</span><span class='line'>    <span class="n">book</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果一開始沒設定的話，在 book 表單上是看不到 author 的欄位，因為一開始還沒 build  <br/>
因此要給它一個判斷，如果是 nil 就先 build_author 給它</p>

<p>接著用 <code>setup_author(@book)</code> 來置換 form_for 中的 @book</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for setup_author(@book), :url =</span><span class="o">&gt;</span> <span class="n">books_path</span> <span class="k">do</span> <span class="o">|</span><span class="n">b</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">...</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<a href="http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html">accepts_nested_attributes_for </a> <a href="http://apidock.com/rails/ActionView/Helpers/FormHelper/fields_for">fields_for</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails - Delegate]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/13/ruby-on-rails-delegate/"/>
    <updated>2015-12-13T12:25:16+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/13/ruby-on-rails-delegate</id>
    <content type="html"><![CDATA[<p>神奇語法delegate，之前就看過這個語法，不過一直搞不懂在幹什麼？<br/>
研究了之後，發現是個很magic的用法!!</p>

<!-- more -->


<blockquote><p>說穿了其實是讓 class 的 object 可以直接呼叫到另一個 class 的 method</p></blockquote>

<p>還是看範例比較快</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Cart</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:cart_items</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:empty?</span><span class="p">,</span> <span class="ss">:clear</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="ss">:line_items</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CartItem</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:cart</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面有兩個 model 的關係是 one-to-many<br/>
一般正常來說必須要<code>@cart.cart_items.empty?</code> 才能夠從 cart 關聯到 cart_items 在呼叫他的方法 <code>empty?</code></p>

<p>不過因為加上了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">delegate</span> <span class="ss">:empty?</span><span class="p">,</span> <span class="ss">:clear</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="ss">:line_items</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>所以直接呼叫 <code>@cart.empty?</code> 就可以回傳 <code>@cart.cart_items.empty?</code><br/>
仔細觀察後，其實也就等於下面的 method (但是可以一行解決下面的語法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">empty?</span>
</span><span class='line'>    <span class="n">cart_items</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>另外還可以加上 <code>prefix: true</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">delegate</span> <span class="ss">:empty?</span><span class="p">,</span> <span class="ss">:clear</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="ss">:line_items</span><span class="p">,</span> <span class="ss">prefix</span><span class="p">:</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>變成直接呼叫 <code>@cart.cart_items_empty?</code> 字面上面的更加清楚!</p>

<p>在官方API文件上甚至可以看到
可以加上 <code>allow_nil: true</code> 允許 nil
甚至是 prefix 可以加上別的字，變成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">delegate</span> <span class="ss">:empty?</span><span class="p">,</span> <span class="ss">:clear</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="ss">:line_items</span><span class="p">,</span> <span class="ss">prefix</span><span class="p">:</span> <span class="n">mycart</span>
</span></code></pre></td></tr></table></div></figure>


<p>就變成 <code>@cart. mycart_empty?</code><br/>
蠻酷的吧!</p>

<p>官方文件：
<a href="http://apidock.com/rails/Module/delegate">delegate</a></p>

<ol>
<li>:to - Specifies the target object</li>
<li>:prefix - Prefixes the new method with the target name or a custom prefix</li>
<li>:allow_nil - if set to true, prevents a NoMethodError to be raised</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Octopress + Github Pages 來架設 Blog]]></title>
    <link href="http://mgleon08.github.com/blog/2015/12/11/how-to-install-octopress/"/>
    <updated>2015-12-11T23:15:37+08:00</updated>
    <id>http://mgleon08.github.com/blog/2015/12/11/how-to-install-octopress</id>
    <content type="html"><![CDATA[<p>最近想說要開始來寫blog，於是在網路上找了幾個之後，最後決定使用Octopress。</p>

<ol>
<li>使用 Markdown 語法，比起網路上的編輯器更加方便 (對寫coding而言拉。</li>
<li>直接放在 Github 上，完全不需費用。</li>
<li>可以用git來做版本控制，即使網路上的消失，本機還是可以做保留。</li>
<li>一開始雖然比一般blog更加挑戰性(因為全部都要自己安裝XD)，不過也藉此訓練自己。</li>
</ol>


<!--More-->


<h1>Install Octopress</h1>

<p>先到 <a href="https://github.com/imathis/octopress">Octopress</a> 將檔案 <code>git clone</code>下來</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<h1>開新的 Github Repository</h1>

<p>到 <a href="https://github.com/">Github</a> 點選右上角 New repository, Repository name 輸入自己帳號的名稱</p>

<blockquote><p>像筆者帳號是 mgleon08 就輸入 mgleon08.github.com<br/>
之後網址就是 <a href="http://mgleon08.github.io/">http://mgleon08.github.io/</a></p></blockquote>

<h1>佈署到Github上</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages  ＃ 之後輸入 git@github.com:mgleon08/mgleon08.github.com.git
</span><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p><code>rake setup_github_pages</code> 將branch從master切換到source
<a href="http://octopress.org/docs/deploying/github/">官方說明</a><br/>
<code>rake generate</code> 產生靜態html檔案<br/>
<code>rake deploy</code> 部署到github</p>

<h1>Push到Github</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m "first commit"
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<h1>在本機端預覽</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>接著打開 <code>http://localhost:4000</code> 就可以看到了!!</p>

<h1>更換主題</h1>

<p>本站使用的主題 <a href="https://github.com/lucaslew/whitespace">whitespace</a><br/>
其他主題 <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">other</a></p>

<p>clone下來後</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install['主題名稱']  # for zsh, use: rake install\['主題名稱'\]
</span><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<h1>基本網站設定</h1>

<p>設定主要都在 <code>_config.yml</code>，可以更改網站標題，作者名稱，還可以加入facebook按讚，DISQUS回覆等功能<br/>
修改後要記得 <code>rake generate</code> 才會有效</p>

<h1>撰寫文章</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["title"]</span></code></pre></td></tr></table></div></figure>


<p>Octopress會幫你產生新的檔案 <code>2015-12-11-title.markdown</code> 到source/_posts/下面，有發現後面是用markdown嗎?</p>

<p>沒錯，Octopress 主要是用 Markdown 語法來撰寫，筆者是使用 <a href="http://macdown.uranusjr.com/">MacDown</a> 這套來做編輯（蠻多人是推薦另外一個 <a href="http://25.io/mou/">mou</a></p>

<blockquote><p>對Markdown語法還不了解的可以到 <a href="http://markdown.tw/">Markdown.tw</a> 看看</p></blockquote>

<h1>發表文章</h1>

<ul>
<li>撰寫好後先 <code>rake preview</code> 預覽一下畫面</li>
<li>確認先 <code>rake generate</code></li>
<li>再 <code>rake deploy</code> 這樣網路上的就會更新了</li>
<li>記得最後還是要 <code>git push</code> 到 Github</li>
</ul>


<p>這樣就可以開始寫文章囉~</p>

<p><a href="http://octopress.org/docs/blogging/">octopress官方網站</a></p>
]]></content>
  </entry>
  
</feed>
