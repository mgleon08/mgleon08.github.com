<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leon's Blogging]]></title>
  <link href="http://mgleon08.github.com/atom.xml" rel="self"/>
  <link href="http://mgleon08.github.com/"/>
  <updated>2016-02-15T21:16:50+08:00</updated>
  <id>http://mgleon08.github.com/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RVM and Gemsets Ruby版本控制]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/15/rvm-and-gemsets/"/>
    <updated>2016-02-15T21:12:09+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/15/rvm-and-gemsets</id>
    <content type="html"><![CDATA[<p>好用的工具，可以輕鬆的切換 ruby 版本!</p>

<!-- more -->


<h1>安裝</h1>

<p><a href="https://rvm.io/">rvm</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\curl -sSL https://get.rvm.io | bash -s stable</span></code></pre></td></tr></table></div></figure>


<h3>安裝 ruby 版本</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install 2.2.3</span></code></pre></td></tr></table></div></figure>


<h3>使用版本</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm use 2.2.3</span></code></pre></td></tr></table></div></figure>


<h3>目前有的版本</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm list</span></code></pre></td></tr></table></div></figure>


<h3>移除</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm remove 2.2.3</span></code></pre></td></tr></table></div></figure>


<h3>看本機是否使用 rvm 還是本機</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>which ruby</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<p>安裝好之後，基本上就是一個全新的，gem 都要全部重新安裝<br/>
記得先去安裝 <code>bundler</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler</span></code></pre></td></tr></table></div></figure>


<p>之後再去專案底下輸入 <code>bundle</code> 就會重新安裝了</p>

<h1>Gemset</h1>

<p>在該版本的 ruby 下，在區分要安裝哪些 gem</p>

<h3>目前有的 gemset</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset list</span></code></pre></td></tr></table></div></figure>


<h3>新增</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset create rails4.2.4</span></code></pre></td></tr></table></div></figure>


<h3>使用</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset use rails4.2.4</span></code></pre></td></tr></table></div></figure>


<h3>清空</h3>

<p>清空裡面的 gem ，但保留 gemset</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset empty rails4.2.4</span></code></pre></td></tr></table></div></figure>


<h3>刪除</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset delete rails4.2.4</span></code></pre></td></tr></table></div></figure>


<h1>Bonus</h1>

<h3>直接換兩個</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm 2.2.3@rails4.2.4
</span><span class='line'># ruby 和 gemset 一起切換</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="https://rvm.io/">rvm</a></p>

<p>參考文件：<br/>
<a href="http://motion-express.com/blog/20141005-ruby-rvm-gemset">Ruby gem 想要一機裝多個版本？RVM來幫你！</a><br/>
<a href="http://blog.eddie.com.tw/2011/04/08/rvm-and-gemsets/">RVM and Gemsets</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Yaml 來寫文件]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/yaml/"/>
    <updated>2016-02-07T16:08:29+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/yaml</id>
    <content type="html"><![CDATA[<p>yaml 格式經常會在 rails 裡看到，像是 config 裡的 database.yml，或 en.yml<br/>
這種格式經常拿來寫一些固定的常數。</p>

<p>因此也可以拿來設定網頁中固定的像是選單之類的文件。</p>

<!-- more -->


<p>自訂 yaml</p>

<p><code>sample.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">option</span><span class="p">:</span>
</span><span class='line'>  <span class="o">-</span> <span class="ss">a</span><span class="p">:</span>  <span class="n">foo</span>
</span><span class='line'>    <span class="ss">a1</span><span class="p">:</span> <span class="n">bar</span>
</span><span class='line'>  <span class="o">-</span> <span class="ss">b</span><span class="p">:</span>  <span class="n">foo</span>
</span><span class='line'>    <span class="ss">b1</span><span class="p">:</span> <span class="n">bar</span>
</span><span class='line'>  <span class="o">-</span> <span class="ss">c</span><span class="p">:</span>  <span class="n">foo</span>
</span><span class='line'>    <span class="ss">c1</span><span class="p">:</span> <span class="n">bar</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:</code> hash<br/>
<code>-</code> array</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;yaml&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">SAMPLE</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s1">&#39;../sample.yml&#39;</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">)))</span><span class="o">.</span><span class="n">freeze</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#=&gt; {&quot;option&quot;=&gt;</span>
</span><span class='line'><span class="c1">#        [</span>
</span><span class='line'><span class="c1">#            {&quot;a&quot;=&gt;&quot;foo&quot;, &quot;a1&quot;=&gt;&quot;bar&quot;}, </span>
</span><span class='line'><span class="c1">#            {&quot;b&quot;=&gt;&quot;foo&quot;, &quot;b1&quot;=&gt;&quot;bar&quot;}, </span>
</span><span class='line'><span class="c1">#            {&quot;c&quot;=&gt;&quot;foo&quot;, &quot;c1&quot;=&gt;&quot;bar&quot;}</span>
</span><span class='line'><span class="c1">#        ]</span>
</span><span class='line'><span class="c1">#    }</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/yaml/rdoc/YAML/Store.html">Yaml</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Marshal 來傳遞資料]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/marshal/"/>
    <updated>2016-02-07T15:44:52+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/marshal</id>
    <content type="html"><![CDATA[<p>當兩台 server 要互相傳遞資料時，都必須確保資料的正確性，因此可以透過 Marshal 解析後來傳遞。</p>

<!-- more -->


<p>一般可以用 <code>to_a</code>, <code>to_yml</code>, <code>to_s</code> 來轉成不同 <code>type</code><br/>
但這樣很可能會失真</p>

<p>因此用 Marshal 就會比較精準，並且快很多</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:a</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">,</span> <span class="no">Time</span><span class="o">.</span><span class="n">new</span><span class="o">=&gt;</span><span class="no">Class</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">Marshal</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">h</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; &quot;\x04\b{\b:\x06ai\x06I\&quot;\x06b\x06:\x06ETi\aIu:\tTime\r\xE7\x04\x1D\x80r\xB6D\xC0\a:\voffseti\x02\x80p:\tzoneI\&quot;\bCST\x06;\x06Fc\nClass&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;test.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;w&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="no">Marshal</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">h</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#在 irb 要先 exit 重開</span>
</span><span class='line'><span class="no">Marshal</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;test.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;r&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; {:a=&gt;1, &quot;b&quot;=&gt;2, Time.new=&gt;Class}</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://ruby-doc.org/core-2.2.0/Marshal.html">Marshal</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[正規表示式 Regular Expression]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/regular-expression/"/>
    <updated>2016-02-07T15:40:31+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/regular-expression</id>
    <content type="html"><![CDATA[<p>在網頁中經常要確認一些格式，像是身分證格式必須要 10 碼，開頭是大寫 A-Z ，第二個數字必須是 0 or 1，這時就能夠用 <code>Regular Expression</code> 來做判斷。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">身份證</span>
</span><span class='line'><span class="sr">/[A-Z][12]\d{8}/</span>
</span><span class='line'>
</span><span class='line'><span class="err">信箱</span>
</span><span class='line'><span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
</span><span class='line'>
</span><span class='line'><span class="err">不允許信箱中有多個點</span>
</span><span class='line'><span class="sr">/\A[\w+\-.]+@[a-z\d\-]+(\.[a-z\d\-]+)*\.[a-z]+\z/i</span>
</span></code></pre></td></tr></table></div></figure>


<h1>範例</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">regex</span> <span class="o">=</span> <span class="sr">/([A-Z])([12])\d{8}/</span>  <span class="c1">#前面兩個()起來代表是有意義的，可以連同存取起來</span>
</span><span class='line'>
</span><span class='line'><span class="n">match</span> <span class="o">=</span> <span class="s2">&quot;A123456789&quot;</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">regex</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; #&lt;MatchData &quot;A123456789&quot; 1:&quot;A&quot; 2:&quot;1&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">match</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="c1">#=&gt; &quot;A123456789&quot;</span>
</span><span class='line'><span class="n">match</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="c1">#=&gt; &quot;A&quot;</span>
</span><span class='line'><span class="n">match</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'><span class="c1">#=&gt; &quot;1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Regex quick reference</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="n">abc</span><span class="o">]</span>   <span class="c1">#A single character of: a, b, or c</span>
</span><span class='line'><span class="o">[^</span><span class="n">abc</span><span class="o">]</span>   <span class="c1">#Any single character except: a, b, or c</span>
</span><span class='line'><span class="o">[</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="o">]</span>  <span class="c1">#Any single character in the range a-z</span>
</span><span class='line'><span class="o">[</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="n">Z</span><span class="o">]</span> <span class="c1">#Any single character in the range a-z or A-Z</span>
</span><span class='line'>
</span><span class='line'><span class="o">^</span>  <span class="c1">#Start of line =&gt; /^ab/，開頭兩個有 ab 即可</span>
</span><span class='line'><span class="err">$</span>    <span class="c1">#End of line =&gt; /ab$/，後面兩個有 ab 即可</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">A</span>  <span class="c1">#Start of string</span>
</span><span class='line'><span class="p">\</span><span class="n">z</span>  <span class="c1">#End of string</span>
</span><span class='line'><span class="o">.</span>  <span class="c1">#Any single character</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">s</span> <span class="o">=</span> <span class="o">[</span> <span class="p">\</span><span class="n">r</span><span class="p">\</span><span class="n">t</span><span class="p">\</span><span class="n">n</span><span class="p">\</span><span class="n">f</span><span class="o">]</span> <span class="c1">#Any whitespace character</span>
</span><span class='line'><span class="p">\</span><span class="n">S</span> <span class="o">=</span> <span class="o">[^</span> <span class="p">\</span><span class="n">r</span><span class="p">\</span><span class="n">t</span><span class="p">\</span><span class="n">n</span><span class="p">\</span><span class="n">f</span><span class="o">]</span> <span class="c1">#Any non-whitespace character</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">d</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="o">]</span>  <span class="c1">#Any digit</span>
</span><span class='line'><span class="p">\</span><span class="n">D</span> <span class="o">=</span> <span class="o">[^</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="o">]</span>  <span class="c1">#Any non-digit</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">w</span> <span class="o">=</span> <span class="o">[</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="no">Z0</span><span class="o">-</span><span class="mi">9</span><span class="n">_</span><span class="o">]</span> <span class="c1">#Any word character (letter, number, underscore)</span>
</span><span class='line'><span class="p">\</span><span class="n">W</span> <span class="o">=</span> <span class="o">[^</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="no">Z0</span><span class="o">-</span><span class="mi">9</span><span class="n">_</span><span class="o">]</span> <span class="c1">#Any non-word character</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">b</span>  <span class="c1">#Any word boundary</span>
</span><span class='line'><span class="p">(</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">)</span>  <span class="c1">#Capture everything enclosed</span>
</span><span class='line'><span class="p">(</span><span class="n">a</span><span class="o">|</span><span class="n">b</span><span class="p">)</span>  <span class="c1">#a or b</span>
</span><span class='line'>
</span><span class='line'><span class="n">a?</span> <span class="c1">#Zero or one of a</span>
</span><span class='line'><span class="n">a</span><span class="o">*</span>  <span class="c1">#Zero or more of a</span>
</span><span class='line'><span class="n">a</span><span class="o">+</span>  <span class="c1">#One or more of a</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="p">{</span><span class="mi">3</span><span class="p">}</span> <span class="c1">#Exactly 3 of a</span>
</span><span class='line'><span class="n">a</span><span class="p">{</span><span class="mi">3</span><span class="p">,}</span>    <span class="c1">#3 or more of a</span>
</span><span class='line'><span class="n">a</span><span class="p">{,</span><span class="mi">6</span><span class="p">}</span>    <span class="c1">#ths most 6 of a</span>
</span><span class='line'><span class="n">a</span><span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">}</span>    <span class="c1">#Between 3 and 6 of a</span>
</span><span class='line'>
</span><span class='line'><span class="ss">options</span><span class="p">:</span>
</span><span class='line'><span class="n">i</span> <span class="c1">#case insensitive </span>
</span><span class='line'><span class="n">m</span> <span class="c1">#make dot match newlines </span>
</span><span class='line'><span class="n">x</span> <span class="c1">#ignore whitespace in regex </span>
</span><span class='line'><span class="n">o</span> <span class="c1">#perform #{...} substitutions only once</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="https://atedev.wordpress.com/2007/11/23/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%A4%BA%E5%BC%8F-regular-expression/">正規表示式 Regular Expression</a></p>

<p>練習：<br/>
<a href="http://rubular.com/">Rubular</a><br/>
<a href="https://regexcrossword.com/">Regex Cross­word</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Ruby 做網頁爬蟲]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/ruby-crawler/"/>
    <updated>2016-02-07T15:21:59+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/ruby-crawler</id>
    <content type="html"><![CDATA[<p>網頁爬蟲是一個蠻常聽到的名詞，簡單的來說就是可以透過程式，去分析網站頁面，將想要的資訊抓下來!</p>

<!-- more -->


<h3>wget</h3>

<p>command line 下載檔案的指令<br/>
mac 本身沒有內建要另外安裝。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install wget</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;open-uri&quot;</span> <span class="c1">#open-uri 把一個網頁當一個檔案來打開 stb-lib</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;nokogiri&quot;</span> <span class="c1">#解析 html gem</span>
</span><span class='line'>
</span><span class='line'><span class="n">html</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;http://ezprice.com.tw/&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'><span class="n">ans</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s1">&#39;img&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="o">.</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;src&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#將相對路徑改成絕對路徑</span>
</span><span class='line'><span class="n">temp_ans</span> <span class="o">=</span> <span class="n">ans</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">|</span><span class="n">url</span><span class="o">|</span> <span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^http/</span><span class="p">)</span> <span class="p">?</span> <span class="n">url</span> <span class="p">:</span> <span class="s2">&quot;http://ezprice.com.tw/</span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#透過 wget 下載檔案到目前的資料夾</span>
</span><span class='line'><span class="n">temp_ans</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">full_url</span><span class="o">|</span>
</span><span class='line'>  <span class="sb">`wget </span><span class="si">#{</span><span class="n">full_url</span><span class="si">}</span><span class="sb">`</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>open-uri</code> 只能一個網址<br/>
<code>curb</code> 比較豐富</p>

<p>官方文件：<br/>
<a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/open-uri/rdoc/index.html">open-uri</a><br/>
<a href="http://www.nokogiri.org/">nokogiri</a></p>

<p>參考文件：<br/>
<a href="https://www.youtube.com/watch?v=6XUnYRB0Zpo&amp;list=PLJ6M-k9dQEQ3VsyOZQwjZ5GdjaLJH3eB_">RailsFun</a><br/>
<a href="http://tonytonyjan.net/slides/2014-07-03-simple-crawler/">Ruby Crawler 輕輕鬆鬆做個 Ruby 爬蟲機器人</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Call System From Ruby]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/callsystem/"/>
    <updated>2016-02-07T14:31:31+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/callsystem</id>
    <content type="html"><![CDATA[<p>可以直接透過 ruby 來執行 commands 的指令。</p>

<!-- more -->


<h1>Calling shell commands from Ruby</h1>

<p>回傳的</p>

<ol>
<li>Kernel#`, commonly called backticks – <code>cmd</code></li>
</ol>


<p>Returns the result of the shell command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sb">`echo &#39;hi&#39;`</span>
</span><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sb">`</span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="sb">`</span>
</span><span class='line'><span class="n">value</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; String 回傳結果</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Built-in syntax, <code>%x( cmd )</code></li>
</ol>


<p>Returns the result of the shell command, just like the backticks.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sx">%x( echo &#39;hi&#39; )</span>
</span><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sx">%x[ </span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="sx"> ]</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Kernel# <code>system</code></li>
</ol>


<p>Return: true if the command was found and ran successfully, false otherwise</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">wasGood</span> <span class="o">=</span> <span class="nb">system</span><span class="p">(</span> <span class="s2">&quot;echo &#39;hi&#39;&quot;</span> <span class="p">)</span>
</span><span class='line'><span class="n">wasGood</span> <span class="o">=</span> <span class="nb">system</span><span class="p">(</span> <span class="n">cmd</span> <span class="p">)</span>
</span><span class='line'><span class="n">wasGood</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">TrueClass</span> <span class="err">回傳有沒有成功</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Kernel#exec</li>
</ol>


<p>Return: none, the current process is replaced and never continues</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">exec</span><span class="p">(</span> <span class="s2">&quot;echo &#39;hi&#39;&quot;</span> <span class="p">)</span>
</span><span class='line'><span class="nb">exec</span><span class="p">(</span> <span class="n">cmd</span> <span class="p">)</span> <span class="c1"># Note: this will never be reached because of the line above</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://ruby-doc.org/core-2.3.0/Kernel.html">Kernel</a><br/>
<a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/open3/rdoc/Open3.html#method-c-pipeline">Open3 - 可執行精密的操作</a></p>

<p>參考文件： <br/>
<a href="http://stackoverflow.com/questions/2232/calling-shell-commands-from-ruby">Calling shell commands from Ruby</a><br/>
<a href="http://tech.natemurray.com/2007/03/ruby-shell-commands.html">6 Ways to Run Shell Commands in Ruby Tuesday</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 中的 Block & Yield & Proc & Lambda]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/06/block-yield-proc-lambda/"/>
    <updated>2016-02-06T10:37:37+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/06/block-yield-proc-lambda</id>
    <content type="html"><![CDATA[<p>在學 ruby 時，經常會搞不清楚這四個，因為都非常相像!</p>

<!-- more -->


<h1>block</h1>

<p>什麼是 block ?</p>

<p>在 ruby 中 <code>block</code> 就是只 <code>do..end</code> || <code>{}</code> 包起來的區塊，就稱為 <code>block</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># =&gt; 1,2,3</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">].</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">i</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; 1,2,3</span>
</span></code></pre></td></tr></table></div></figure>


<p>基本上兩個是等價的，但是慣例上，一行會用 <code>{}</code> ，多行則是用 <code>do..end</code><br/>
<code>block</code> 無法單獨存在，必須放在 <code>method</code> 後面</p>

<p>另外 <code>block</code> 是可以傳遞的，用 <code>&amp;</code> 表示</p>

<h1>yield</h1>

<p><code>yield</code> 其實就是調用 <code>block</code> 的一種方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Array</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">iterate!</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">yield</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">array</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">array</span><span class="o">.</span><span class="n">iterate!</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="n">n</span> <span class="o">**</span> <span class="mi">2</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">array</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; [1, 4, 9, 16]</span>
</span></code></pre></td></tr></table></div></figure>


<p>其實就是再把 <code>&amp;block</code> 的寫法簡化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">test</span>
</span><span class='line'>  <span class="k">yield</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">test</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">block</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>procedure (proc)</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">who_am_i</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">block</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">who_am_i</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; Proc</span>
</span></code></pre></td></tr></table></div></figure>


<p>有此理解，透過 <code>&amp;block</code> 將程式碼傳遞過去後，其實它就是 <code>proc</code>。</p>

<p>跟 <code>block</code> 不同的地方是，<code>proc</code> 是可保存的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pro</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span>  <span class="nb">puts</span> <span class="n">a</span><span class="p">}</span>
</span><span class='line'><span class="c1">#=&gt; &lt;Proc:0x007fcb23ad2640@(irb):1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span> <span class="o">=</span> <span class="nb">proc</span> <span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span>  <span class="nb">puts</span> <span class="n">a</span><span class="p">}</span>
</span><span class='line'><span class="c1">#=&gt; &lt;Proc:0x007fcb23ad2640@(irb):1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt;nil</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span><span class="o">.</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span> <span class="c1">#非正規用法</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt;nil</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt; 123</span>
</span></code></pre></td></tr></table></div></figure>


<p>此時就會被 <code>p</code> 存起來，因此引用時就不需加上 <code>&amp;</code></p>

<h1>lambda</h1>

<p>lambda 與 method 用法相同，概念是一樣的<br/>
不同的是 <code>Method</code> 是有名字的method，而 <code>lambda</code> 是匿名 method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">lam</span> <span class="o">=</span> <span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">a</span><span class="p">}</span>
</span><span class='line'><span class="c1">#=&gt; &lt;Proc:0x007fcb23aa1860@(irb):1 (lambda)&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; Proc 有此可知，lambda 的原型是 proc</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span>
</span><span class='line'><span class="c1">#NoMethodError: undefined method `l&#39; for main:Object</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span><span class="o">.</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span> <span class="c1">#非正規用法</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>lambda 跟 proc 非常類似，主要有兩個差異</p>

<h3>1.lambda 會檢查參數的個數</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">args</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
</span><span class='line'>  <span class="n">one</span><span class="p">,</span> <span class="n">two</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">code</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">one</span><span class="p">,</span> <span class="n">two</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">args</span><span class="p">(</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;Give me a </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">c</span><span class="o">.</span><span class="n">class</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">})</span>
</span><span class='line'><span class="c1"># =&gt; Give me a 1 and a 2 and a NilClass</span>
</span><span class='line'>
</span><span class='line'><span class="n">args</span><span class="p">(</span><span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;Give me a </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">c</span><span class="o">.</span><span class="n">class</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">})</span>
</span><span class='line'><span class="c1"># *.rb:8: ArgumentError: wrong number of arguments (2 for 3) (ArgumentError)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2.lambda 的return 會繼續執行，proc 則會直接終止</h3>

<p><code>lambda</code> 比較像是一個 method 的 return <br/>
<code>proc</code> 則是比較像是 一整個 method 的 return</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">proc_return</span>
</span><span class='line'>  <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;Proc.new&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="k">return</span> <span class="s2">&quot;proc_return method finished&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">lambda_return</span>
</span><span class='line'>  <span class="nb">lambda</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;lambda&quot;</span> <span class="p">}</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="k">return</span> <span class="s2">&quot;lambda_return method finished&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">proc_return</span>
</span><span class='line'><span class="no">Proc</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">lambda_return</span>
</span><span class='line'><span class="n">lambda_return</span> <span class="nb">method</span> <span class="n">finished</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用時機</h3>

<p>在某些情況下，使用 <code>lambda</code> 會比 <code>proc</code> 還簡約。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">generic_return</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
</span><span class='line'>  <span class="n">one</span><span class="p">,</span> <span class="n">two</span>    <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">three</span><span class="p">,</span> <span class="n">four</span> <span class="o">=</span> <span class="n">code</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">one</span><span class="p">,</span> <span class="n">two</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="s2">&quot;Give me a </span><span class="si">#{</span><span class="n">three</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">four</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">generic_return</span><span class="p">(</span><span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">|</span> <span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">2</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">generic_return</span><span class="p">(</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">|</span> <span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">2</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">generic_return</span><span class="p">(</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">|</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">;</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">2</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">generic_return</span><span class="p">(</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">|</span> <span class="o">[</span><span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">2</span><span class="o">]</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; Give me a 3 and a 4</span>
</span><span class='line'><span class="c1"># =&gt; *.rb:9: unexpected return (LocalJumpError)</span>
</span><span class='line'><span class="c1"># =&gt; Give me a 4 and a</span>
</span><span class='line'><span class="c1"># =&gt; Give me a 3 and a 4</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># proc 需再用 array 包覆起來</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="http://rubyer.me/blog/917/">理解Ruby的4种闭包：blocks, Procs, lambdas 和 Methods。</a><br/>
<a href="https://ruby-china.org/topics/10414">聊聊 Ruby 中的 block, proc 和 lambda</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[例外處理 Rescue Exception]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/04/rescue-exception/"/>
    <updated>2016-02-04T21:51:38+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/04/rescue-exception</id>
    <content type="html"><![CDATA[<p>在 rails 當中，當發生例外時就會爆錯，畫面就會不見。<br/>
但有時我們並不希望讓它這樣，因此可以用 rescue 才處理掉這些例外發生時，該執行的動作。</p>

<!-- more -->


<h1>例外處理</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1"># 有可能發生例外的處理動作</span>
</span><span class='line'><span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># 例外發生時的處理措施</span>
</span><span class='line'><span class="k">ensure</span>
</span><span class='line'>  <span class="c1"># 無論有沒有發生例外，這一段都一定會執行</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>分開處理例外</h1>

<p>可以給予不同例外，執行不同動作</p>

<p>順序應為最特殊為第一位，以此類推<br/>
若要在最後包含所有例外，可以使用rescue Exception</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1"># 有可能發生例外的處理動作</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">ArgumentError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># 例外發生時的處理措施</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">TypeError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># 例外發生時的處理措施</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># 例外發生時的處理措施</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果沒有指定變數，例外物件會自動存放在：<code>$!</code>及<code>$@</code>變數中<br/>
<code>$!</code>：最後發生例外的物件<br/>
<code>$@</code>：呈現最後例外所發生的位置和資計</p>

<h1>重來</h1>

<p>例外發生後，再重新執行一次</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1"># 有可能發生例外的處理動作</span>
</span><span class='line'><span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="k">retry</span> <span class="c1">#重新再跑</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>例外語法的簡化</h1>

<p>如果例外 begin &amp; end 的範圍剛好就是整個方法的範圍，就可以省略。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">rescue</span>
</span><span class='line'>  <span class="c1">#有可能發生例外的處理動作</span>
</span><span class='line'><span class="k">rescue</span>
</span><span class='line'>  <span class="c1">#例外發生時的處理措施</span>
</span><span class='line'><span class="k">ensure</span>
</span><span class='line'>  <span class="c1">#無論是否發生例外都會執行</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>自行產生例外</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">test</span>
</span><span class='line'>  <span class="k">raise</span> <span class="no">StandardError</span><span class="p">,</span> <span class="s2">&quot;test error&quot;</span>
</span><span class='line'>  <span class="c1">#丟例外出來 raise(例外名稱, 例外訊息)</span>
</span><span class='line'><span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="http://blog.xuite.net/yschu/wretch/104912690-Ruby+-+Chapter+09+%E4%BE%8B%E5%A4%96%E8%99%95%E7%90%86(exception">Ruby - Chapter 09 例外處理(exception)</a>)<br/>
<a href="http://blog.tonycube.com/2011/07/ruby8.html">Ruby學習筆記(8) – 錯誤與例外處理</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定 Module 和 Class 檔案]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/01/customer-module-class/"/>
    <updated>2016-02-01T22:19:13+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/01/customer-module-class</id>
    <content type="html"><![CDATA[<p>在 rails 當中，可以自訂一些好用方便的檔案，在適當的時機來使用。</p>

<!-- more -->


<h1>method</h1>

<p>在 <code>lib/require/object.rb</code>，可以自行新增 class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Object</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">is?</span><span class="p">(</span><span class="o">*</span><span class="n">objects</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">object</span> <span class="k">in</span> <span class="n">objects</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span> <span class="k">if</span> <span class="nb">self</span> <span class="o">==</span> <span class="n">object</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>require</h1>

<p>但要記得要在使用的檔案，先 require 才能夠使用</p>

<p>也可以直接在 <code>config/initializer</code> 新增 <code>require.rb</code> 檔案，將檔案 require 進來，就不用每個檔案上面都 require 了。</p>

<blockquote><p><code>initializer</code> 裡面的檔案，程式一執行就會全部都執行了</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#單個檔案</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/lib/require/object.rb&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#多個檔案</span>
</span><span class='line'><span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/lib/require/object.rb&quot;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">require</span> <span class="n">file</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#lib 底下所有檔案</span>
</span><span class='line'><span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/lib/**/*.rb&quot;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">require</span> <span class="n">file</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 檔案 &amp;&amp; 資料夾名稱可自訂 ex: monkey_patches</span>
</span></code></pre></td></tr></table></div></figure>


<h1>使用</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">is?</span><span class="p">(</span><span class="s2">&quot;yes&quot;</span><span class="p">,</span> <span class="s2">&quot;no&quot;</span><span class="p">,</span> <span class="s2">&quot;hello)</span>
</span><span class='line'><span class="s2">#=&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span><span class="n">hello</span><span class="s2">&quot;.is?(&quot;</span><span class="n">yes</span><span class="s2">&quot;, &quot;</span><span class="n">no</span><span class="s2">&quot;)</span>
</span><span class='line'><span class="s2">#=&gt; false</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何測試上傳檔案 Rspec Upload File]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/01/rspec-upload-file/"/>
    <updated>2016-02-01T21:32:55+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/01/rspec-upload-file</id>
    <content type="html"><![CDATA[<p>rails 本身就有內建的 helper 可以很快的建造假的檔案，然後就可以測試上傳的功能了。</p>

<!-- more -->


<h1>建立資料夾</h1>

<p><code>spec/fixtures/files</code></p>

<p>在資料夾裡放入用來測試的檔案</p>

<h1>Rack::Test::UploadedFile.new</h1>

<p><code>Rack::Test::UploadedFile.new('path','mime-type')</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rack</span><span class="o">::</span><span class="no">Test</span><span class="o">::</span><span class="no">UploadedFile</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;test.jpg&#39;</span><span class="p">,</span> <span class="s2">&quot;image/jpeg&quot;</span><span class="p">)</span>
</span><span class='line'><span class="no">Rack</span><span class="o">::</span><span class="no">Test</span><span class="o">::</span><span class="no">UploadedFile</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="p">,</span> <span class="s1">&#39;/spec/fixtures/files/1.jpg&#39;</span><span class="p">)),</span> <span class="s2">&quot;image/jpeg&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>fixture_file_upload</h1>

<p>上面的簡短版本 <code>fixture_file_upload('path','mime-type')</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@file1</span> <span class="o">=</span> <span class="n">fixture_file_upload</span><span class="p">(</span><span class="s1">&#39;files/1.jpg&#39;</span><span class="p">,</span> <span class="s1">&#39;image/jpg&#39;</span><span class="p">)</span>
</span><span class='line'><span class="vi">@file2</span> <span class="o">=</span> <span class="n">fixture_file_upload</span><span class="p">(</span><span class="s1">&#39;files/2.pdf&#39;</span><span class="p">,</span> <span class="s1">&#39;application/pdf&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上兩個擇一，這樣就可以在 <code>create</code> 將 <code>@file</code> 帶入到 params</p>

<p>官方文件：
<a href="http://www.rubydoc.info/github/brynary/rack-test/Rack/Test/UploadedFile">Class: Rack::Test::UploadedFile</a>
<a href="http://apidock.com/rails/ActionDispatch/TestProcess/fixture_file_upload">fixture_file_upload</a></p>

<p>參考文件：
<a href="http://stackoverflow.com/questions/1178587/how-do-i-test-a-file-upload-in-rails">How do I test a file upload in rails?</a>
<a href="https://ruby-china.org/topics/21057">[求助] 文件上传的测试代码怎么写</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Ruby 進行 File ＆ Dir 檔案操作]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/31/ruby-file-dir/"/>
    <updated>2016-01-31T19:07:00+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/31/ruby-file-dir</id>
    <content type="html"><![CDATA[<p>用 ruby 來操作 file ＆ Dir 檔案。</p>

<!-- more -->


<h1>File 檔案操作</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;ruby.rb&quot;</span><span class="p">,</span> <span class="s2">&quot;w&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># w 覆寫整個檔案</span>
</span><span class='line'><span class="c1"># a 將內容加到檔案後方</span>
</span><span class='line'><span class="c1"># r 將內容加在檔案最前面</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;/home/work/ruby.rb&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;ruby.rb&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>  <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&quot;puts &#39;hello world&#39;&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1"># 打開檔案，並寫入文字</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s2">&quot;/home/work/ruby.rb&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#刪除檔案</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;ruby.rb&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#讀取檔案</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Path</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s2">&quot;..&quot;</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; 目前檔案路徑</span>
</span><span class='line'><span class="c1"># __FILE__ 是一個預先定義好的變數，內容是目前這個檔案的名稱</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="p">,</span> <span class="s2">&quot;ruby.rb&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; root_path/ruby.rb</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://stackoverflow.com/questions/224379/what-does-file-mean-in-ruby">What does <strong>FILE</strong> mean in Ruby?</a></p>

<h1>File data</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">extname</span><span class="p">(</span><span class="s2">&quot;ruby.rb&quot;&quot;)</span>
</span><span class='line'><span class="s2">#=&gt; &quot;</span><span class="o">.</span><span class="n">rb</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">File.basename(&quot;</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">work</span><span class="o">/</span><span class="n">ruby</span><span class="o">.</span><span class="n">rb</span><span class="s2">&quot;, &quot;</span><span class="o">.</span><span class="n">*</span><span class="s2">&quot;)</span>
</span><span class='line'><span class="s2">#=&gt; &quot;</span><span class="n">ruby</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2"># `*` Regular Expression，代表不管任何字</span>
</span><span class='line'>
</span><span class='line'><span class="s2">File.dirname(&quot;</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">work</span><span class="o">/</span><span class="n">ruby</span><span class="o">.</span><span class="n">rb</span><span class="s2">&quot;)</span>
</span><span class='line'><span class="s2"># =&gt; &quot;</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">work</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>資料夾操作</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="s2">&quot;dir&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 建立資料夾</span>
</span><span class='line'>
</span><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">entries</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 顯示目前的資料夾的檔案，回傳一個Array</span>
</span><span class='line'>
</span><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">entries</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="no">File</span><span class="o">.</span><span class="n">file?</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 檢查整個資料夾內的項目是否為檔案</span>
</span></code></pre></td></tr></table></div></figure>


<h1>判斷</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">file?</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 判斷是否為檔案？</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">directory?</span> <span class="s2">&quot;dir&quot;</span>
</span><span class='line'><span class="c1"># 判斷是否為資料夾？</span>
</span></code></pre></td></tr></table></div></figure>


<h1>FileUtils</h1>

<p>移動檔案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;fileutils&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">FileUtils</span><span class="o">.</span><span class="n">mv</span><span class="p">(</span><span class="n">current_path</span><span class="p">,</span> <span class="n">other_path</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">FileUtils</span><span class="o">.</span><span class="n">rm_rf</span><span class="p">(</span><span class="s2">&quot;dir&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 刪除資料夾</span>
</span><span class='line'>
</span><span class='line'><span class="no">FileUtils</span><span class="o">.</span><span class="n">copy_entry</span><span class="p">(</span><span class="s2">&quot;dir&quot;</span><span class="p">,</span> <span class="s2">&quot;new_dir&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 複製整個資料夾內容</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：
<a href="http://ruby-doc.org/core-2.3.0/File.html">File</a>
<a href="http://ruby-doc.org/stdlib-2.2.2/libdoc/fileutils/rdoc/FileUtils.html#method-c-cd">FileUtils</a></p>

<p>參考文件：
<a href="http://motion-express.com/trainings/scripting-in-ruby/screencasts/manipulating-files">用Ruby Scripting維護系統</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自訂 Validation]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/31/custom-validation/"/>
    <updated>2016-01-31T12:29:33+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/31/custom-validation</id>
    <content type="html"><![CDATA[<p>當內建的驗證沒有自己的需求時，可以自訂驗證的 method 來使用。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Picture</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'>  <span class="n">validate</span>  <span class="ss">:picture_size</span>  <span class="c1">#注意沒有加 &#39;s&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 驗證圖片的大小</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">picture_size</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">picture</span><span class="o">.</span><span class="n">size</span> <span class="o">&gt;</span> <span class="mi">5</span><span class="o">.</span><span class="n">megabytes</span>
</span><span class='line'>      <span class="n">errors</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="ss">:picture</span><span class="p">,</span> <span class="s2">&quot;should be less than 5MB&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="c1">#errors[:picture] &lt;&lt; &quot;should be less than 5MB&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://guides.rubyonrails.org/active_record_validations.html">Active Record 驗證</a><br/>
<a href="http://rails.ruby.tw/active_record_validations.html">Active Record 驗證 中文</a></p>

<p>參考文件：<br/>
<a href="https://ihower.tw/rails4/activerecord-lifecycle.html">ActiveRecord - 資料驗證及回呼</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Association Supports 方法]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/31/association-supports/"/>
    <updated>2016-01-31T11:54:15+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/31/association-supports</id>
    <content type="html"><![CDATA[<p>在 model 和 model 之間，經常要建立對應的關聯，rails 也提供很多 Supports 的 helper</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:microposts</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:active_relationships</span><span class="p">,</span>  <span class="ss">class_name</span><span class="p">:</span>  <span class="s2">&quot;Relationship&quot;</span><span class="p">,</span> <span class="ss">foreign_key</span><span class="p">:</span> <span class="s2">&quot;follower_id&quot;</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:passive_relationships</span><span class="p">,</span> <span class="ss">class_name</span><span class="p">:</span>  <span class="s2">&quot;Relationship&quot;</span><span class="p">,</span> <span class="ss">foreign_key</span><span class="p">:</span> <span class="s2">&quot;followed_id&quot;</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:following</span><span class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span class="ss">:active_relationships</span><span class="p">,</span>  <span class="ss">source</span><span class="p">:</span> <span class="ss">:followed</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:followers</span><span class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span class="ss">:passive_relationships</span><span class="p">,</span> <span class="ss">source</span><span class="p">:</span> <span class="ss">:follower</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><code>through</code> 透過關聯來建立另一個關聯集合，用於建立多對多的關係</p></li>
<li><p><code>class_name</code> 變更關聯的類別名稱</p></li>
</ul>


<p>可以用這個方式，自己關聯自己，像是要上面，User 可以 follower 很多個 User</p>

<blockquote><p>rails 慣例是 model 名稱，所以不用另外加 class_name</p></blockquote>

<ul>
<li><code>foreign_key</code> 可以修改外鍵名稱</li>
</ul>


<blockquote><p>rails 外鍵慣例是關聯的 Model 名稱加上 _id 後綴</p></blockquote>

<ul>
<li><code>dependent</code></li>
</ul>


<p>設定當物件刪除時，如何處理依賴它的資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Event</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:attendees</span><span class="p">,</span> <span class="ss">:dependent</span> <span class="o">=&gt;</span> <span class="ss">:destroy</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#:destroy 把依賴的attendees也一併刪除，並且執行Attendee的destroy回呼</span>
</span><span class='line'><span class="c1">#:delete 把依賴的attendees也一併刪除，但不執行Attendee的destroy回呼</span>
</span><span class='line'><span class="c1">#:nullify 這是預設值，不會幫忙刪除attendees，但會把attendees的外部鍵event_id都設成NULL</span>
</span><span class='line'><span class="c1">#:restrict_with_exception 如果有任何依賴的attendees資料，則連event都不允許刪除。執行刪除時會丟出錯誤例外ActiveRecord::DeleteRestrictionError。</span>
</span><span class='line'><span class="c1">#:restrict_with_error 不允許刪除。執行刪除時會回傳false，在@event.errors中會留有錯誤訊息。</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>source</code></li>
</ul>


<p>搭配through設定使用，當關聯的名稱不一致的時候，需要加上source指名是哪一種物件。</p>

<ul>
<li><code>counter_cache</code> 參考之前文章 <a href="http://mgleon08.github.io/blog/2015/12/20/counter-cache/">counter-cache</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:pages</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Page</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:book</span><span class="p">,</span> <span class="ss">:counter_cache</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#設定成 ture，就會自動去找 pages_count 欄位，若要指定欄位則是 counter_cache: :count_of_pages</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>inverse_of</code></li>
</ul>


<p>關聯另一端的關聯名稱。</p>

<blockquote><p>belongs_to 無法與 :polymorphic 同時使用。
has_one 無法與 :through 或 :as 同時使用。</p></blockquote>

<ul>
<li><code>polymorphic</code> &amp; <code>as</code> 參考之前文章 <a href="http://mgleon08.github.io/blog/2015/12/20/ruby-on-rails-polymorphic-associations-and-sti/">polymorphic</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Comment</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:commentable</span><span class="p">,</span> <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:comments</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:commentable</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Photo</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:comments</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:commentable</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>touch</code>
touch 為 true 時，儲存或刪除關聯物件時，關聯物件的 updated_at 或 updated_on 的時間戳會自動設成當前時間</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Order</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:customer</span><span class="p">,</span> <span class="ss">touch</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="c1">#更改欄位 touch: :orders_updated_at</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><code>validate</code> 預設為 false，儲存物件時不會驗證關聯物件</p></li>
<li><p><code>primary_key</code> 可以修改主鍵名稱</p></li>
</ul>


<h1>Scope</h1>

<ul>
<li><code>where</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Order</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:customer</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>includes</code></li>
</ul>


<p>經常性使用 <code>@line_item.order.customer</code> 就可以加上</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">LineItem</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:order</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">includes</span> <span class="ss">:customer</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Order</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:customer</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:line_items</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Customer</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:orders</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>readonly</code></li>
</ul>


<p>如果設定了 readonly 選項，則關聯物件取出時為唯讀。</p>

<ul>
<li><code>select</code></li>
</ul>


<p>select 方法可以覆寫用來取出關聯的 SELECT 子句。預設會取出所有欄位</p>

<h3>has_many 額外方式</h3>

<p>條件也可透過 Hash 指定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Customer</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:confirmed_orders</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span> <span class="ss">confirmed</span><span class="p">:</span> <span class="kp">true</span> <span class="p">},</span>
</span><span class='line'>                              <span class="ss">class_name</span><span class="p">:</span> <span class="s2">&quot;Order&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>用 Hash 的 where，產生出來的記錄會自動使用 Hash 的作用域。</p>

<p>上例中，使用 <code>@customer.confirmed_orders.create</code> 或 <code>@customer.confirmed_orders.build</code> 會建立出 confirmed 欄位為 true 的訂單</p>

<ul>
<li><code>group</code> 對結果做分組</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_many</span> <span class="ss">:line_items</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">group</span> <span class="s1">&#39;orders.id&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>limit</code> 限制透過關聯取出物件的數量</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">has_many</span> <span class="ss">:recent_orders</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">order</span><span class="p">(</span><span class="s1">&#39;order_date desc&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>offset</code> 指定開始從關聯取出物件的偏移量</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_many</span> <span class="ss">:orders</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">offset</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>order</code> 指定關聯物件取出後的排序方式</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_many</span> <span class="ss">:orders</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">order</span> <span class="s2">&quot;date_confirmed DESC&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>distinct</code> 確保集合中沒有重複的物件</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_many</span> <span class="ss">:articles</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">distinct</span> <span class="p">},</span> <span class="ss">through</span><span class="p">:</span> <span class="ss">:readings</span>
</span></code></pre></td></tr></table></div></figure>


<p>若想確保不插入重複的資料到資料庫（這樣取出來就確定是不重複的記錄了），應該要在資料表上新增一個唯一性的索引。</p>

<p>舉例來說，如果有 person_articles 資料表，想確保所有文章不重複，可加入下面這個遷移</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">add_index</span> <span class="ss">:person_articles</span><span class="p">,</span> <span class="ss">:article</span><span class="p">,</span> <span class="ss">unique</span><span class="p">:</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>不要使用 include? 來確保唯一性，因為多個使用者可能同時加入文章，可能會導致競態條件（Race Condition）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">articles</span> <span class="o">&lt;&lt;</span> <span class="n">article</span> <span class="k">unless</span> <span class="n">person</span><span class="o">.</span><span class="n">articles</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">article</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>extending</code> 指定一個模組名稱，用來擴充關聯代理（association proxy）</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">FindRecentExtension</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_recent</span>
</span><span class='line'>    <span class="n">where</span><span class="p">(</span><span class="s2">&quot;created_at &gt; ?&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="o">.</span><span class="n">days</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Customer</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:orders</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">extending</span> <span class="no">FindRecentExtension</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Supplier</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:deliveries</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">extending</span> <span class="no">FindRecentExtension</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：
<a href="http://guides.rubyonrails.org/association_basics.html#has-many-association-reference">has_many Association Reference</a>
<a href="http://rails.ruby.tw/association_basics.html#has-many-%E9%97%9C%E8%81%AF%E5%8F%83%E8%80%83%E6%89%8B%E5%86%8A">has_many Association Reference 中文</a>
<a href="http://rails.ruby.tw/association_basics.html#belongs-to-%E9%97%9C%E8%81%AF%E5%8F%83%E8%80%83%E6%89%8B%E5%86%8A">belongs_to 關聯手冊</a>
<a href="http://rails.ruby.tw/association_basics.html#has-one-%E9%97%9C%E8%81%AF%E5%8F%83%E8%80%83%E6%89%8B%E5%86%8A">has_one 關聯手冊</a>
<a href="http://rails.ruby.tw/association_basics.html#has-many-%E9%97%9C%E8%81%AF%E5%8F%83%E8%80%83%E6%89%8B%E5%86%8A">has_many 關聯</a></p>

<p>參考文件：
<a href="https://ihower.tw/rails4/activerecord-relationships.html">ActiveRecord - 資料表關聯</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Transactions 交易]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/31/transactions/"/>
    <updated>2016-01-31T10:58:13+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/31/transactions</id>
    <content type="html"><![CDATA[<p>當兩件事情必須確實執行完畢，才存取到資料庫！</p>

<!-- more -->


<h1>Transactions交易</h1>

<p>像是銀行匯款，必須一方確實扣款，另一方確實有新增款項，這筆交易在算成功!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">transaction</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s1">&#39;hello&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Feed</span><span class="o">.</span><span class="n">create!</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 transaction 裡面必須使用加上 <code>!</code> 才會丟例外，讓交易失敗。</p>

<p>另外，資料要在 transaction 完成後，才會存取到資料庫，因此有用 <code>after_save</code> 回呼，可能就會失敗。</p>

<p>因此必須改用 <code>after_commit</code>這個回呼，才能確保讀取到交易完成後的資料。</p>

<p><a href="https://ihower.tw/rails4/activerecord-others.html">ActiveRecord - 進階功能</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Try 來防止 Nil]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/29/try/"/>
    <updated>2016-01-29T21:35:23+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/29/try</id>
    <content type="html"><![CDATA[<p>在 rails 當中，經常會出現 nil 值，而爆錯，所以經常要去判斷
這個 try 就是簡化這個判斷產生的，懂得使用的話會非常好用。</p>

<!-- more -->


<p>但缺點就是每個地方都要去設定，即使是同一個值
因此另外一個解決方式就是用之前介紹的 <a href="http://mgleon08.github.io/blog/2015/12/13/ruby-on-rails-delegate/">delegate</a> 也可以達到同樣的效果。</p>

<h1>try</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># without try</span>
</span><span class='line'><span class="k">unless</span> <span class="vi">@number</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="vi">@number</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># with try</span>
</span><span class='line'><span class="vi">@number</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:next</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>將原本要寫三行簡短成一行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'><span class="vi">@user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:name</span><span class="o">=</span><span class="p">,</span> <span class="s2">&quot;haha&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#@user.name = &quot;haha&quot; unless @user.nil?</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@user</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'><span class="c1">#=&gt; &quot;haha&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#若改成@user.try(:name&lt;&lt;, &quot;haha&quot;)</span>
</span><span class='line'><span class="c1">#則會變成Operation 的 &lt;&lt; 而爆錯</span>
</span><span class='line'><span class="c1">#@user.name &lt;&lt; &quot;haha&quot; unless @user.nil?</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以放入 block</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#@user.try { |u| &quot;#{u.first_name} #{u.last_name}&quot; }</span>
</span></code></pre></td></tr></table></div></figure>


<h3>用try 防止例外出現</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#假設 @user = nil</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@user</span><span class="o">.</span><span class="n">age</span>
</span><span class='line'><span class="c1">#=&gt; NoMethodError: undefined method `age&#39; for #&lt;User:0x007f80b74c70e0&gt;</span>
</span><span class='line'><span class="c1">#因為 nil.age</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:age</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span><span class='line'><span class="c1">#因為 nil.age unless nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：
<a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/object/try.rb">try - rails_github</a>
<a href="http://guides.rubyonrails.org/active_support_core_extensions.html#try">try</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Rspec + Factory Girl 寫測試]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/29/rspec-plus-factory-girl/"/>
    <updated>2016-01-29T20:36:46+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/29/rspec-plus-factory-girl</id>
    <content type="html"><![CDATA[<p>程式寫久之後，就會發現測試的重要性!<br/>
因此來介紹 rails 中，比內建測試還好用的 rspec 搭配 factory_girl</p>

<!-- more -->


<h1>測試種類</h1>

<ul>
<li><p>單元測試(Unit test)<br/>
針對每個程式各個最小單位進行測試，像是在 controller 就單單只測試 controller 裡面的 action，而裡面產生的 model,method，都用假的方式來取代，已確保有錯誤時，可以很快知道是哪邊有問題 。</p></li>
<li><p>整合測試(Integration test)<br/>
主要是用來測試，每個 class 的互動，像是 controller 裡面會 call 到 model ，也會 call 到 view ，並測試回傳的值是否正確。</p></li>
</ul>


<h1>寫測試的好處</h1>

<ul>
<li>Instant Feedback 即時反饋（寫測試的時間 &lt; debug的時間）</li>
<li>回歸測試及重構 （重構時就不需要再重複的測試）</li>
<li>幫助設計API（TDD = 先測試，在實作）</li>
<li>一種程式文件（可以讓很快就知道之前api怎麼寫的）</li>
</ul>


<h1>慣例</h1>

<ul>
<li>⼀個 rb 檔案配⼀個同名的 _spec.rb 檔案</li>
<li>guard 等⼯具容易設定<br/>
<a href="https://github.com/guard/guard-rspec">guard-rspec</a> 程式⼀修改完存檔，⾃動跑對應的測試（bundle後，輸入 guard init repec 初始化，打guard（bundle exec guard 真正執行））</li>
<li>editor 有⽀援快速鍵</li>
<li>describe “#name” 是 instance method</li>
<li>describe “.name” 是 class method</li>
<li>測試spec盡量比較簡單清楚，可以不用DRY，實作才會要DRY</li>
</ul>


<h1>輸出格式</h1>

<ul>
<li>rspec filename.rb 預設不產⽣⽂件</li>
<li>rspec filename.rb -fd 輸出 specdoc ⽂件</li>
<li>rspec filename.rb -fh 輸出 html ⽂件</li>
</ul>


<h1>安裝</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rspec-rails&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;factory_girl_rails&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<h3>顏色描述</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#vi .rspec檔案輸入</span>
</span><span class='line'><span class="o">--</span><span class="n">color</span> <span class="c1">#顯示顏色</span>
</span><span class='line'><span class="o">--</span><span class="nb">format</span> <span class="c1">#documentation顯示描述</span>
</span></code></pre></td></tr></table></div></figure>


<h3>將不需要的檔案關閉</h3>

<p>generate 新的 controller 或是 model 時，rails 就會很聰明的順便新增 sepc 檔案，但有時候我們會希望用到的時候再去建立即可，所以需要關閉就輸入以下指令。</p>

<p><code>/config/application.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">generators</span> <span class="k">do</span> <span class="o">|</span><span class="n">g</span><span class="o">|</span>
</span><span class='line'>  <span class="n">g</span><span class="o">.</span><span class="n">view_specs</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">g</span><span class="o">.</span><span class="n">helper_specs</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">g</span><span class="o">.</span><span class="n">request_specs</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">g</span><span class="o">.</span><span class="n">controller_specs</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">g</span><span class="o">.</span><span class="n">routing_specs</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Rspec</h1>

<h3>model</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails_helper&#39;</span> <span class="c1">#必須載入才能使用裡面的方法</span>
</span><span class='line'>
</span><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">Post</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="ss">:model</span> <span class="k">do</span> <span class="c1">#RSpec 可省略</span>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;is accessible&quot;</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">create!</span>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="n">post</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="no">Post</span><span class="o">.</span><span class="n">last</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;has title and content columns&quot;</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">columns</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">column_names</span>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="n">columns</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>describe</code>, <code>context</code> 描述要測試的是什麼，可以用nested</li>
<li><code>it</code>, <code>specify</code>, <code>example</code> 就是⼀⼩段測試</li>
<li><code>expect(…).to</code> 或 <code>expect(…).to_not</code> 定義期望</li>
<li><code>eq</code> 預期的是否和自己設定的相等</li>
<li><code>include</code> 預期的是否有包括自己設定的值</li>
<li><code>describe</code> 和 <code>it</code> 前面加上 x 代表 pending，執行 rspec 就會先跳拓</li>
<li><a href="https://www.relishapp.com/rspec/rspec-expectations/v/3-4/docs/built-in-matchers/change-matcher">其他方法</a></li>
</ul>


<h3>Routing spec syntax</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">&quot;posts&quot;</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="ss">:routing</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="ss">:get</span> <span class="o">=&gt;</span> <span class="s2">&quot;/events&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">route_to</span><span class="p">(</span><span class="s2">&quot;events#index&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="ss">:get</span> <span class="o">=&gt;</span> <span class="s2">&quot;/widgets/1/edit&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">not_to</span> <span class="n">be_routable</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="ss">:get</span> <span class="o">=&gt;</span> <span class="s2">&quot;/posts/1&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">route_to</span><span class="p">(</span>
</span><span class='line'>        <span class="ss">:controller</span> <span class="o">=&gt;</span> <span class="s2">&quot;posts&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:action</span> <span class="o">=&gt;</span> <span class="s2">&quot;show&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Controller spec syntax</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="no">PostsController</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="ss">:controller</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">render_template</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">events_url</span><span class="p">)</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">assigns</span><span class="p">(</span><span class="ss">:event</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">be_a_new</span><span class="p">(</span><span class="no">Event</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>View spec syntax</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">&quot;posts/index.html.erb&quot;</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="ss">:view</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">render</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">rendered</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s2">&quot;Title&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">render_template</span><span class="p">(</span><span class="ss">partial</span><span class="p">:</span> <span class="s2">&quot;_form&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Helper spec syntax</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">helper</span><span class="o">.</span><span class="n">your_method</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>model spec</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="no">Material</span><span class="o">::</span><span class="no">Banner</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="ss">:model</span> <span class="k">do</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>request</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">describe</span> <span class="s2">&quot;Users&quot;</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="ss">:request</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;GET /users&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">get</span> <span class="s2">&quot;/users&quot;</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">render_template</span><span class="p">(</span><span class="ss">:index</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s2">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;GET /user/:id&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">get</span> <span class="s2">&quot;/user&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">id</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">render_template</span><span class="p">(</span><span class="ss">:index</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s2">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>request 通常直接從網址進行 Get 或 Post ，接著判斷傳回來的值是否正確。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">before</span><span class="p">(</span><span class="ss">:all</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#也有 after(:each)，afte(:all)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>before(:each) 每段it之前執行</li>
<li>before(:all) 整段describe前只執行一次</li>
<li>after(:each) 每段it之後執行</li>
<li>after(:all) 整段describe後只執行一次</li>
<li>(:each) 可以不用加，預設為(:each)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">){</span><span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s2">&quot;hello&quot;</span><span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>相較於 before(:each) 可增加執⾏速度</li>
<li>有使⽤到才會運算(lazy)，並且在同⼀個 example 測試中多次呼叫會 Memoized 快取起來。</li>
<li>let! 則是⾮ lazy 版本</li>
</ul>


<h3>Stub</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">allow_any_instance_of</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:follow</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>用stub 假造 method，讓它忽略這個 method，或是指定回傳東西，可以避免在測試時，測試不必要的東西。</p>

<h3>focus</h3>

<p>當想要只跑指定的測試時，可以加上 focus</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">it</span> <span class="s1">&#39;#index&#39;</span><span class="p">,</span>  <span class="ss">focus</span><span class="p">:</span><span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">get</span> <span class="ss">:index</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span> <span class="mi">200</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rspec</span> <span class="o">--</span><span class="n">tag</span> <span class="n">focus</span>
</span></code></pre></td></tr></table></div></figure>


<h1>factory_girl</h1>

<p>到 <code>spec/rails_helper.rb</code> 設定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">include</span> <span class="no">FactoryGirl</span><span class="o">::</span><span class="no">Syntax</span><span class="o">::</span><span class="no">Methods</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 <code>spec</code> 底下新增 <code>factories</code> 資料夾，接著在裡面新增相對應的物件名稱，像是 <code>user.rb</code></p>

<p><code>spec/factories/user.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="no">User</span><span class="s2">&quot; do</span>
</span><span class='line'><span class="s2">    name &quot;</span><span class="n">hello</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">    age  18</span>
</span><span class='line'><span class="s2">    </span>
</span><span class='line'><span class="s2">    # 可以設定create 之後要做哪些動作</span>
</span><span class='line'><span class="s2">    after(:create) do |video|</span>
</span><span class='line'><span class="s2">      create(:photo, photo_id: photo.id)</span>
</span><span class='line'><span class="s2">      create(:photo, size: &quot;</span><span class="mi">500</span><span class="s2">&quot;, photo_id: photo.id)</span>
</span><span class='line'><span class="s2">      create(:photo, size: &quot;</span><span class="mi">800</span><span class="s2">&quot;, photo_id: photo.id)</span>
</span><span class='line'><span class="s2">    end</span>
</span><span class='line'><span class="s2">    </span>
</span><span class='line'><span class="s2">    # 也可以設定多種條件</span>
</span><span class='line'><span class="s2">    trait :child do</span>
</span><span class='line'><span class="s2">      age 6</span>
</span><span class='line'><span class="s2">      #after(:create) {|user| user.add_role(:admin) } </span>
</span><span class='line'><span class="s2">      #after(:build)  {|user| user.add_role(:admin) } </span>
</span><span class='line'><span class="s2">      # 也可以設定 create 之後的設定</span>
</span><span class='line'><span class="s2">    end</span>
</span><span class='line'><span class="s2">  end</span>
</span><span class='line'><span class="s2">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>這樣在 spec 裡面就可以直接建立假資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@user</span>  <span class="o">=</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="c1">#FactoryGirl 可省略</span>
</span><span class='line'>  <span class="vi">@child</span> <span class="o">=</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:child</span><span class="p">)</span> <span class="c1">#就只替換掉 age</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>注意</h3>

<p>factory_girl 產生出來的資料，不會透過 controller ，而是直接再 model 產生，因此會跑出 validation 的驗證。</p>

<p>若是希望能跑 controller action 裡的 method 則是要另外跑</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">trait</span> <span class="ss">:user_buy</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">after</span><span class="p">(</span><span class="ss">:create</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span>
</span><span class='line'>    <span class="n">user</span><span class="o">.</span><span class="n">buy</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>為什麼要假物件?</h3>

<ul>
<li>無法控制回傳值的外部系統 (例如第三⽅ web service)</li>
<li>建構正確的回傳值很⿇煩 (例如得準備很多假資料)</li>
<li>可能很慢，拖慢測試速度 (例如耗時的運算)</li>
<li>有難以預測的回傳值 (例如亂數⽅法)</li>
<li>還沒開始實作 (特別是採⽤ TDD 流程)</li>
</ul>


<h1>Capybara</h1>

<p>RSpec除了可以拿來寫單元程式，我們也可以把測試的層級拉高做整合性測試，以Web應用程式來說，就是去自動化瀏覽器的操作，實際去向網站伺服器請求，然後驗證出來的HTML是正確的輸出。</p>

<p><a href="https://github.com/jnicklas/capybara">capybara</a>就是一套可以搭配的工具，用來模擬瀏覽器行為</p>

<h1>CI server</h1>

<p>CI(Continuous Integration)
伺服器的用處是每次有人Commit就會自動執行編譯及測試(Ruby不用編譯，所以主要的用處是跑測試)，並回報結果，如果有人送交的程式搞砸了回歸測試，馬上就有回饋可以知道。</p>

<p><a href="https://circleci.com">circleci.com</a></p>

<p>建立 <code>circle.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">machine</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">timezone</span><span class="p">:</span>
</span><span class='line'>    <span class="no">Asia</span><span class="o">/</span><span class="no">Taipei</span>
</span><span class='line'>  <span class="ss">ruby</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">version</span><span class="p">:</span> <span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">2</span>
</span><span class='line'><span class="ss">dependencies</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">pre</span><span class="p">:</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">rvm</span> <span class="n">use</span> <span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">2</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">bundler</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">rubocop</span>
</span><span class='line'>  <span class="ss">post</span><span class="p">:</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">gem</span> <span class="n">update</span> <span class="n">rake</span>
</span><span class='line'><span class="ss">database</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">override</span><span class="p">:</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">cp</span> <span class="n">config</span><span class="o">/</span><span class="n">database</span><span class="o">.</span><span class="n">yml</span><span class="o">.</span><span class="n">example</span> <span class="n">config</span><span class="o">/</span><span class="n">database</span><span class="o">.</span><span class="n">yml</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">create</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span> <span class="o">--</span><span class="n">trace</span>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">override</span><span class="p">:</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rspec</span> <span class="o">--</span><span class="n">color</span>
</span></code></pre></td></tr></table></div></figure>


<p>建立 <code>config/database.yml.example</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">default</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">default</span>
</span><span class='line'>  <span class="ss">adapter</span><span class="p">:</span> <span class="n">mysql2</span>
</span><span class='line'>  <span class="ss">encoding</span><span class="p">:</span> <span class="n">utf8</span>
</span><span class='line'>  <span class="ss">host</span><span class="p">:</span> <span class="n">localhost</span>
</span><span class='line'>  <span class="ss">username</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">password</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="ss">database</span><span class="p">:</span> <span class="n">test_db</span>
</span><span class='line'>
</span><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="ss">database</span><span class="p">:</span> <span class="n">development_db</span>
</span><span class='line'>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="ss">database</span><span class="p">:</span> <span class="n">production_db</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著到 <a href="https://circleci.com">circleci.com</a> 和 github 帳號做連結。<br/>
接著將要跑的 project 加進去，之後只要 push 到 github 就會自動跑了！</p>

<h1>大師引言</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">大部份都是寫</span><span class="n">model</span><span class="err">的測試</span>
</span><span class='line'><span class="n">controller</span><span class="err">偶爾會寫</span>
</span><span class='line'>
</span><span class='line'><span class="err">其他的因為後面有驗收測試也會測試到，所以不浪費時間去寫測試</span>
</span><span class='line'><span class="err">驗收測試多半是測試子路徑，不會測到所有的條件，所以個別的小項測試，就直接在</span><span class="n">model</span><span class="err">寫就好了</span>
</span><span class='line'>
</span><span class='line'><span class="err">工程是寫到</span><span class="n">request</span><span class="err">就很棒了</span>
</span><span class='line'><span class="n">feature</span> <span class="err">比較像是</span><span class="no">QA</span><span class="err">在寫的</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://betterspecs.org/">Better Specs</a><br/>
<a href="https://www.relishapp.com/">Relish</a></p>

<p>Gem：<br/>
<a href="https://github.com/rspec/rspec-rails">rspec-rails</a><br/>
<a href="https://github.com/thoughtbot/factory_girl_rails">factory_girl_rails</a>  <br/>
<a href="https://github.com/guard/guard-rspec">guard-rspec</a><br/>
<a href="https://github.com/jnicklas/capybara">capybara</a></p>

<p>參考文件：<br/>
<a href="https://ihower.tw/rails4/testing.html">自動化測試</a><br/>
<a href="http://motion-express.com/trainings/rspec-rails-1">RSpec-Rails (基礎篇)</a><br/>
<a href="http://motion-express.com/blog/20150320-custom-helpers-in-rspec">RSpec-Rails當中自訂methods及helpers</a><br/>
<a href="http://motion-express.com/blog/20150327-rspec-rails-testing-module">RSpec-Rails 針對module進行unit test</a><br/>
<a href="http://www.slideshare.net/ihower/rspec-7394497">RSpec 讓你愛上寫測試</a><br/>
<a href="https://blog.alphacamp.co/2015/03/02/tdd-kata/">程式設計師升級必練內功：TDD Kata</a><br/>
<a href="https://codility.com/programmers/lessons/">codility 練習</a><br/>
<a href="http://www.sportcalculators.com/bowling-score-calculator">保齡球練習</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Carrierwave + FFMPEG 影片轉檔]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/29/carrierwavea-plus-ffmpeg/"/>
    <updated>2016-01-29T20:26:02+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/29/carrierwavea-plus-ffmpeg</id>
    <content type="html"><![CDATA[<p>若是上傳的檔案是影片，並且要對影片做其他處理，就可以使用 FFMPRG 來處理。</p>

<!-- more -->


<p></p>

<h1>電腦先安裝ffmpeg</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install ffmpeg</span></code></pre></td></tr></table></div></figure>


<h1>Gem</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;carrierwave&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;streamio-ffmpeg&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<p><code>application.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;carrierwave&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>lib/carrierwave/ffmpeg.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;streamio-ffmpeg&#39;</span>
</span><span class='line'><span class="k">module</span> <span class="nn">CarrierWave</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">FFMPEG</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">resample</span><span class="p">(</span><span class="n">bitrate</span><span class="p">)</span>
</span><span class='line'>        <span class="n">process</span> <span class="ss">:resample</span> <span class="o">=&gt;</span> <span class="n">bitrate</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">resample</span><span class="p">(</span><span class="n">bitrate</span><span class="p">)</span>
</span><span class='line'>      <span class="n">directory</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">current_path</span><span class="p">)</span>
</span><span class='line'>      <span class="n">tmpfile</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">directory</span><span class="p">,</span> <span class="s2">&quot;tmpfile&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="no">FileUtils</span><span class="o">.</span><span class="n">mv</span><span class="p">(</span> <span class="n">current_path</span><span class="p">,</span> <span class="n">tmpfile</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">file</span> <span class="o">=</span> <span class="o">::</span><span class="no">FFMPEG</span><span class="o">::</span><span class="no">Movie</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">tmpfile</span><span class="p">)</span>
</span><span class='line'>      <span class="n">file</span><span class="o">.</span><span class="n">transcode</span><span class="p">(</span><span class="n">current_path</span><span class="p">,</span> <span class="ss">video_bitrate</span><span class="p">:</span> <span class="n">bitrate</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">tmpfile</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>app/uploaders/video_uploader.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="p">,</span> <span class="s2">&quot;lib&quot;</span><span class="p">,</span> <span class="s2">&quot;carrierwave&quot;</span><span class="p">,</span> <span class="s2">&quot;ffmpeg&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">VideoUploader</span> <span class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">CarrierWave</span><span class="o">::</span><span class="no">FFMPEG</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">store_dir</span>
</span><span class='line'>    <span class="s2">&quot;uploads/</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">underscore</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">mounted_as</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">extension_white_list</span>
</span><span class='line'>    <span class="sx">%w(mp4 flv)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">version</span> <span class="ss">:bitrate_800k</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">process</span> <span class="ss">:resample</span> <span class="o">=&gt;</span> <span class="s2">&quot;800k&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">version</span> <span class="ss">:bitrate_500k</span><span class="p">,</span> <span class="ss">from_version</span><span class="p">:</span> <span class="ss">:bitrate_800k</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">process</span> <span class="ss">:resample</span> <span class="o">=&gt;</span> <span class="s2">&quot;500k&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>FFMPEG</h1>

<p>也可以用 ruby 直接下 ffmpef 的指令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ffmpeg</span> <span class="o">-</span><span class="n">y</span> <span class="o">-</span><span class="n">i</span> <span class="c1">#{input_path} -vf &quot;scale=ceil(oh*a):480&quot; -vcodec libx264 -preset:v slow -pix_fmt yuv420p -profile:v baseline -level 3.0 -b #{bitrate} -r 29.97 -acodec libvo_aacenc -ac 2 -ar 44100 -ab 64k -movflags faststart #{output_path}</span>
</span></code></pre></td></tr></table></div></figure>


<p>縮圖</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ffmpeg</span> <span class="o">-</span><span class="n">i</span> <span class="c1">#{input} -ss 00:00:05 -vframes 1 #{thumbnil}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Calling shell commands from Ruby</h1>

<ol>
<li>Kernel#`, commonly called backticks – <code>cmd</code></li>
</ol>


<p>Returns the result of the shell command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sb">`echo &#39;hi&#39;`</span>
</span><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sb">`</span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Built-in syntax, <code>%x( cmd )</code></li>
</ol>


<p>Returns the result of the shell command, just like the backticks.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sx">%x( echo &#39;hi&#39; )</span>
</span><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sx">%x[ </span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="sx"> ]</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Kernel# <code>system</code></li>
</ol>


<p>Return: true if the command was found and ran successfully, false otherwise</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">wasGood</span> <span class="o">=</span> <span class="nb">system</span><span class="p">(</span> <span class="s2">&quot;echo &#39;hi&#39;&quot;</span> <span class="p">)</span>
</span><span class='line'><span class="n">wasGood</span> <span class="o">=</span> <span class="nb">system</span><span class="p">(</span> <span class="n">cmd</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Kernel#exec</li>
</ol>


<p>Return: none, the current process is replaced and never continues</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">exec</span><span class="p">(</span> <span class="s2">&quot;echo &#39;hi&#39;&quot;</span> <span class="p">)</span>
</span><span class='line'><span class="nb">exec</span><span class="p">(</span> <span class="n">cmd</span> <span class="p">)</span> <span class="c1"># Note: this will never be reached because of the line above</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="https://github.com/carrierwaveuploader/carrierwave">carrierwave</a><br/>
<a href="https://github.com/streamio/streamio-ffmpeg">streamio-ffmpeg</a><br/>
<a href="https://www.ffmpeg.org/">FFMPEG</a><br/>
<a href="http://ruby-doc.org/core-2.3.0/Kernel.html">Kernel</a></p>

<p>參考文件：<br/>
<a href="http://www.freezzo.com/2010/12/23/create-ffmpeg-processor-for-carrierwave-in-rails-3/">Create FFMPEG processor for Carrierwave in Rails 3</a><br/>
<a href="https://prograils.com/posts/carrierwave-basic-video-conversion">CarrierWave - basic video conversion</a><br/>
<a href="http://stackoverflow.com/questions/3159945/running-command-line-commands-within-ruby-script">Running command line commands within Ruby script</a><br/>
<a href="http://stackoverflow.com/questions/2232/calling-shell-commands-from-ruby">Calling shell commands from Ruby</a><br/>
<a href="http://tech.natemurray.com/2007/03/ruby-shell-commands.html">6 Ways to Run Shell Commands in Ruby Tuesday</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Rubocop 寫出好風格]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/22/rubocop/"/>
    <updated>2016-01-22T22:39:47+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/22/rubocop</id>
    <content type="html"><![CDATA[<p>rubocop 像是一個程式評量工具，會告知在 rails 中的寫法，要如何才會比較好!</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">rubocop</span>
</span></code></pre></td></tr></table></div></figure>


<p>指令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rubocop</span> <span class="n">app</span> <span class="n">spec</span> <span class="n">lib</span><span class="o">/</span><span class="n">something</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/bbatsov/rubocop">rubocop</a></p>

<p>參考文件：
<a href="https://blog.alphacamp.co/2015/12/24/how-to-use-rubocop-in-rails-project/">如何在Rails專案中使用Rubocop統一程式風格？</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Carrierwave 輕鬆做上傳檔案功能]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/22/carrierwave/"/>
    <updated>2016-01-22T22:12:46+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/22/carrierwave</id>
    <content type="html"><![CDATA[<p>另一個上傳檔案的 gem ，相當的實用，和 Paperclip 擇一即可。</p>

<!-- more -->


<h1>安裝</h1>

<p>Gemfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;carrierwave&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rmagick&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># or gem &quot;mini_magick&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>carrierwave 上傳檔案</li>
<li>rmagick 處理圖片</li>
</ul>


<blockquote><p>必須有安裝 ImageMagick 才能使用 rmagick</p></blockquote>

<p>有 homebrew 可以直接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">imagemagick</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<p>先建立資料夾，主要用來存放所有的檔案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">uploader</span> <span class="n">file</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著在在要存放的 model 新增一筆欄位</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">migration</span> <span class="n">add_file_to_products</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Model</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Product</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">mount_uploader</span> <span class="ss">:file</span><span class="p">,</span> <span class="no">FileUploader</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>最後記得再 strong params 加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">product_params</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:product</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:file</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Form</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for @product do |f| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">file_field</span> <span class="ss">:file</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= f.submit &quot;Submit&quot; %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>view</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">image_tag</span> <span class="vi">@product</span><span class="o">.</span><span class="n">image_url</span><span class="o">.</span><span class="n">to_s</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>imageurl是預設的helper，to_s是要確定把上傳的路徑轉變為字串，以免發生錯誤。</p>

<h1>RMagick</h1>

<p><code>app/uploaders/file_uploader.rb</code></p>

<p>可以將設定打開，有 RMagick 和 MiniMagick ，都是用來縮圖的。(擇一即可)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Include RMagick or MiniMagick support:</span>
</span><span class='line'><span class="c1"># include CarrierWave::RMagick</span>
</span><span class='line'><span class="c1"># include CarrierWave::MiniMagick</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面把註解拿掉就可以使用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Create</span> <span class="n">different</span> <span class="n">versions</span> <span class="n">of</span> <span class="n">your</span> <span class="n">uploaded</span> <span class="ss">files</span><span class="p">:</span>
</span><span class='line'><span class="n">version</span> <span class="ss">:thumb</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">process</span> <span class="ss">:resize_to_fit</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>之後再 view 中只要指定，就會去抓取縮小後的圖檔</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">image_tag</span> <span class="vi">@product</span><span class="o">.</span><span class="n">image_url</span><span class="p">(</span><span class="ss">:thumb</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>其他</h1>

<p>限制存取大小<br/>
<a href="https://github.com/carrierwaveuploader/carrierwave/wiki/How-to:-Validate-attachment-file-size">How to: Validate attachment file size</a></p>

<p>存取圖片長寬<br/>
<a href="https://github.com/carrierwaveuploader/carrierwave/wiki/How-to:-Get-image-dimensions">How to: Get image dimensions</a></p>

<p>存取圖片大小和類型<br/>
<a href="https://github.com/carrierwaveuploader/carrierwave/wiki/How-to:-Store-the-uploaded-file-size-and-content-type">How to: Store the uploaded file size and content type</a></p>

<p>官方文件：<br/>
<a href="https://github.com/carrierwaveuploader/carrierwave">carrierwave</a></p>

<p>參考資料：<br/>
<a href="http://motion-express.com/blog/20140708-ruby-gem-carrierwave">Ruby gem &lsquo;Carrierwave&rsquo; 上傳檔案神器的簡易安裝與使用</a><br/>
<a href="http://rubyist.marsz.tw/blog/2012-01-10/carrierwave-guides-with-amazon-s3-and-imagemagick-integration/">使用 Carrierwave 處理檔案上傳 (整合 imagemagick 與 Amazon S3)</a> <br/>
<a href="https://ruby-china.org/topics/4992">gem &lsquo;carrierwave'简易实用介绍</a><br/>
<a href="http://springok-blog.logdown.com/posts/2015/10/21/railsgem-how-to-use-carrierwave-upload-pictures">Rails如何使用Carrierwave上傳圖片</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Paperclip 輕鬆做上傳檔案功能]]></title>
    <link href="http://mgleon08.github.com/blog/2016/01/22/paperclip/"/>
    <updated>2016-01-22T22:12:20+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/01/22/paperclip</id>
    <content type="html"><![CDATA[<p>在網站中經常會需要用到上傳檔案功能
而 Paperclip 就是可以在上傳檔案這件事變得更加便利。</p>

<!-- more -->


<h1>安裝</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;paperclip&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AddAvatarColumnsToUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">up</span>
</span><span class='line'>    <span class="n">add_attachment</span> <span class="ss">:topics</span><span class="p">,</span> <span class="ss">:picture</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">down</span>
</span><span class='line'>    <span class="n">remove_attachment</span> <span class="ss">:topics</span><span class="p">,</span> <span class="ss">:picture</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>attachment 會自動產生以下四個攔位</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">string</span>   <span class="s2">&quot;picture_file_name&quot;</span><span class="p">,</span>    <span class="ss">limit</span><span class="p">:</span> <span class="mi">255</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">string</span>   <span class="s2">&quot;picture_content_type&quot;</span><span class="p">,</span> <span class="ss">limit</span><span class="p">:</span> <span class="mi">255</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">integer</span>  <span class="s2">&quot;picture_file_size&quot;</span><span class="p">,</span>    <span class="ss">limit</span><span class="p">:</span> <span class="mi">4</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">datetime</span> <span class="s2">&quot;picture_updated_at&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Model</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_attached_file</span> <span class="ss">:picture</span><span class="p">,</span> <span class="ss">styles</span><span class="p">:</span> <span class="p">{</span> <span class="ss">medium</span><span class="p">:</span> <span class="s2">&quot;300x300&gt;&quot;</span><span class="p">,</span> <span class="ss">thumb</span><span class="p">:</span> <span class="s2">&quot;100x100&gt;&quot;</span> <span class="p">},</span> <span class="ss">default_url</span><span class="p">:</span> <span class="s2">&quot;/images/:style/missing.png&quot;</span>
</span><span class='line'>  <span class="n">validates_attachment_content_type</span> <span class="ss">:picture</span><span class="p">,</span> <span class="ss">content_type</span><span class="p">:</span> <span class="sr">/\Aimage\/.*\Z/</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Form</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for @user, url: users_path, html: { multipart: true } do |form| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">form</span><span class="o">.</span><span class="n">file_field</span> <span class="ss">:picture</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="vi">@user</span><span class="o">.</span><span class="n">picture</span><span class="o">.</span><span class="n">exist?</span><span class="sx">%&gt;</span>
</span><span class='line'><span class="sx"> &lt;%= check_box_tag “remove” ,”1”%&gt;</span> <span class="c1">#刪除按鈕</span>
</span><span class='line'><span class="o">&lt;%</span><span class="k">end</span><span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在編輯的時候設定如果remove=1就設定圖片欄位為nil就會刪除</p>

<h3>controller</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:remove</span><span class="o">]==</span><span class="mi">1</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">picture</span><span class="o">=</span><span class="kp">nil</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>View</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= image_tag @topic.picture.url %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">image_tag</span> <span class="vi">@topic</span><span class="o">.</span><span class="n">picture</span><span class="o">.</span><span class="n">url</span><span class="p">(</span><span class="ss">:medium</span><span class="p">)</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= image_tag @topic.picture.url(:thumb) %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>同時上傳多個檔案</h1>

<p>1-to-1 可以使用 <code>fields_for</code> 來達成，但若是 1-to-many ，則必須要搭配 JavaScript 協助動態增減欄位，動態加減數量。</p>

<p>可以使用以下 gem<br/>
<a href="https://github.com/ncri/nested_form_fields">nested_form_fields</a></p>

<p>(注意 Strong Parameter，這個 gem 的 README 沒提到)</p>

<h3>model</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_many</span> <span class="ss">:banners</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'><span class="n">accepts_nested_attributes_for</span> <span class="ss">:banners</span><span class="p">,</span> <span class="ss">allow_destroy</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:reject_if</span> <span class="o">=&gt;</span> <span class="ss">:all_blank</span>
</span></code></pre></td></tr></table></div></figure>


<h3>strong params</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:company</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:banners_attributes</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:banner</span><span class="p">,</span> <span class="ss">:banner_alt</span><span class="p">,</span> <span class="ss">:_destroy</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>form</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;image&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Banner</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= c.nested_fields_for :banners do |b| %&gt;</span>
</span><span class='line'><span class="sr">      &lt;div class=&quot;form-group&quot;&gt;</span>
</span><span class='line'><span class="sr">      &lt;%= b.file_field :banner%&gt;</span>
</span><span class='line'><span class="sr">      &lt;%= b.label :banner_alt, &quot;banner_alt&quot; %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sr">      &lt;%= b.text_field :banner_alt, :class=&gt;&quot;form-control&quot;%&gt;</span>
</span><span class='line'><span class="sr">      &lt;%= b.remove_nested_fields_link &#39;Remove me&#39;%&gt;</span>
</span><span class='line'><span class="sr">    &lt;% end %&gt;</span>
</span><span class='line'><span class="sr">    &lt;%=c.add_nested_fields_link :banners, &#39;新增Banner&#39;, :class =&gt; &quot;btn btn-default&quot;%&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>或是  <a href="https://github.com/nathanvda/cocoon">cocoon</a></p>

<h3>可參考之前的</h3>

<p><a href="http://mgleon08.github.io/blog/2015/12/13/ruby-on-rails-accepts-nested-attributes-for/">Ruby on Rails - Accepts_nested_attributes_for</a></p>

<p>官方文件：<br/>
<a href="https://github.com/thoughtbot/paperclip">paperclip</a><br/>
<a href="https://github.com/ncri/nested_form_fields">nested_form_fields</a><br/>
<a href="https://github.com/nathanvda/cocoon">cocoon</a></p>

<p>參考文件：<br/>
<a href="http://chouandy.logdown.com/posts/249554-use-paperclip-implement-any-format-file-uploading">使用 paperclip 實作任意格式檔案上傳</a><br/>
<a href="http://chouandy.logdown.com/posts/252165-use-paperclip-implement-any-format-file-uploading-to-aws-s3">使用 paperclip 實作任意格式檔案上傳至 AWS S3</a><br/>
<a href="http://blog.jex.tw/blog/2015/07/13/rails-upload/">Rails 上傳 Upload</a><br/>
<a href="http://www.railscook.com/recipes/multiple-files-upload-with-nested-resource-using-paperclip-in-rails/">Multiple files upload with nested resource using Paperclip in Rails</a></p>
]]></content>
  </entry>
  
</feed>
