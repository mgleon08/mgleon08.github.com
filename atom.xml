<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leon's Blogging]]></title>
  <link href="http://mgleon08.github.com/atom.xml" rel="self"/>
  <link href="http://mgleon08.github.com/"/>
  <updated>2016-03-10T11:20:16+08:00</updated>
  <id>http://mgleon08.github.com/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Outputting XML]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/08/outputting-xml/"/>
    <updated>2016-03-08T23:03:49+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/08/outputting-xml</id>
    <content type="html"><![CDATA[<p>在 <code>rails</code> 當中，可以用 <code>xml.builder</code> 來輕鬆的輸出 <code>xml</code></p>

<!-- more -->


<h1>Format</h1>

<p>可以直接在 <code>routes</code> ，設定 format 格式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span>  <span class="ss">:l</span><span class="p">,</span> <span class="ss">:defaults</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:format</span> <span class="o">=&gt;</span> <span class="s1">&#39;xml&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>或是 controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>
</span><span class='line'><span class="k">class</span> <span class="nc">PeopleController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@people</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">json</span><span class="p">{</span> <span class="n">render</span> <span class="ss">:json</span> <span class="o">=&gt;</span> <span class="vi">@person</span><span class="o">.</span><span class="n">to_json</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">xml</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">:xml</span> <span class="o">=&gt;</span> <span class="vi">@person</span><span class="o">.</span><span class="n">to_xml</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>View</h1>

<p><code>index.xml.builder</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">xml</span><span class="o">.</span><span class="n">instruct!</span>
</span><span class='line'><span class="n">xml</span><span class="o">.</span><span class="n">xml</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">xml</span><span class="o">.</span><span class="n">linkXml</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">xml</span><span class="o">.</span><span class="n">phone</span>  <span class="vi">@user</span>
</span><span class='line'>    <span class="n">xml</span><span class="o">.</span><span class="n">age</span>    <span class="vi">@age</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#&lt;xml&gt;</span>
</span><span class='line'>  <span class="c1">#&lt;linkXml&gt;</span>
</span><span class='line'>    <span class="c1">#&lt;phone&gt;1234-5678&lt;/phone&gt;</span>
</span><span class='line'>    <span class="c1">#&lt;age&gt;20&lt;/age&gt;</span>
</span><span class='line'>  <span class="c1">#&lt;/linkXml&gt;</span>
</span><span class='line'><span class="c1">#&lt;/xml&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：
<a href="https://richonrails.com/articles/outputting-xml-using-ruby-on-rails">Outputting XML Using Ruby on Rails
</a>
<a href="https://ihower.tw/rails4/actionview.html">Action View - 樣板設計</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migration 中新增欄位 + 指令]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/08/migration/"/>
    <updated>2016-03-08T22:50:55+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/08/migration</id>
    <content type="html"><![CDATA[<p>當已經上線的網站，需要新的欄位，而欄位又需要有值，這時就可以直接在 <code>migration</code> 下指令去跑。</p>

<!-- more -->


<p>在已經啟動的 project 新增欄位時，可以額外下指令，去給初始值。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">migration</span> <span class="n">add_Date_Time_To_User</span>
</span></code></pre></td></tr></table></div></figure>


<h1>execute</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AddDateTimeToUser</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">up</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:confirmed_at</span><span class="p">,</span> <span class="ss">:datetime</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">execute</span><span class="p">(</span><span class="s2">&quot;UPDATE users SET confirmed_at = NOW()&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">down</span>
</span><span class='line'>    <span class="n">remove_columns</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:confirmed_at</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 <code>migration</code> 重算 <code>counter cache</code></p>

<p><a href="http://mgleon08.github.io/blog/2015/12/20/counter-cache/">counter cache</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AddPostsCountToTopic</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:topics</span><span class="p">,</span> <span class="ss">:posts_count</span><span class="p">,</span> <span class="ss">:integer</span><span class="p">,</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">Topic</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="no">Topic</span><span class="o">.</span><span class="n">reset_counters</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="ss">:posts</span><span class="p">)</span> <span class="c1"># 全部重算一次</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="https://ihower.tw/rails4/migrations.html">Active Record - 資料庫遷移(Migration)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Instance_eval & Class_eval 自己加 Method!]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/08/instance-eval-class-eval/"/>
    <updated>2016-03-08T22:46:28+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/08/instance-eval-class-eval</id>
    <content type="html"><![CDATA[<p>有時候會發現有些 object，沒有設定 setter &amp; getter ，剛好又需要用到，這時就可以派上用場拉。</p>

<!-- more -->


<h1>instance_eval &amp; class_eval</h1>

<p><code>instance_eval</code> Use ClassName.instance_eval to define a class method (one associated with the class object but not visible to instances).</p>

<p><code>class_eval</code> Use ClassName.class_eval to define an instance method (one that applies to all of the instances of ClassName).</p>

<p>簡單的來說，就是自己定義 class or instance 的 method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">MyClass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@num</span> <span class="o">=</span> <span class="n">num</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">MyClass</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="no">MyClass</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>錯誤，因為沒有 getter or setter methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">num</span>
</span><span class='line'><span class="c1">#=&gt;NoMethodError: undefined method `num&#39; for #&lt;MyClass:0x007fba5c02c858 @num=&quot;1&quot;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>自行加 instance method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">instance_eval</span> <span class="p">{</span> <span class="vi">@num</span> <span class="p">}</span>
</span><span class='line'><span class="c1">#=&gt; 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以直接定義 method，這樣就可以一直重複使用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>   <span class="k">def</span> <span class="nf">num</span>
</span><span class='line'>     <span class="vi">@num</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">num</span>
</span><span class='line'><span class="c1">#=&gt; 1</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">num</span>
</span><span class='line'><span class="c1">#NoMethodError: undefined method `num&#39; for #&lt;MyClass:0x007fba5c08e5f8 @num=&quot;2&quot;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上述指定義了 a 的 <code>instance method</code> 所以 b 會錯誤。<br/>
因此可以直接定義在 <code>class instance</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">MyClass</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">num</span>
</span><span class='line'>      <span class="vi">@num</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">num</span>
</span><span class='line'><span class="c1">#=&gt; 1</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">num</span>
</span><span class='line'><span class="c1">#=&gt; 2</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="http://web.stanford.edu/~ouster/cgi-bin/cs142-winter15/classEval.php">Understanding class_eval and instance_eval</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[有什麼事，就問 Ruby 吧!]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/08/ask-ruby/"/>
    <updated>2016-03-08T22:43:33+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/08/ask-ruby</id>
    <content type="html"><![CDATA[<p>ruby 有趣的事，什麼都可以問它XD</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#問 a 的方法有哪些</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">methods</span>
</span><span class='line'><span class="c1">#=&gt; [:inspect, :to_s, :to_a, :to_h, :to_ary, :frozen?, :==, :eql?, :hash...]</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#問它是否有這個方法</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">respond_to?</span> <span class="ss">:to_s</span>
</span><span class='line'><span class="c1">#=&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#問它的 class 是什麼</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; Array</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#問爸爸的class 是什麼</span>
</span><span class='line'><span class="nb">Array</span><span class="o">.</span><span class="n">superclass</span>  <span class="o">=&gt;</span> <span class="no">Object</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#直接列出祖宗十八代</span>
</span><span class='line'><span class="nb">Array</span><span class="o">.</span><span class="n">ancestors</span>
</span><span class='line'><span class="c1">#=&gt; [Array, JSON::Ext::Generator::GeneratorMethods::Array, Enumerable, Object, ActiveSupport::Dependencies::Loadable, PP::ObjectMixin, JSON::Ext::Generator::GeneratorMethods::Object, Kernel, BasicObject]</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Double Colon(::) 是啥? 能吃嗎？]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/08/double-colon/"/>
    <updated>2016-03-08T22:42:03+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/08/double-colon</id>
    <content type="html"><![CDATA[<p>在 ruby 中常常會看到各種符號， 像是 <code>::</code> 在 ruby 就像是 <code>namespace</code> 的感覺。<br/>
<code>::</code> 加在最前面，就是會去參照最上面的 <code>namespace</code>。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">MR_COUNT</span> <span class="o">=</span> <span class="mi">0</span>        <span class="c1"># constant defined on main Object class</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="no">MR_COUNT</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="o">::</span><span class="no">MR_COUNT</span> <span class="o">=</span> <span class="mi">1</span>    <span class="c1"># set global count to 1</span>
</span><span class='line'>  <span class="no">MR_COUNT</span> <span class="o">=</span> <span class="mi">2</span>      <span class="c1"># set local count to 2</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">puts</span> <span class="no">MR_COUNT</span>       <span class="c1"># this is the global constant</span>
</span><span class='line'><span class="nb">puts</span> <span class="no">Foo</span><span class="o">::</span><span class="no">MR_COUNT</span>  <span class="c1"># this is the local &quot;Foo&quot; constant</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="c1"># We may not know about this in real big apps</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Rails</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Engine</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Engine1</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Engine</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Engine2</span> <span class="o">&lt;</span> <span class="o">::</span><span class="no">Rails</span><span class="o">::</span><span class="no">Engine</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Foo</span><span class="o">::</span><span class="no">Engine1</span><span class="o">.</span><span class="n">superclass</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="no">Foo</span><span class="o">::</span><span class="no">Rails</span><span class="o">::</span><span class="no">Engine</span> <span class="c1"># not what we want</span>
</span><span class='line'>
</span><span class='line'><span class="no">Foo</span><span class="o">::</span><span class="no">Engine2</span><span class="o">.</span><span class="n">superclass</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Engine</span> <span class="c1"># correct</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="http://blog.eddie.com.tw/2015/04/19/namespace/">Ruby 語法放大鏡之「有時候會看到有兩個冒號寫法是什麼意思?」</a><br/>
<a href="http://stackoverflow.com/questions/4819312/double-colons-before-class-names-in-ruby">Double colons before class names in Ruby?</a><br/>
<a href="http://stackoverflow.com/questions/10482772/rubys-double-colon-operator-usage-differences">Ruby&rsquo;s double colon (::) operator usage differences</a><br/>
<a href="https://cbabhusal.wordpress.com/2015/03/26/ruby-ruby-dot-and-double-colon-operators/">Ruby : Ruby dot “.” and double Colon “::” Operators</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Enum 做選項]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/08/enum/"/>
    <updated>2016-03-08T22:39:02+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/08/enum</id>
    <content type="html"><![CDATA[<p>可將多的選項的欄位，用 interger 來儲存，在列舉出來。<br/>
好處是之後要更改欄位名稱，就可以直接更改相對應的值，就不用特別去資料庫更改。</p>

<!-- more -->


<h3>設定</h3>

<p>注意要 enum 的欄位必須是 <code>integer</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>t.integer gender</span></code></pre></td></tr></table></div></figure>


<p>model</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">enum</span> <span class="ss">gender</span><span class="p">:</span><span class="o">[</span><span class="ss">:male</span><span class="p">,</span> <span class="ss">:female</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">genders</span>
</span><span class='line'><span class="c1">#=&gt;{&quot;male&quot;=&gt;0, &quot;female&quot;=&gt;1}</span>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">keys</span>
</span><span class='line'><span class="c1">#=&gt;[&quot;male&quot;, &quot;female&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">gender</span>
</span><span class='line'><span class="c1">#=&gt;&quot;male&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">male?</span>
</span><span class='line'><span class="c1">#=&gt; true</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">female?</span>
</span><span class='line'><span class="c1">#=&gt; false</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://api.rubyonrails.org/v4.1/classes/ActiveRecord/Enum.html">api - Enum</a></p>

<p>參考文件：<br/>
<a href="https://ruby-china.org/topics/18504">Rails 4.1 的新特性（译）</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dirty Objects 追蹤 Model 的屬性是否有改變]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/08/dirty-objects/"/>
    <updated>2016-03-08T22:36:09+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/08/dirty-objects</id>
    <content type="html"><![CDATA[<p>可用來觀察，追蹤 Model 的屬性是否有改變<br/>
可在存進資料庫前，根據是否修改，來做其他動作</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">changed</span>
</span><span class='line'><span class="c1">#=&gt; []</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">changed?</span>
</span><span class='line'><span class="c1">#=&gt; false</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;abc&quot;</span>
</span><span class='line'><span class="c1">#=&gt; &quot;abc&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">changed?</span>
</span><span class='line'><span class="c1">#=&gt; true</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">changed</span>
</span><span class='line'><span class="c1">#=&gt; [&quot;title&quot;]</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">changes</span>
</span><span class='line'><span class="c1">#=&gt; {&quot;title&quot;=&gt;[&quot;ha&quot;, &quot;abc&quot;]}</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">title_was</span>
</span><span class='line'><span class="c1">#=&gt; &quot;ha&quot; 改變之前的值</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">title</span>
</span><span class='line'><span class="c1">#=&gt; &quot;asd&quot;</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">title_change</span>
</span><span class='line'><span class="c1">#=&gt; [&quot;ha&quot;, &quot;asd&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="err">儲存進資料庫，追蹤記錄就消失了。</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'><span class="c1">#=&gt; true</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">changed?</span>
</span><span class='line'><span class="c1">#=&gt; false</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">changed</span>
</span><span class='line'><span class="c1">#=&gt; []</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">changes</span>
</span><span class='line'><span class="c1">#=&gt; {}</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://api.rubyonrails.org/classes/ActiveModel/Dirty.html">api - Dirty</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Serialize & Store 將 Object 塞在欄位裡]]></title>
    <link href="http://mgleon08.github.com/blog/2016/03/08/serialize-store/"/>
    <updated>2016-03-08T22:33:45+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/03/08/serialize-store</id>
    <content type="html"><![CDATA[<p>當欄位上需要塞比較多 <code>data</code> 時就可以使用，相當便利。</p>

<!-- more -->


<h1>Serialize 序列化</h1>

<p>可以將一個 object 轉換成一個可被資料庫儲存及傳輸的純文字形態
反之讀出來就是，Deserialize 反序列。</p>

<p><code>serialize</code> 可指定欄位，在存入資料庫時，就會自動序列化成YAML格式。</p>

<h3>欄位必須是 text</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="n">types</span>
</span></code></pre></td></tr></table></div></figure>


<p>model</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">serialize</span> <span class="ss">:types</span>
</span><span class='line'>  <span class="c1">#若沒特別指定，任何形式都可存取</span>
</span><span class='line'>  <span class="n">serialize</span> <span class="ss">:types</span> <span class="nb">Array</span>
</span><span class='line'>  <span class="c1">#指定 Array，就不能塞 Hash 進去</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">profiles</span><span class="p">:</span> <span class="p">{</span><span class="ss">gender</span><span class="p">:</span> <span class="s2">&quot;male&quot;</span><span class="p">,</span> <span class="ss">phone</span><span class="p">:</span> <span class="mi">12345</span><span class="p">})</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">profiles</span>
</span><span class='line'><span class="c1">#=&gt; {gender: &quot;male&quot;, phone: 12345}</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">profiles</span><span class="o">[</span><span class="ss">:gender</span><span class="o">]</span>
</span><span class='line'><span class="c1">#=&gt; male</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>缺點是 serialize 後的欄位，就無法用 where 進行查詢。</p></blockquote>

<h1>Store</h1>

<p>上述的 profiles 可以用 <code>store</code> 來設定。
就像是一般的變數一樣。</p>

<h3>欄位必須是 text</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="n">types</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">store</span> <span class="ss">:profiles</span><span class="p">,</span> <span class="ss">:accessors</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:gender</span><span class="p">,</span> <span class="ss">:phone</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">gender</span><span class="p">:</span> <span class="s2">&quot;male&quot;</span><span class="p">,</span> <span class="ss">phone</span><span class="p">:</span> <span class="mi">12345</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">profiles</span>
</span><span class='line'><span class="c1">#=&gt; {:gender =&gt; &quot;male&quot;, :phone =&gt; 12345}</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">gender</span>
</span><span class='line'><span class="c1">#=&gt; &quot;male&quot;</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">phone</span>
</span><span class='line'><span class="c1">#=&gt; 12345</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://api.rubyonrails.org/classes/ActiveRecord/Base.html#M001799">api - serialize</a><br/>
<a href="http://apidock.com/rails/ActiveRecord/Base/serialize/class">apidock - serialize</a><br/>
<a href="http://api.rubyonrails.org/classes/ActiveRecord/Store.html">api - Store</a></p>

<p>參考文件：<br/>
<a href="https://ihower.tw/rails4/activerecord-others.html">ActiveRecord - 進階功能</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 中的 Include Extend Require]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/24/include-extend-require/"/>
    <updated>2016-02-24T21:49:30+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/24/include-extend-require</id>
    <content type="html"><![CDATA[<p>常常搞不清楚，<code>include</code>，<code>extend</code>，<code>require</code>這幾個差異。</p>

<!-- more -->


<h1>module</h1>

<p><code>include</code> &amp; <code>extend</code> 主要是將 <code>module</code> 的方法，可以繼承給 <code>class</code> 或 <code>instance</code> 使用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;Hello!&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">hello</span>
</span><span class='line'><span class="c1"># =&gt; `&lt;main&gt;&#39;: undefined method `hello&#39; for #&lt;Bar:0x007fd815939618&gt; (NoMethodError)</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Bar</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">hello</span>
</span><span class='line'><span class="c1"># =&gt; Hello!</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">hello</span>
</span><span class='line'><span class="c1"># =&gt; Hello!</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Bar</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">hello</span>
</span><span class='line'><span class="c1"># =&gt; `&lt;main&gt;&#39;: undefined method `hello&#39; for #&lt;Bar:0x007fd815939618&gt; (NoMethodError)</span>
</span></code></pre></td></tr></table></div></figure>


<p>由此可知</p>

<ul>
<li><code>extend</code>  增加 class_methods</li>
<li><code>include</code> 增加 instance_methods</li>
</ul>


<h3>也可以用 include 導入 module 的 method</h3>

<p><code>module.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">bar</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>test.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;./module&#39;</span>
</span><span class='line'><span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar</span><span class="p">(</span><span class="s1">&#39;hello&#39;</span><span class="p">)</span>
</span><span class='line'><span class="ow">or</span>
</span><span class='line'><span class="no">Foo</span><span class="o">.</span><span class="n">bar</span><span class="p">(</span><span class="s1">&#39;hello&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>require</h1>

<p>在 ruby 中，一開始用有很多 <code>method</code> 可以使用，是因為 ruby 將一些常用的都先載入進來。</p>

<ul>
<li><a href="http://ruby-doc.org/core-2.3.0/">core</a></li>
</ul>


<p>而其他比較不常用的 method 就必須在要使用的時候，先 require 進來才可以。</p>

<ul>
<li><a href="http://ruby-doc.org/stdlib-2.3.0/">std</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;fileutils&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以載入自己設定好的檔案，通常設定在 <code>/lib/test.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;test&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>不過記得路徑的問題，可以使用 <code>require_relative</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;test&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果是放在資料夾底下的話 <code>/lib/file/test.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;file/test&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://ruby-doc.org/core-2.3.0/">ruby-doc</a></p>

<p>參考文件：<br/>
<a href="http://blog.eddie.com.tw/2015/03/24/class-and-module/">Ruby 語法放大鏡之「類別跟模組有什麼不一樣?」</a> <br/>
<a href="http://motion-express.com/blog/20150407-ruby-require-require-relative-load">require、require_relative是什麼意思？差在哪？</a><br/>
<a href="https://ihower.tw/rails4/environments-and-bundler.html">環境設定與Bundle</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Slack 通知大小事]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/24/slack-notifier/"/>
    <updated>2016-02-24T20:24:11+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/24/slack-notifier</id>
    <content type="html"><![CDATA[<p>透過 slack 來通知程式上的人任何事情，相當方便。</p>

<!-- more -->


<h1>申請 webhook</h1>

<ul>
<li>到 slack 網站，根據想發送訊息的 channel 申請一個 <a href="https://api.slack.com/incoming-webhooks#putting_it_all_together">Incoming Webhooks</a></li>
</ul>


<blockquote><p>Incoming Webhooks 傳到 slack<br/>
Outgoing Webhooks slack 傳出去</p></blockquote>

<ul>
<li>申請好了會給一串 <code>url</code></li>
</ul>


<h1>安裝</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;slack-notifier&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">notify_system_manager_by_slack</span><span class="p">(</span><span class="n">parameter</span><span class="p">)</span>
</span><span class='line'>  <span class="n">notifier</span> <span class="o">=</span> <span class="no">Slack</span><span class="o">::</span><span class="no">Notifier</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;WebHookUrl&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">notifier</span><span class="o">.</span><span class="n">username</span> <span class="o">=</span> <span class="s2">&quot;[Sidekiq] Error Notifier&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">message</span>  <span class="o">=</span> <span class="s2">&quot;Time:&quot;</span>    <span class="o">+</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="p">)</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">message</span> <span class="o">+=</span> <span class="s2">&quot;Message:&quot;</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">parameter</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">setting</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">text</span><span class="p">:</span>  <span class="n">message</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">color</span><span class="p">:</span> <span class="s2">&quot;danger&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">notifier</span><span class="o">.</span><span class="n">ping</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">attachments</span><span class="p">:</span> <span class="o">[</span><span class="n">setting</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>再通知加上其他訊息</h1>

<p>可以在 slack 上面加上顏色，訊息，或圖片等等的<br/>
都可以在網站上找到 <a href="https://api.slack.com/docs/attachments">Attachments</a></p>

<h1>錯誤通知</h1>

<p>如果希望有錯誤能夠通知你，可以用第三方的工具 + slack 更加方便</p>

<p><a href="https://rollbar.com/">Rollbar</a><br/>
<a href="https://getsentry.com/welcome/">Sentry</a></p>

<p>gem：<br/>
<a href="https://github.com/stevenosloan/slack-notifier">slack-notifier</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Sidekiq 處理 Background Job]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/23/sidekiq/"/>
    <updated>2016-02-23T21:06:26+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/23/sidekiq</id>
    <content type="html"><![CDATA[<p>當遇到一些需要等待比較長時間處理的動作時，就可以將這工作，丟到背景去處理<br/>
給用戶們更好的時候體驗。</p>

<!-- more -->


<h1>Sidekiq:</h1>

<h3>Pros</h3>

<ul>
<li>runs thread per worker (uses much less memory);</li>
<li>less forking (works faster);</li>
<li>more options out of the box.</li>
</ul>


<h3>Cons</h3>

<ul>
<li>[huge] requires thread-safety of your code and all dependencies. If you run thread-unsafe code with threads, you&rsquo;re asking for trouble;</li>
<li>works on some rubies better than others (jruby and rubinius are recommended, efficiency on MRI is decreased due to GVL (global VM lock)).</li>
</ul>


<blockquote><p>每個 worker 是一個 thread，要注意 thread-safety 的問題<br/>
Your worker code does need to be thread-safe.</p></blockquote>

<p>一台機器，只能有一個 redis server，但是 redis 可以有多個 database<br/>
redis 的 database 可以共享給不同 server shared</p>

<h1>Redis</h1>

<p>Sidekiq是搭配Redis來儲存Job，而Redis是一套高性能的 <code>In-Memory Key-Value</code> 儲存系統。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install redis</span></code></pre></td></tr></table></div></figure>


<p><a href="http://redis.io/">redis</a></p>

<h1>安裝</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;sidekiq&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;sinatra&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">nil</span> <span class="c1">#用來呈現 Web UI</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<h3>Active Job</h3>

<p>可用 ruby 內建的 Active Job，來產生 job。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">job</span> <span class="nb">test</span>
</span><span class='line'><span class="c1"># =&gt; app/jobs/test_job.rb</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定在 <code>config/application.rb</code><br/>
或是各個環境去做設定 <code>config/environments/development.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_job</span><span class="o">.</span><span class="n">queue_adapter</span> <span class="o">=</span> <span class="ss">:sidekiq</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>app/jobs/test_job.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TestJob</span> <span class="o">&lt;</span> <span class="no">ActiveJob</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">queue_as</span> <span class="ss">:default</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">perform</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Do something later</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Worker</h3>

<p>或是直接用 sidekiq 的 worker。</p>

<p><code>app/works/test_worker.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TestWorker</span> <span class="o">&lt;</span> <span class="no">ActiveJob</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Sidekiq</span><span class="o">::</span><span class="no">Worker</span>
</span><span class='line'>  <span class="n">sidekiq_options</span> <span class="ss">:queue</span> <span class="o">=&gt;</span> <span class="ss">:default</span><span class="p">,</span> <span class="ss">:retry</span> <span class="o">=&gt;</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">perform</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Do something later</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>other</h3>

<p>設定 <code>redis</code> client 和 server</p>

<ul>
<li>將 worker push 到哪個 redis</li>
<li>從哪個 redis pull worker 下來</li>
</ul>


<p><code>config/sidekiq.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">redis_server</span> <span class="o">=</span> <span class="s1">&#39;127.0.0.1&#39;</span>
</span><span class='line'><span class="n">redis_port</span> <span class="o">=</span> <span class="mi">6379</span>
</span><span class='line'><span class="n">redis_db_num</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">redis_namespace</span> <span class="o">=</span> <span class="s2">&quot;sidekiq_moai_</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Sidekiq</span><span class="o">.</span><span class="n">configure_server</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">redis</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">url</span><span class="p">:</span> <span class="s2">&quot;redis://</span><span class="si">#{</span><span class="n">redis_server</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">redis_port</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">redis_db_num</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">namespace</span><span class="p">:</span> <span class="n">redis_namespace</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Sidekiq</span><span class="o">.</span><span class="n">configure_client</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">redis</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">url</span><span class="p">:</span> <span class="s2">&quot;redis://</span><span class="si">#{</span><span class="n">redis_server</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">redis_port</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">redis_db_num</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">namespace</span><span class="p">:</span> <span class="n">redis_namespace</span><span class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="mi">25</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>config/initializers/sidekiq.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">:concurrency</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="ss">:pidfile</span><span class="p">:</span> <span class="o">.</span><span class="n">/tmp</span><span class="o">/</span><span class="n">pids</span><span class="o">/</span><span class="n">sidekiq</span><span class="o">.</span><span class="n">pid</span>
</span><span class='line'><span class="ss">:logfile</span><span class="p">:</span> <span class="o">.</span><span class="n">/log</span><span class="o">/</span><span class="n">sidekiq</span><span class="o">.</span><span class="n">log</span>
</span><span class='line'><span class="ss">:queues</span><span class="p">:</span>
</span><span class='line'>  <span class="o">-</span> <span class="n">default</span>
</span><span class='line'>  <span class="o">-</span> <span class="o">[</span><span class="n">myqueue</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span>
</span><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">:concurrency</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="ss">staging</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">:concurrency</span><span class="p">:</span> <span class="mi">10</span>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">:concurrency</span><span class="p">:</span> <span class="mi">20</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>config/routes.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sidekiq/web&#39;</span>
</span><span class='line'><span class="n">mount</span> <span class="no">Sidekiq</span><span class="o">::</span><span class="no">Web</span> <span class="o">=&gt;</span> <span class="s1">&#39;/sidekiq&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>啟動</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">sidekiq</span>
</span><span class='line'><span class="c1">#會自動去找 sidekiq.yml</span>
</span><span class='line'>
</span><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">sidekiq</span> <span class="o">-</span><span class="n">C</span> <span class="o">.</span><span class="n">/config</span><span class="o">/</span><span class="n">sidekiq</span><span class="o">.</span><span class="n">yml</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">sidekiq</span> <span class="o">-</span><span class="n">q</span> <span class="n">default</span> <span class="o">-</span><span class="n">c</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#-c, --concurrency INT            processor threads to use</span>
</span><span class='line'><span class="c1">#-d, --daemon                     Daemonize process</span>
</span><span class='line'><span class="c1">#-e, --environment ENV            Application environment</span>
</span><span class='line'><span class="c1">#-g, --tag TAG                    Process tag for procline</span>
</span><span class='line'><span class="c1">#-i, --index INT                  unique process index on this machine</span>
</span><span class='line'><span class="c1">#-q, --queue QUEUE[,WEIGHT]       Queues to process with optional weights</span>
</span><span class='line'><span class="c1">#-r, --require [PATH|DIR]         Location of Rails application with workers or file to require</span>
</span><span class='line'><span class="c1">#-t, --timeout NUM                Shutdown timeout</span>
</span><span class='line'><span class="c1">#-v, --verbose                    Print more verbose output</span>
</span><span class='line'><span class="c1">#-C, --config PATH                path to YAML config file</span>
</span><span class='line'><span class="c1">#-L, --logfile PATH               path to writable logfile</span>
</span><span class='line'><span class="c1">#-P, --pidfile PATH               path to pidfile</span>
</span><span class='line'><span class="c1">#-V, --version                    Print version and exit</span>
</span><span class='line'><span class="c1">#-h, --help                       Show help</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#job</span>
</span><span class='line'><span class="no">TestJob</span><span class="o">.</span><span class="n">perform_later</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#worker</span>
</span><span class='line'><span class="no">TesrWork</span><span class="o">.</span><span class="n">perform_async</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#建議參數不要直接塞 object</span>
</span></code></pre></td></tr></table></div></figure>


<h1>備註</h1>

<p>清除 Queue 中的 Job，避免Queue中存放了太多蠢蠢欲動的僵屍Job，一方面也要防止耗費大量時間的Job再起浪費資源。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">redis</span><span class="o">-</span><span class="n">cli</span> <span class="o">-</span><span class="n">n</span> <span class="n">flushdb</span>
</span><span class='line'><span class="n">redis</span><span class="o">-</span><span class="n">cli</span> <span class="n">flushall</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://edgeguides.rubyonrails.org/active_job_basics.html">Active Job Basics</a><br/>
<a href="http://rails.ruby.tw/active_job_basics.html">Active Job Basics 中文</a></p>

<p>參考文件：  <br/>
<a href="http://michaelhsu.tw/2013/07/04/server/#Web_server_/_Application_server_%E5%82%BB%E5%82%BB%E5%88%86%E4%B8%8D%E6%B8%85%E6%A5%9A_%EF%BC%9F">Web server / Application server 傻傻分不清楚 ？</a>
<a href="http://aftcast.pixnet.net/blog/post/23786004-thread-safe%E7%9A%84%E7%90%86%E8%A7%A3%E8%88%87%E5%88%86%E6%9E%90">Thread-Safe的理解與分析</a><br/>
<a href="http://stackoverflow.com/questions/18892667/sharing-sidekiq-between-two-apps">Sharing Sidekiq between two apps</a><br/>
<a href="https://codedecoder.wordpress.com/2014/02/27/multiple-project-single-sidekiq-daemon-instance-one-machine/">multiple project using sidekiq on same machine</a><br/>
<a href="http://blog.nicolas-brousse.fr/articles/2015-07-15-test-1--sidekiq-on-separate-servers/">Use Sidekiq on a separate servers</a> <br/>
<a href="https://ruby-china.org/topics/18853">Sidekiq 异常的监控</a>
<a href="https://ruby-china.org/topics/23176">使用 Monit＋Mina 监控服务器</a><br/>
<a href="http://code.oneapm.com/ruby/2015/05/26/test-rails-mailer/">【译】使用Rails 4.2+ 测试异步邮件系统</a><br/>
<a href="http://www.cnblogs.com/richard1234/p/3829074.html">Sidekiq in Rails</a><br/>
<a href="http://ruby-journal.com/how-to-integrate-sidekiq-with-activejob/">How to Integrate Sidekiq With ActiveJob</a></p>

<p>gem：<br/>
<a href="https://github.com/mperham/sidekiq">sidekiq</a><br/>
<a href="https://github.com/utgarda/sidekiq-status">sidekiq-status</a><br/>
<a href="https://github.com/mhfs/sidekiq-failures">sidekiq-failures</a> <br/>
<a href="https://github.com/smartinez87/exception_notification">exception_notification</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM and Gemsets Ruby版本控制]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/15/rvm-and-gemsets/"/>
    <updated>2016-02-15T21:12:09+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/15/rvm-and-gemsets</id>
    <content type="html"><![CDATA[<p>好用的工具，可以輕鬆的切換 ruby 版本!</p>

<!-- more -->


<h1>安裝</h1>

<p><a href="https://rvm.io/">rvm</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\curl -sSL https://get.rvm.io | bash -s stable</span></code></pre></td></tr></table></div></figure>


<h3>安裝 ruby 版本</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install 2.2.3</span></code></pre></td></tr></table></div></figure>


<h3>使用版本</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm use 2.2.3</span></code></pre></td></tr></table></div></figure>


<h3>目前有的版本</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm list</span></code></pre></td></tr></table></div></figure>


<h3>移除</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm remove 2.2.3</span></code></pre></td></tr></table></div></figure>


<h3>看本機是否使用 rvm 還是本機</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>which ruby</span></code></pre></td></tr></table></div></figure>


<h1>設定</h1>

<p>安裝好之後，基本上就是一個全新的，gem 都要全部重新安裝<br/>
記得先去安裝 <code>bundler</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler</span></code></pre></td></tr></table></div></figure>


<p>之後再去專案底下輸入 <code>bundle</code> 就會重新安裝了</p>

<h1>Gemset</h1>

<p>在該版本的 ruby 下，在區分要安裝哪些 gem</p>

<h3>目前有的 gemset</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset list</span></code></pre></td></tr></table></div></figure>


<h3>新增</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset create rails4.2.4</span></code></pre></td></tr></table></div></figure>


<h3>使用</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset use rails4.2.4</span></code></pre></td></tr></table></div></figure>


<h3>清空</h3>

<p>清空裡面的 gem ，但保留 gemset</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset empty rails4.2.4</span></code></pre></td></tr></table></div></figure>


<h3>刪除</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm gemset delete rails4.2.4</span></code></pre></td></tr></table></div></figure>


<h1>Bonus</h1>

<h3>直接換兩個</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm 2.2.3@rails4.2.4
</span><span class='line'># ruby 和 gemset 一起切換</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="https://rvm.io/">rvm</a></p>

<p>參考文件：<br/>
<a href="http://motion-express.com/blog/20141005-ruby-rvm-gemset">Ruby gem 想要一機裝多個版本？RVM來幫你！</a><br/>
<a href="http://blog.eddie.com.tw/2011/04/08/rvm-and-gemsets/">RVM and Gemsets</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Yaml 來寫文件, 設定檔]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/yaml/"/>
    <updated>2016-02-07T16:08:29+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/yaml</id>
    <content type="html"><![CDATA[<p>yaml 格式經常會在 rails 裡看到，像是 config 裡的 database.yml，或 en.yml<br/>
這種格式經常拿來寫一些固定的常數。</p>

<p>因此也可以拿來設定網頁中固定的像是選單之類的文件。</p>

<!-- more -->


<p>自訂 yaml</p>

<p><code>sample.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">option</span><span class="p">:</span>
</span><span class='line'>  <span class="o">-</span> <span class="ss">a</span><span class="p">:</span>  <span class="n">foo</span>
</span><span class='line'>    <span class="ss">a1</span><span class="p">:</span> <span class="n">bar</span>
</span><span class='line'>  <span class="o">-</span> <span class="ss">b</span><span class="p">:</span>  <span class="n">foo</span>
</span><span class='line'>    <span class="ss">b1</span><span class="p">:</span> <span class="n">bar</span>
</span><span class='line'>  <span class="o">-</span> <span class="ss">c</span><span class="p">:</span>  <span class="n">foo</span>
</span><span class='line'>    <span class="ss">c1</span><span class="p">:</span> <span class="n">bar</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:</code> hash<br/>
<code>-</code> array</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;yaml&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">SAMPLE</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s1">&#39;../sample.yml&#39;</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">)))</span><span class="o">.</span><span class="n">freeze</span>
</span><span class='line'>
</span><span class='line'><span class="ow">or</span>
</span><span class='line'>
</span><span class='line'><span class="no">SAMPLE</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load_file</span><span class="p">(</span><span class="s1">&#39;sample.yml&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#=&gt; {&quot;option&quot;=&gt;</span>
</span><span class='line'><span class="c1">#        [</span>
</span><span class='line'><span class="c1">#            {&quot;a&quot;=&gt;&quot;foo&quot;, &quot;a1&quot;=&gt;&quot;bar&quot;}, </span>
</span><span class='line'><span class="c1">#            {&quot;b&quot;=&gt;&quot;foo&quot;, &quot;b1&quot;=&gt;&quot;bar&quot;}, </span>
</span><span class='line'><span class="c1">#            {&quot;c&quot;=&gt;&quot;foo&quot;, &quot;c1&quot;=&gt;&quot;bar&quot;}</span>
</span><span class='line'><span class="c1">#        ]</span>
</span><span class='line'><span class="c1">#    }</span>
</span></code></pre></td></tr></table></div></figure>


<h1>設定檔</h1>

<p>再 <code>/config</code> 底下建立 yml &amp; yml.example<br/>
並將 yml 的放進 <code>.gitignore</code> ，避免敏感資訊，傳到 github 上面</p>

<p>上 production 的時候，再將 example 的複製過來，將密碼改成 production 的即可。</p>

<p><code>/config/fb.yml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">app_id</span><span class="p">:</span> <span class="n">xxxxxxxxxxxxxxxx</span>
</span><span class='line'>  <span class="ss">secret</span><span class="p">:</span> <span class="n">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
</span><span class='line'>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">app_id</span><span class="p">:</span> <span class="n">xxxxxxxxxxxxxxxx</span>
</span><span class='line'>  <span class="ss">secret</span><span class="p">:</span> <span class="n">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後再需要的地方就可以直接使用了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">fb_config</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">config_for</span><span class="p">(</span><span class="ss">:fb</span><span class="p">)</span>
</span><span class='line'><span class="n">fb_config</span><span class="o">[</span><span class="s2">&quot;app_id&quot;</span><span class="o">]</span> <span class="c1">#=&gt; xxxxxxxxxxxxxxxx</span>
</span><span class='line'><span class="n">fb_config</span><span class="o">[</span><span class="s2">&quot;secret&quot;</span><span class="o">]</span> <span class="c1">#=&gt; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://apidock.com/rails/v4.2.1/Rails/Application/config_for">config_for</a></p>

<p>官方文件：<br/>
<a href="http://ruby-doc.org/stdlib-1.8.6/libdoc/yaml/rdoc/YAML.html">Yaml</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Marshal 來傳遞資料]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/marshal/"/>
    <updated>2016-02-07T15:44:52+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/marshal</id>
    <content type="html"><![CDATA[<p>當兩台 server 要互相傳遞資料時，都必須確保資料的正確性，因此可以透過 Marshal 解析後來傳遞。</p>

<!-- more -->


<p>一般可以用 <code>to_a</code>, <code>to_yml</code>, <code>to_s</code> 來轉成不同 <code>type</code><br/>
但這樣很可能會失真</p>

<p>因此用 Marshal 就會比較精準，並且快很多</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:a</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">,</span> <span class="no">Time</span><span class="o">.</span><span class="n">new</span><span class="o">=&gt;</span><span class="no">Class</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">Marshal</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">h</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; &quot;\x04\b{\b:\x06ai\x06I\&quot;\x06b\x06:\x06ETi\aIu:\tTime\r\xE7\x04\x1D\x80r\xB6D\xC0\a:\voffseti\x02\x80p:\tzoneI\&quot;\bCST\x06;\x06Fc\nClass&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;test.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;w&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="no">Marshal</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">h</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#在 irb 要先 exit 重開</span>
</span><span class='line'><span class="no">Marshal</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;test.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;r&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; {:a=&gt;1, &quot;b&quot;=&gt;2, Time.new=&gt;Class}</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://ruby-doc.org/core-2.2.0/Marshal.html">Marshal</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[正規表示式 Regular Expression]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/regular-expression/"/>
    <updated>2016-02-07T15:40:31+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/regular-expression</id>
    <content type="html"><![CDATA[<p>在網頁中經常要確認一些格式，像是身分證格式必須要 10 碼，開頭是大寫 A-Z ，第二個數字必須是 0 or 1，這時就能夠用 <code>Regular Expression</code> 來做判斷。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">身份證</span>
</span><span class='line'><span class="sr">/[A-Z][12]\d{8}/</span>
</span><span class='line'>
</span><span class='line'><span class="err">信箱</span>
</span><span class='line'><span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
</span><span class='line'>
</span><span class='line'><span class="err">不允許信箱中有多個點</span>
</span><span class='line'><span class="sr">/\A[\w+\-.]+@[a-z\d\-]+(\.[a-z\d\-]+)*\.[a-z]+\z/i</span>
</span></code></pre></td></tr></table></div></figure>


<h1>範例</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">regex</span> <span class="o">=</span> <span class="sr">/([A-Z])([12])\d{8}/</span>  <span class="c1">#前面兩個()起來代表是有意義的，可以連同存取起來</span>
</span><span class='line'>
</span><span class='line'><span class="n">match</span> <span class="o">=</span> <span class="s2">&quot;A123456789&quot;</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">regex</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; #&lt;MatchData &quot;A123456789&quot; 1:&quot;A&quot; 2:&quot;1&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">match</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="c1">#=&gt; &quot;A123456789&quot;</span>
</span><span class='line'><span class="n">match</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="c1">#=&gt; &quot;A&quot;</span>
</span><span class='line'><span class="n">match</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'><span class="c1">#=&gt; &quot;1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Regex quick reference</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="n">abc</span><span class="o">]</span>   <span class="c1">#A single character of: a, b, or c</span>
</span><span class='line'><span class="o">[^</span><span class="n">abc</span><span class="o">]</span>   <span class="c1">#Any single character except: a, b, or c</span>
</span><span class='line'><span class="o">[</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="o">]</span>  <span class="c1">#Any single character in the range a-z</span>
</span><span class='line'><span class="o">[</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="n">Z</span><span class="o">]</span> <span class="c1">#Any single character in the range a-z or A-Z</span>
</span><span class='line'>
</span><span class='line'><span class="o">^</span>  <span class="c1">#Start of line =&gt; /^ab/，開頭兩個有 ab 即可</span>
</span><span class='line'><span class="err">$</span>    <span class="c1">#End of line =&gt; /ab$/，後面兩個有 ab 即可</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">A</span>  <span class="c1">#Start of string</span>
</span><span class='line'><span class="p">\</span><span class="n">z</span>  <span class="c1">#End of string</span>
</span><span class='line'><span class="o">.</span>  <span class="c1">#Any single character</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">s</span> <span class="o">=</span> <span class="o">[</span> <span class="p">\</span><span class="n">r</span><span class="p">\</span><span class="n">t</span><span class="p">\</span><span class="n">n</span><span class="p">\</span><span class="n">f</span><span class="o">]</span> <span class="c1">#Any whitespace character</span>
</span><span class='line'><span class="p">\</span><span class="n">S</span> <span class="o">=</span> <span class="o">[^</span> <span class="p">\</span><span class="n">r</span><span class="p">\</span><span class="n">t</span><span class="p">\</span><span class="n">n</span><span class="p">\</span><span class="n">f</span><span class="o">]</span> <span class="c1">#Any non-whitespace character</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">d</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="o">]</span>  <span class="c1">#Any digit</span>
</span><span class='line'><span class="p">\</span><span class="n">D</span> <span class="o">=</span> <span class="o">[^</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="o">]</span>  <span class="c1">#Any non-digit</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">w</span> <span class="o">=</span> <span class="o">[</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="no">Z0</span><span class="o">-</span><span class="mi">9</span><span class="n">_</span><span class="o">]</span> <span class="c1">#Any word character (letter, number, underscore)</span>
</span><span class='line'><span class="p">\</span><span class="n">W</span> <span class="o">=</span> <span class="o">[^</span><span class="n">a</span><span class="o">-</span><span class="n">zA</span><span class="o">-</span><span class="no">Z0</span><span class="o">-</span><span class="mi">9</span><span class="n">_</span><span class="o">]</span> <span class="c1">#Any non-word character</span>
</span><span class='line'>
</span><span class='line'><span class="p">\</span><span class="n">b</span>  <span class="c1">#Any word boundary</span>
</span><span class='line'><span class="p">(</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">)</span>  <span class="c1">#Capture everything enclosed</span>
</span><span class='line'><span class="p">(</span><span class="n">a</span><span class="o">|</span><span class="n">b</span><span class="p">)</span>  <span class="c1">#a or b</span>
</span><span class='line'>
</span><span class='line'><span class="n">a?</span> <span class="c1">#Zero or one of a</span>
</span><span class='line'><span class="n">a</span><span class="o">*</span>  <span class="c1">#Zero or more of a</span>
</span><span class='line'><span class="n">a</span><span class="o">+</span>  <span class="c1">#One or more of a</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="p">{</span><span class="mi">3</span><span class="p">}</span> <span class="c1">#Exactly 3 of a</span>
</span><span class='line'><span class="n">a</span><span class="p">{</span><span class="mi">3</span><span class="p">,}</span>    <span class="c1">#3 or more of a</span>
</span><span class='line'><span class="n">a</span><span class="p">{,</span><span class="mi">6</span><span class="p">}</span>    <span class="c1">#ths most 6 of a</span>
</span><span class='line'><span class="n">a</span><span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">}</span>    <span class="c1">#Between 3 and 6 of a</span>
</span><span class='line'>
</span><span class='line'><span class="ss">options</span><span class="p">:</span>
</span><span class='line'><span class="n">i</span> <span class="c1">#case insensitive </span>
</span><span class='line'><span class="n">m</span> <span class="c1">#make dot match newlines </span>
</span><span class='line'><span class="n">x</span> <span class="c1">#ignore whitespace in regex </span>
</span><span class='line'><span class="n">o</span> <span class="c1">#perform #{...} substitutions only once</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Sed 工具</h1>

<p><a href="http://dywang.csie.cyut.edu.tw/dywang/linuxProgram/node36.html">sed 工具</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sed</span> <span class="p">(</span><span class="n">stream</span> <span class="n">editor</span><span class="p">)</span> <span class="err">可以分析</span> <span class="no">Standard</span> <span class="no">Input</span> <span class="p">(</span><span class="no">STDIN</span><span class="p">)</span> <span class="err">的資料，進行取代、刪除、新增、擷取特定行等處理後，再輸出到</span> <span class="n">standrad</span> <span class="n">out</span> <span class="p">(</span><span class="no">STDOUT</span><span class="p">)</span><span class="err">。</span>
</span><span class='line'><span class="n">sed</span> <span class="err">指令</span>
</span><span class='line'><span class="o">[</span><span class="n">root</span><span class="vi">@linux</span> <span class="o">~]</span><span class="c1"># sed [-nefr] [動作]</span>
</span><span class='line'>
</span><span class='line'><span class="err">選項：</span>
</span><span class='line'><span class="o">-</span><span class="n">n</span>  <span class="err">：使用安靜</span> <span class="p">(</span><span class="n">silent</span><span class="p">)</span> <span class="err">模式。在一般</span> <span class="n">sed</span> <span class="err">的用法中，所有來自</span> <span class="no">STDIN</span>
</span><span class='line'>      <span class="err">的資料一般都會被列出到螢幕上。但如果加上</span> <span class="o">-</span><span class="n">n</span> <span class="err">參數後，則只有經過</span>
</span><span class='line'>      <span class="n">sed</span> <span class="err">特殊處理的那一行</span><span class="p">(</span><span class="err">或者動作</span><span class="p">)</span><span class="err">才會被列出來。</span>
</span><span class='line'><span class="o">-</span><span class="n">e</span>  <span class="err">：直接在指令列模式上進行</span> <span class="n">sed</span> <span class="err">的動作編輯；</span>
</span><span class='line'><span class="o">-</span><span class="n">f</span>  <span class="err">：</span><span class="o">-</span><span class="n">f</span> <span class="n">filename</span> <span class="err">可以執行</span> <span class="n">filename</span> <span class="err">內的</span> <span class="n">sed</span> <span class="err">動作；</span>
</span><span class='line'><span class="o">-</span><span class="n">r</span>  <span class="err">：</span><span class="n">sed</span> <span class="err">的動作支援的是延伸型正規表示法的語法。</span><span class="p">(</span><span class="err">預設是基礎正規表示法語法</span><span class="p">)</span>
</span><span class='line'><span class="o">-</span><span class="n">i</span>  <span class="err">：直接修改讀取的檔案內容，而不是由螢幕輸出。</span>
</span><span class='line'>
</span><span class='line'><span class="err">動作說明：</span>  <span class="o">[</span><span class="n">n1</span><span class="o">[</span><span class="p">,</span><span class="n">n2</span><span class="o">]]</span><span class="n">function</span>
</span><span class='line'><span class="n">n1</span><span class="p">,</span> <span class="n">n2</span> <span class="err">：選擇進行動作的行數，例如，『</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="o">[</span><span class="err">動作行為</span><span class="o">]</span> <span class="err">』</span>
</span><span class='line'>
</span><span class='line'><span class="n">function</span><span class="err">：</span>
</span><span class='line'><span class="n">a</span>   <span class="err">：新增，</span> <span class="n">a</span> <span class="err">的後面可以接字串，這些字串會在目前的下一行出現。</span>
</span><span class='line'><span class="n">c</span>   <span class="err">：取代，</span> <span class="n">c</span> <span class="err">的後面可以接字串，這些字串可以取代</span> <span class="n">n1</span><span class="p">,</span><span class="n">n2</span> <span class="err">之間的行。</span>
</span><span class='line'><span class="n">d</span>   <span class="err">：刪除，</span> <span class="n">d</span> <span class="err">後面通常不接任何字串；</span>
</span><span class='line'><span class="n">i</span>   <span class="err">：插入，</span> <span class="n">i</span> <span class="err">的後面可以接字串，這些字串會在目前的上一行出現；</span>
</span><span class='line'><span class="nb">p</span>   <span class="err">：列印，將某個選擇的資料印出。通常</span> <span class="nb">p</span> <span class="err">會與參數</span> <span class="n">sed</span> <span class="o">-</span><span class="n">n</span> <span class="err">一起運作。</span>
</span><span class='line'><span class="n">s</span>   <span class="err">：取代，</span><span class="n">s</span> <span class="err">的動作可以搭配正規表示法。例如</span> <span class="mi">1</span><span class="p">,</span><span class="mi">20</span><span class="n">s</span><span class="o">/</span><span class="n">old</span><span class="o">/</span><span class="kp">new</span><span class="o">/</span><span class="n">g</span> <span class="err">。</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="https://atedev.wordpress.com/2007/11/23/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%A4%BA%E5%BC%8F-regular-expression/">正規表示式 Regular Expression</a></p>

<p>練習：<br/>
<a href="http://rubular.com/">Rubular</a><br/>
<a href="https://regexcrossword.com/">Regex Cross­word</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Ruby 做網頁爬蟲]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/ruby-crawler/"/>
    <updated>2016-02-07T15:21:59+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/ruby-crawler</id>
    <content type="html"><![CDATA[<p>網頁爬蟲是一個蠻常聽到的名詞，簡單的來說就是可以透過程式，去分析網站頁面，將想要的資訊抓下來!</p>

<!-- more -->


<h3>wget</h3>

<p>command line 下載檔案的指令<br/>
mac 本身沒有內建要另外安裝。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install wget</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;open-uri&quot;</span> <span class="c1">#open-uri 把一個網頁當一個檔案來打開 stb-lib</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;nokogiri&quot;</span> <span class="c1">#解析 html gem</span>
</span><span class='line'>
</span><span class='line'><span class="n">html</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;http://ezprice.com.tw/&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</span><span class='line'><span class="n">ans</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s1">&#39;img&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="o">.</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;src&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#將相對路徑改成絕對路徑</span>
</span><span class='line'><span class="n">temp_ans</span> <span class="o">=</span> <span class="n">ans</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">|</span><span class="n">url</span><span class="o">|</span> <span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^http/</span><span class="p">)</span> <span class="p">?</span> <span class="n">url</span> <span class="p">:</span> <span class="s2">&quot;http://ezprice.com.tw/</span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#透過 wget 下載檔案到目前的資料夾</span>
</span><span class='line'><span class="n">temp_ans</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">full_url</span><span class="o">|</span>
</span><span class='line'>  <span class="sb">`wget </span><span class="si">#{</span><span class="n">full_url</span><span class="si">}</span><span class="sb">`</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>open-uri</code> 只能一個網址<br/>
<code>curb</code> 比較豐富</p>

<p>官方文件：<br/>
<a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/open-uri/rdoc/index.html">open-uri</a><br/>
<a href="http://www.nokogiri.org/">nokogiri</a></p>

<p>參考文件：<br/>
<a href="https://www.youtube.com/watch?v=6XUnYRB0Zpo&amp;list=PLJ6M-k9dQEQ3VsyOZQwjZ5GdjaLJH3eB_">RailsFun</a><br/>
<a href="http://tonytonyjan.net/slides/2014-07-03-simple-crawler/">Ruby Crawler 輕輕鬆鬆做個 Ruby 爬蟲機器人</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Ruby 來 Calling Shell Commands]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/callsystem/"/>
    <updated>2016-02-07T14:31:31+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/callsystem</id>
    <content type="html"><![CDATA[<p>可以直接透過 ruby 來執行 commands 的指令。</p>

<!-- more -->


<ul>
<li>Kernel#`, commonly called backticks – <code>cmd</code></li>
</ul>


<p>Returns the result of the shell command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sb">`echo &#39;hi&#39;`</span>
</span><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sb">`</span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="sb">`</span>
</span><span class='line'><span class="n">value</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; String 回傳結果</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Built-in syntax, <code>%x( cmd )</code></li>
</ul>


<p>Returns the result of the shell command, just like the backticks.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sx">%x( echo &#39;hi&#39; )</span>
</span><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="sx">%x[ </span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="sx"> ]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Kernel# <code>system</code></li>
</ul>


<p>Return: true if the command was found and ran successfully, false otherwise</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">wasGood</span> <span class="o">=</span> <span class="nb">system</span><span class="p">(</span> <span class="s2">&quot;echo &#39;hi&#39;&quot;</span> <span class="p">)</span>
</span><span class='line'><span class="n">wasGood</span> <span class="o">=</span> <span class="nb">system</span><span class="p">(</span> <span class="n">cmd</span> <span class="p">)</span>
</span><span class='line'><span class="n">wasGood</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">TrueClass</span> <span class="err">回傳有沒有成功</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Kernel#exec</li>
</ul>


<p>Return: none, the current process is replaced and never continues</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">exec</span><span class="p">(</span> <span class="s2">&quot;echo &#39;hi&#39;&quot;</span> <span class="p">)</span>
</span><span class='line'><span class="nb">exec</span><span class="p">(</span> <span class="n">cmd</span> <span class="p">)</span> <span class="c1"># Note: this will never be reached because of the line above</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方文件：<br/>
<a href="http://ruby-doc.org/core-2.3.0/Kernel.html">Kernel</a><br/>
<a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/open3/rdoc/Open3.html#method-c-pipeline">Open3 - 可執行精密的操作</a></p>

<p>參考文件： <br/>
<a href="http://stackoverflow.com/questions/2232/calling-shell-commands-from-ruby">Calling shell commands from Ruby</a><br/>
<a href="http://tech.natemurray.com/2007/03/ruby-shell-commands.html">6 Ways to Run Shell Commands in Ruby Tuesday</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 中的 Block & Yield & Proc & Lambda]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/06/block-yield-proc-lambda/"/>
    <updated>2016-02-06T10:37:37+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/06/block-yield-proc-lambda</id>
    <content type="html"><![CDATA[<p>在學 ruby 時，經常會搞不清楚這四個，因為都非常相像!</p>

<!-- more -->


<h1>block</h1>

<p>什麼是 block ?</p>

<p>在 ruby 中 <code>block</code> 就是只 <code>do..end</code> || <code>{}</code> 包起來的區塊，就稱為 <code>block</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># =&gt; 1,2,3</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">].</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">i</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; 1,2,3</span>
</span></code></pre></td></tr></table></div></figure>


<p>基本上兩個是等價的，但是慣例上，一行會用 <code>{}</code> ，多行則是用 <code>do..end</code><br/>
<code>block</code> 無法單獨存在，必須放在 <code>method</code> 後面</p>

<p>另外 <code>block</code> 是可以傳遞的，用 <code>&amp;</code> 表示</p>

<h1>yield</h1>

<p><code>yield</code> 其實就是調用 <code>block</code> 的一種方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Array</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">iterate!</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">yield</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">array</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">array</span><span class="o">.</span><span class="n">iterate!</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="n">n</span> <span class="o">**</span> <span class="mi">2</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">array</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; [1, 4, 9, 16]</span>
</span></code></pre></td></tr></table></div></figure>


<p>其實就是再把 <code>&amp;block</code> 的寫法簡化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">test</span>
</span><span class='line'>  <span class="k">yield</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">test</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">block</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>procedure (proc)</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">who_am_i</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">block</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">who_am_i</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; Proc</span>
</span></code></pre></td></tr></table></div></figure>


<p>有此理解，透過 <code>&amp;block</code> 將程式碼傳遞過去後，其實它就是 <code>proc</code>。</p>

<p>跟 <code>block</code> 不同的地方是，<code>proc</code> 是可保存的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pro</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span>  <span class="nb">puts</span> <span class="n">a</span><span class="p">}</span>
</span><span class='line'><span class="c1">#=&gt; &lt;Proc:0x007fcb23ad2640@(irb):1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span> <span class="o">=</span> <span class="nb">proc</span> <span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span>  <span class="nb">puts</span> <span class="n">a</span><span class="p">}</span>
</span><span class='line'><span class="c1">#=&gt; &lt;Proc:0x007fcb23ad2640@(irb):1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt;nil</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span><span class="o">.</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span> <span class="c1">#非正規用法</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt;nil</span>
</span><span class='line'>
</span><span class='line'><span class="n">pro</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt; 123</span>
</span></code></pre></td></tr></table></div></figure>


<p>此時就會被 <code>p</code> 存起來，因此引用時就不需加上 <code>&amp;</code></p>

<h1>lambda</h1>

<p>lambda 與 method 用法相同，概念是一樣的<br/>
不同的是 <code>Method</code> 是有名字的method，而 <code>lambda</code> 是匿名 method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">lam</span> <span class="o">=</span> <span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">a</span><span class="p">}</span>
</span><span class='line'><span class="c1">#=&gt; &lt;Proc:0x007fcb23aa1860@(irb):1 (lambda)&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1">#=&gt; Proc 有此可知，lambda 的原型是 proc</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span>
</span><span class='line'><span class="c1">#NoMethodError: undefined method `l&#39; for main:Object</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span><span class="o">.</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span> <span class="c1">#非正規用法</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span><span class='line'>
</span><span class='line'><span class="n">lam</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">123</span><span class="p">)</span>
</span><span class='line'><span class="mi">123</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>lambda 跟 proc 非常類似，主要有兩個差異</p>

<h3>1.lambda 會檢查參數的個數</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">args</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
</span><span class='line'>  <span class="n">one</span><span class="p">,</span> <span class="n">two</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">code</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">one</span><span class="p">,</span> <span class="n">two</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">args</span><span class="p">(</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;Give me a </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">c</span><span class="o">.</span><span class="n">class</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">})</span>
</span><span class='line'><span class="c1"># =&gt; Give me a 1 and a 2 and a NilClass</span>
</span><span class='line'>
</span><span class='line'><span class="n">args</span><span class="p">(</span><span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;Give me a </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">c</span><span class="o">.</span><span class="n">class</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">})</span>
</span><span class='line'><span class="c1"># *.rb:8: ArgumentError: wrong number of arguments (2 for 3) (ArgumentError)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2.lambda 的return 會繼續執行，proc 則會直接終止</h3>

<p><code>lambda</code> 比較像是一個 method 的 return <br/>
<code>proc</code> 則是比較像是 一整個 method 的 return</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">proc_return</span>
</span><span class='line'>  <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;Proc.new&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="k">return</span> <span class="s2">&quot;proc_return method finished&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">lambda_return</span>
</span><span class='line'>  <span class="nb">lambda</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;lambda&quot;</span> <span class="p">}</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="k">return</span> <span class="s2">&quot;lambda_return method finished&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">proc_return</span>
</span><span class='line'><span class="no">Proc</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">lambda_return</span>
</span><span class='line'><span class="n">lambda_return</span> <span class="nb">method</span> <span class="n">finished</span>
</span><span class='line'><span class="c1">#=&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用時機</h3>

<p>在某些情況下，使用 <code>lambda</code> 會比 <code>proc</code> 還簡約。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">generic_return</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
</span><span class='line'>  <span class="n">one</span><span class="p">,</span> <span class="n">two</span>    <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">three</span><span class="p">,</span> <span class="n">four</span> <span class="o">=</span> <span class="n">code</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">one</span><span class="p">,</span> <span class="n">two</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="s2">&quot;Give me a </span><span class="si">#{</span><span class="n">three</span><span class="si">}</span><span class="s2"> and a </span><span class="si">#{</span><span class="n">four</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">generic_return</span><span class="p">(</span><span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">|</span> <span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">2</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">generic_return</span><span class="p">(</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">|</span> <span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">2</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">generic_return</span><span class="p">(</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">|</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">;</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">2</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">generic_return</span><span class="p">(</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">|</span> <span class="o">[</span><span class="n">x</span> <span class="o">+</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">2</span><span class="o">]</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; Give me a 3 and a 4</span>
</span><span class='line'><span class="c1"># =&gt; *.rb:9: unexpected return (LocalJumpError)</span>
</span><span class='line'><span class="c1"># =&gt; Give me a 4 and a</span>
</span><span class='line'><span class="c1"># =&gt; Give me a 3 and a 4</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># proc 需再用 array 包覆起來</span>
</span></code></pre></td></tr></table></div></figure>


<h1>lambda 新寫法</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># bad</span>
</span><span class='line'><span class="nb">lambda</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="err">​​</span><span class="o">|</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="p">}</span>
</span><span class='line'><span class="nb">lambda</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># good</span>
</span><span class='line'><span class="nb">lambda</span> <span class="o">=</span> <span class="o">-&gt;</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="p">}</span>
</span><span class='line'><span class="nb">lambda</span><span class="o">.</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="http://rubyer.me/blog/917/">理解Ruby的4种闭包：blocks, Procs, lambdas 和 Methods。</a><br/>
<a href="https://ruby-china.org/topics/10414">聊聊 Ruby 中的 block, proc 和 lambda</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[例外處理 Rescue Exception]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/04/rescue-exception/"/>
    <updated>2016-02-04T21:51:38+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/04/rescue-exception</id>
    <content type="html"><![CDATA[<p>在 rails 當中，當發生例外時就會爆錯，畫面就會不見。<br/>
但有時我們並不希望讓它這樣，因此可以用 rescue 才處理掉這些例外發生時，該執行的動作。</p>

<!-- more -->


<h1>例外處理</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1"># 有可能發生例外的處理動作</span>
</span><span class='line'><span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># 例外發生時的處理措施</span>
</span><span class='line'><span class="k">ensure</span>
</span><span class='line'>  <span class="c1"># 無論有沒有發生例外，這一段都一定會執行</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>分開處理例外</h1>

<p>可以給予不同例外，執行不同動作</p>

<p>順序應為最特殊為第一位，以此類推<br/>
若要在最後包含所有例外，可以使用rescue Exception</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1"># 有可能發生例外的處理動作</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">ArgumentError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># 例外發生時的處理措施</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">TypeError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># 例外發生時的處理措施</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># 例外發生時的處理措施</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果沒有指定變數，例外物件會自動存放在：<code>$!</code>及<code>$@</code>變數中<br/>
<code>$!</code>：最後發生例外的物件<br/>
<code>$@</code>：呈現最後例外所發生的位置和資計</p>

<h1>重來</h1>

<p>例外發生後，再重新執行一次</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1"># 有可能發生例外的處理動作</span>
</span><span class='line'><span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="k">retry</span> <span class="c1">#重新再跑</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>例外語法的簡化</h1>

<p>如果例外 begin &amp; end 的範圍剛好就是整個方法的範圍，就可以省略。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">rescue</span>
</span><span class='line'>  <span class="c1">#有可能發生例外的處理動作</span>
</span><span class='line'><span class="k">rescue</span>
</span><span class='line'>  <span class="c1">#例外發生時的處理措施</span>
</span><span class='line'><span class="k">ensure</span>
</span><span class='line'>  <span class="c1">#無論是否發生例外都會執行</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>自行產生例外</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">test</span>
</span><span class='line'>  <span class="k">raise</span> <span class="no">StandardError</span><span class="p">,</span> <span class="s2">&quot;test error&quot;</span>
</span><span class='line'>  <span class="c1">#丟例外出來 raise(例外名稱, 例外訊息)</span>
</span><span class='line'><span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>參考文件：<br/>
<a href="http://blog.xuite.net/yschu/wretch/104912690-Ruby+-+Chapter+09+%E4%BE%8B%E5%A4%96%E8%99%95%E7%90%86(exception">Ruby - Chapter 09 例外處理(exception)</a>)<br/>
<a href="http://blog.tonycube.com/2011/07/ruby8.html">Ruby學習筆記(8) – 錯誤與例外處理</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定 Module 和 Class 檔案]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/01/customer-module-class/"/>
    <updated>2016-02-01T22:19:13+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/01/customer-module-class</id>
    <content type="html"><![CDATA[<p>在 rails 當中，可以自訂一些好用方便的檔案，在適當的時機來使用。</p>

<!-- more -->


<h1>method</h1>

<p>在 <code>lib/require/object.rb</code>，可以自行新增 class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Object</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">is?</span><span class="p">(</span><span class="o">*</span><span class="n">objects</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">object</span> <span class="k">in</span> <span class="n">objects</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span> <span class="k">if</span> <span class="nb">self</span> <span class="o">==</span> <span class="n">object</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>require</h1>

<p>但要記得要在使用的檔案，先 require 才能夠使用</p>

<p>也可以直接在 <code>config/initializer</code> 新增 <code>require.rb</code> 檔案，將檔案 require 進來，就不用每個檔案上面都 require 了。</p>

<blockquote><p><code>initializer</code> 裡面的檔案，程式一執行就會全部都執行了</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#單個檔案</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/lib/require/object.rb&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#多個檔案</span>
</span><span class='line'><span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/lib/require/object.rb&quot;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">require</span> <span class="n">file</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#lib 底下所有檔案</span>
</span><span class='line'><span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/lib/**/*.rb&quot;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">require</span> <span class="n">file</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 檔案 &amp;&amp; 資料夾名稱可自訂 ex: monkey_patches</span>
</span></code></pre></td></tr></table></div></figure>


<h1>使用</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">is?</span><span class="p">(</span><span class="s2">&quot;yes&quot;</span><span class="p">,</span> <span class="s2">&quot;no&quot;</span><span class="p">,</span> <span class="s2">&quot;hello)</span>
</span><span class='line'><span class="s2">#=&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span><span class="n">hello</span><span class="s2">&quot;.is?(&quot;</span><span class="n">yes</span><span class="s2">&quot;, &quot;</span><span class="n">no</span><span class="s2">&quot;)</span>
</span><span class='line'><span class="s2">#=&gt; false</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
