<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Regular | Leon's Blogging]]></title>
  <link href="http://mgleon08.github.com/blog/categories/regular/atom.xml" rel="self"/>
  <link href="http://mgleon08.github.com/"/>
  <updated>2016-02-24T22:16:23+08:00</updated>
  <id>http://mgleon08.github.com/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[正規表示式 Regular Expression]]></title>
    <link href="http://mgleon08.github.com/blog/2016/02/07/regular-expression/"/>
    <updated>2016-02-07T15:40:31+08:00</updated>
    <id>http://mgleon08.github.com/blog/2016/02/07/regular-expression</id>
    <content type="html"><![CDATA[<p>在網頁中經常要確認一些格式，像是身分證格式必須要 10 碼，開頭是大寫 A-Z ，第二個數字必須是 0 or 1，這時就能夠用 <code>Regular Expression</code> 來做判斷。</p>

<!-- more -->


<pre><code class="ruby">身份證 
/[A-Z][12]\d{8}/

信箱
/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i

不允許信箱中有多個點
/\A[\w+\-.]+@[a-z\d\-]+(\.[a-z\d\-]+)*\.[a-z]+\z/i
</code></pre>

<h1>範例</h1>

<pre><code class="ruby">regex = /([A-Z])([12])\d{8}/  #前面兩個()起來代表是有意義的，可以連同存取起來

match = "A123456789".match(regex)
#=&gt; #&lt;MatchData "A123456789" 1:"A" 2:"1"&gt;

match[0]
#=&gt; "A123456789"
match[1]
#=&gt; "A"
match[2]
#=&gt; "1"
</code></pre>

<h1>Regex quick reference</h1>

<pre><code class="ruby">[abc]   #A single character of: a, b, or c
[^abc]  #Any single character except: a, b, or c
[a-z]   #Any single character in the range a-z
[a-zA-Z]    #Any single character in the range a-z or A-Z

^   #Start of line =&gt; /^ab/，開頭兩個有 ab 即可
$   #End of line =&gt; /ab$/，後面兩個有 ab 即可

\A  #Start of string
\z  #End of string
.   #Any single character

\s = [ \r\t\n\f] #Any whitespace character
\S = [^ \r\t\n\f] #Any non-whitespace character

\d = [0-9]  #Any digit
\D = [^0-9]  #Any non-digit

\w = [a-zA-Z0-9_] #Any word character (letter, number, underscore)
\W = [^a-zA-Z0-9_] #Any non-word character

\b  #Any word boundary
(...)   #Capture everything enclosed
(a|b)   #a or b

a?  #Zero or one of a
a*  #Zero or more of a
a+  #One or more of a

a{3}    #Exactly 3 of a
a{3,}   #3 or more of a
a{,6}   #ths most 6 of a
a{3,6}  #Between 3 and 6 of a

options: 
i #case insensitive 
m #make dot match newlines 
x #ignore whitespace in regex 
o #perform #{...} substitutions only once
</code></pre>

<p>參考文件：<br/>
<a href="https://atedev.wordpress.com/2007/11/23/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%A4%BA%E5%BC%8F-regular-expression/">正規表示式 Regular Expression</a></p>

<p>練習：<br/>
<a href="http://rubular.com/">Rubular</a><br/>
<a href="https://regexcrossword.com/">Regex Cross­word</a></p>
]]></content>
  </entry>
  
</feed>
