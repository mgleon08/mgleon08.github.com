<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Scrum | Leon's Blogging]]></title>
  <link href="https://mgleon08.github.io/blog/categories/scrum/atom.xml" rel="self"/>
  <link href="https://mgleon08.github.io/"/>
  <updated>2020-07-15T22:48:50+08:00</updated>
  <id>https://mgleon08.github.io/</id>
  <author>
    <name><![CDATA[LeonJi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scrum 簡單介紹]]></title>
    <link href="https://mgleon08.github.io/blog/2019/03/07/scrum/"/>
    <updated>2019-03-07T21:51:10+08:00</updated>
    <id>https://mgleon08.github.io/blog/2019/03/07/scrum</id>
    <content type="html"><![CDATA[<p>最近想在團隊中試著導入 scrum，因此先來瞭解一下 scrum 的概念</p>

<!-- more -->


<h1>Waterfall vs Agile</h1>

<p><img src="https://projectresources.cdt.ca.gov/wp-content/uploads/sites/50/2017/08/traditional-waterfall-versus-agile.png" alt="" /></p>

<h1>Iron Triangle</h1>

<p><img src="https://wac-cdn.atlassian.com/dam/jcr:6bd4fa76-577f-40c4-a12d-784860d0dc42/waterfall-v-agile-iron-triangle-v03.png?cdnVersion=ks" alt="The iron triangle of planning " /></p>

<ul>
<li>Scope is the work to be done – such as features and functionalities – to deliver a working product.</li>
<li>Resources include budget and team members working to deliver and execute.</li>
<li>Time is when teams will deliver to the market such as releases and milestones.</li>
</ul>


<p><a href="https://www.atlassian.com/agile/agile-at-scale/agile-iron-triangle">The iron triangle of planning</a></p>

<h1>Scrum</h1>

<p><img src="https://res.infoq.com/news/2013/03/anime-scrum-primer/en/resources/anime_scrum_overview_small.png" alt="" /></p>

<h2><a href="https://agilemanifesto.org/iso/en/manifesto.html">Manifesto for Agile Software Development 敏捷宣言</a></h2>

<ul>
<li><code>個人與互動</code> 重於 <code>流程與工具</code></li>
<li><code>可用的軟體</code> 重於 <code>詳盡的文件</code></li>
<li><code>與客戶合作</code> 重於 <code>合約協商</code> </li>
<li><code>回應變化</code> 重於 <code>遵循計畫</code></li>
</ul>


<h2>Scrum Role</h2>

<ol>
<li>Product Owner(PO，產品負責人)

<ul>
<li>為產品的成敗負責</li>
<li>負責管理產品需求並決定需求的施工順序</li>
<li>負責回答問題與釐清需求</li>
</ul>
</li>
<li>Scrum Master(SM，無中文名稱)

<ul>
<li>監督流程</li>
<li>協助團隊持續改善開發流程</li>
<li>排除任何阻礙開發活動的事件</li>
</ul>
</li>
<li>Development Team(Dev Team，開發團隊)

<ul>
<li>負責開發軟體</li>
<li>決定細節，執行任務</li>
</ul>
</li>
<li>stakeholder (利益相關者)

<ul>
<li>和軟體開發專案有關，但是卻沒有實際參與專案開發活動的人</li>
</ul>
</li>
</ol>


<h2>Scrum Object</h2>

<ol>
<li>Item(物件) or Story(故事)：

<ul>
<li>由 PO 來定義產出，Story 的 Scope 必須是可以讓團隊在一般的速率下完成 3 - 5 個為佳，太多會太雜，太少會讓團隊感覺到這次的 Sprint 產出沒感覺，對團隊信心是個打擊</li>
</ul>
</li>
<li>Task(工作)：

<ul>
<li>由 Dev Team 列出 Story 所需完成的工作項目，並由 Dev Team 自行分配</li>
</ul>
</li>
<li>Product Backlog(產品待辦清單)：

<ul>
<li>由 PO 負責整理的產品願景圖，以 Story 為單位，開始順序由上而下</li>
<li>As a user, I can do something so that I can achieve xxx</li>
<li><a href="https://www.crisp.se/wp-content/uploads/2012/06/ProductBacklog.xls">ProductBacklog.xls</a></li>
</ul>
</li>
<li>Sprint Backlog(衝刺待辦清單)：

<ul>
<li>Dev Team 向 PO 承諾這個 Sprint 會盡力完成的 Story List，以 Task 為單位</li>
</ul>
</li>
<li>Potentially Shippable Product Increment(潛在可交付產品增量)：

<ul>
<li>Dev Team 的產出，就是這個 Spring 所完成的項目，並且客戶需要就可以立即上線的</li>
</ul>
</li>
<li>Burndown Chart(燃盡圖)：

<ul>
<li>剩餘的 Sprint Backlog，看看還剩多少才能清空，以 Task 大小為單位</li>
<li>把所有 stories 的 tasks 施工的小時數加總起來，每次 daily Scrum 報告已經完成哪些 tasks，並將總時數減掉完成時數，畫成一個表，團隊就可以知道進度是否正常</li>
<li><a href="http://www.uml.org.cn/SoftWareProcess/images/2011061511.png">Burndown Chart</a></li>
</ul>
</li>
</ol>


<h2>Scrum Ｍeeting</h2>

<blockquote><p>Scrum 活動每一個都是有它的目的和時間限制(Time Boxed)
Spring n 個禮拜，所有活動抓 n 小時</p></blockquote>

<ol>
<li>Sprint(衝刺)：

<ul>
<li>團隊決定哪些 Item 後，就開始去衝刺</li>
<li>長度定義上是 1 - 4 個禮拜，但實務上不要多過2個禮拜</li>
<li>長度應該要保持穩定，盡可能不變，這樣才容易讓團隊掌握節奏，也容易預估和比較 Sprint 內的工作量</li>
<li>大原則是 Sprint 內的 Sprint Backlog 不改變(有原則就有例外)</li>
</ul>
</li>
<li>Daily Scrum(每日站立會議)：

<ul>
<li>每天 10 - 15 分鐘不能超時</li>
<li>目的是讓團隊資訊同步</li>
<li>一定要站著為了讓大家長話短說</li>
<li>主要報告三件事

<ul>
<li>昨天做什麼以協助團隊達成sprint目標</li>
<li>今天準備做什麼以協助團隊達成sprint目標</li>
<li>有沒有遇到任何阻礙團隊達成sprint目標的事情</li>
</ul>
</li>
</ul>
</li>
<li>Sprint Planning Meeting(衝刺規劃會議)：

<ul>
<li>討論這次 sprint 所要開發的需求（stories）</li>
<li>將 story 細分為若干個 task，並估算每個 task 所需的時間（以小時計算</li>
<li>Story 優先順序 PO 決定</li>
<li>選多少 Item 由 Dev Team 決定</li>
<li>會議後會產生 Spring Backlog，上面完整寫出這次 Spring 所需要的所有資訊</li>
</ul>
</li>
<li>Product Backlog Refinement / PBR(產品待辦清單精煉會議)：

<ul>
<li>PO 跟 Dev Team 一起討論近期內會開始的 Story</li>
<li>從商業和使用者角度切入，儘可能不觸及技術細節</li>
</ul>
</li>
<li>Sprint Review(衝刺檢視會議)：

<ul>
<li>Sprint 結束時針對這次 Sprint 產出的會議</li>
<li>PO 邀請利害關係人對產出給予意見，必須是可用的功能才算產出</li>
<li>不需準備 Powerpoint 或其他簡報，單純就軟體操作取得回饋</li>
</ul>
</li>
<li>Sprint Retrospective / Sprint Retro (衝刺回顧會議，也有人稱『自省』會議)：

<ul>
<li>Scrum Team 成員(Dev Team 或包含 PO)</li>
<li>Sprint Review 後，針對這個 Sprint 團隊的工作模式討論改善，並定出下個 Sprint 改善事項</li>
<li>原則上只有團隊成員才能參加，避免主管級參與，而變成檢討會議</li>
</ul>
</li>
</ol>


<blockquote><p>後面為非正規 Scrum - <a href="http://teddy-chen-tw.blogspot.com/2012/01/scrum-3.html">Scrum 是什麼（3）：三種補充文件</a></p></blockquote>

<ol>
<li>Sprint Info Page (One Page, Kick off)

<ul>
<li>sprint planning meeting 開完之後，SM 會寫一份 sprint info page 文件，這份文件包含了 sprint goal(一句簡短的句子，用以表明該 sprint 所要完成的主要功能)，stories，sprint，startTime，endTime，以及團隊成員。</li>
<li>SM 將這份文件寄給 Scrum Team 與其他有興趣的輔助角色人員，讓他們知道一個新的 sprint 已經開始了。</li>
</ul>
</li>
<li>Sprint Demo Agenda

<ul>
<li>Sprint 結束前一天，SM 要寫出 sprint demo 的議程表，並將此文件寄給 Scrum Team 與其他有興趣的輔助角色人員。</li>
<li>議程表包含所有要 demo 的項目，以及每一個 demo 項目要花多少時間，由誰負責 demo。</li>
<li>當 Developer 收到該議程表時，就可以準備明天要 demo 的資料。</li>
</ul>
</li>
<li>Sprint Summary Report (會議記錄)

<ul>
<li>當開完 sprint retrospective meeting 之後，SM 會準備此文件</li>
<li>內容包含

<ul>
<li>sprint 所完成功能的簡述</li>
<li>完成多少個 story points</li>
<li>好的以及有待改善的項目（最多只各列三點）</li>
<li>改善行動計畫</li>
</ul>
</li>
<li>將此文件寄給Scrum Team 以及其他有興趣的輔助角色人員，讓他們知道這個 sprint 已經正式結束了。</li>
</ul>
</li>
</ol>


<h2>Technical</h2>

<ul>
<li>單元測試(Unit Test)</li>
<li>系統測試(System Test)</li>
<li>CI 持續整合(Continuous Integration)</li>
<li>CD 持續交付(Continuous Delivery)</li>
</ul>


<h2>Benefit</h2>

<ul>
<li>快速驗證使用者反應</li>
<li>學習目標導向解決問題</li>
<li>學習團隊協作</li>
<li>快速失敗，快速學習</li>
<li>快速且頻繁的同步資訊</li>
<li>自組織團隊(Self Organizing Team)</li>
<li>自省會議(Retrospective)</li>
<li>引導(Facilitation)</li>
</ul>


<p>參考文件</p>

<ul>
<li><a href="https://funevo.com/2015/06/27/scrum-agile-project-management-software-development/">Scrum 懶人包 – 10分鐘讀懂 Scrum Agile 敏捷軟體開發專案入門（含中文英文名詞對照）</a></li>
<li><a href="https://medium.com/doflowy/%E4%BB%80%E9%BA%BC%E6%98%AFscrum-%E4%B8%8D%E6%98%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E4%B9%9F%E8%83%BD%E6%87%82%E7%9A%84scrum%E5%85%A5%E9%96%80%E6%95%99%E5%AD%B8-1cc6683575f8">什麼是Scrum？不是工程師也能懂的Scrum入門介紹！</a></li>
<li><a href="https://funevo.com/2015/06/01/scrum-agile-shu-dan-book-list-training/">Scrum與Agile敏捷開發書單和學習資源</a></li>
<li><a href="http://teddy-chen-tw.blogspot.com/2011/12/scrum-1.html">Scrum 是什麼</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
